{
  "accounts": {
    "GetAccounts": [
      {
        "urlTemplate": "/_apis/accounts",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of accounts for a specific owner or a specific member. One of the following parameters is required: ownerId, memberId.",
        "operationId": "Accounts_List",
        "host": "app.vssps.visualstudio.com",
        "parameters": {
          "path": [],
          "query": [
            {
              "name": "ownerId",
              "description": "ID for the owner of the accounts.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "memberId",
              "description": "ID for a member of the accounts.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "properties",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        }
      }
    ]
  },
  "pipelinepermissions": {
    "UpdatePipelinePermisionsForResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/pipelinepermissions",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Batch API to authorize/unauthorize a list of definitions for a multiple resources.",
        "operationId": "Pipeline Permissions_Update Pipeline Permisions For Resources",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourcePipelinePermissions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourcePipelinePermissions"
              }
            }
          }
        }
      }
    ],
    "GetPipelinePermissionsForResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/pipelinepermissions/{resourceType}/{resourceId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Given a ResourceType and ResourceId, returns authorized definitions for that resource.",
        "operationId": "Pipeline Permissions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          }
        }
      }
    ],
    "UpdatePipelinePermisionsForResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/pipelinepermissions/{resourceType}/{resourceId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Authorizes/Unauthorizes a list of definitions for a given resource.",
        "operationId": "Pipeline Permissions_Update Pipeline Permisions For Resource",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePipelinePermissions"
            }
          }
        }
      }
    ]
  },
  "approval": {
    "QueryApprovals": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/approvals",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List Approvals. This can be used to get a set of pending approvals in a pipeline, on an user or for a resource..",
        "operationId": "Approvals_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "approvalIds",
              "description": "",
              "required": false,
              "type": "string",
              "format": "array (uuid)"
            },
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ApprovalDetailsExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "steps",
                    "description": ""
                  },
                  {
                    "value": "permissions",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            }
          }
        }
      }
    ],
    "UpdateApprovals": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/approvals",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update approvals.",
        "operationId": "Approvals_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApprovalUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Approval"
              }
            }
          }
        }
      }
    ],
    "GetApproval": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/approvals/{approvalId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an approval.",
        "operationId": "Approvals_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "approvalId",
              "description": "Id of the approval.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ApprovalDetailsExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "steps",
                    "description": ""
                  },
                  {
                    "value": "permissions",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Approval"
            }
          }
        }
      }
    ]
  },
  "pipelineschecks": {
    "AddCheckConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/configurations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add a check configuration",
        "operationId": "Check Configurations_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        }
      }
    ],
    "GetCheckConfigurationsOnResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/configurations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get Check configuration by resource type and id",
        "operationId": "Check Configurations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "resourceType",
              "description": "resource type",
              "required": false,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "resource id",
              "required": false,
              "type": "string"
            },
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CheckConfigurationExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "settings",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckConfiguration"
              }
            }
          }
        }
      }
    ],
    "DeleteCheckConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/configurations/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete check configuration by id",
        "operationId": "Check Configurations_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "check configuration id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetCheckConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/configurations/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get Check configuration by Id",
        "operationId": "Check Configurations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CheckConfigurationExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "settings",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        }
      }
    ],
    "UpdateCheckConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/configurations/{id}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update check configuration",
        "operationId": "Check Configurations_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "check configuration id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "check configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckConfiguration"
            }
          }
        }
      }
    ],
    "QueryCheckConfigurationsOnResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/queryconfigurations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Get check configurations for multiple resources by resource type and id.",
        "operationId": "Check Configurations_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "The properties that should be expanded in the list of check configurations.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CheckConfigurationExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "settings",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of resources.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckConfiguration"
              }
            }
          }
        }
      }
    ],
    "EvaluateCheckSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/runs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Initiate an evaluation for a check in a pipeline",
        "operationId": "Check Evaluations_Evaluate",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CheckSuiteExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "resources",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckSuiteRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckSuite"
            }
          }
        }
      }
    ],
    "GetCheckSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/checks/runs/{checkSuiteId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get details for a specific check evaluation",
        "operationId": "Check Evaluations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "checkSuiteId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CheckSuiteExpandParameter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "resources",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CheckSuite"
            }
          }
        }
      }
    ]
  },
  "packaging": {
    "GetGlobalPermissions": [
      {
        "urlTemplate": "/{organization}/_apis/packaging/globalpermissions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all service-wide feed creation and administration permissions.",
        "operationId": "Service  Settings_GetGlobalPermissions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeIds",
              "description": "Set to true to add IdentityIds to the permission objects.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalPermission"
              }
            }
          }
        }
      }
    ],
    "SetGlobalPermissions": [
      {
        "urlTemplate": "/{organization}/_apis/packaging/globalpermissions",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set service-wide permissions that govern feed creation and administration.",
        "operationId": "Service  Settings_SetGlobalPermissions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "New permissions for the organization.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalPermission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalPermission"
              }
            }
          }
        }
      }
    ],
    "GetFeedChanges": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feedchanges",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Query to determine which feeds have changed since the last call, tracked through the provided continuationToken. Only changes to a feed itself are returned and impact the continuationToken, not additions or alterations to packages within the feeds.\n\nIf the project parameter is present, gets all feed changes in the given project.\nIf omitted, gets all feed changes in the organization.",
        "operationId": "Change  Tracking_Get Feed Changes",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeDeleted",
              "description": "If true, get changes for all feeds including deleted feeds. The default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "continuationToken",
              "description": "A continuation token which acts as a bookmark to a previously retrieved change. This token allows the user to continue retrieving changes in batches, picking up where the previous batch left off. If specified, all the changes that occur strictly after the token will be returned. If not specified or 0, iteration will start with the first change.",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "batchSize",
              "description": "Number of package changes to fetch. The default value is 1000. The maximum value is 2000.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedChangesResponse"
            }
          }
        }
      }
    ],
    "GetFeedChange": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feedchanges/{feedId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Query a feed to determine its current state.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Change  Tracking_Get Feed Change",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedChange"
            }
          }
        }
      }
    ],
    "GetFeedsFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feedrecyclebin",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Query for feeds within the recycle bin.\n\nIf the project parameter is present, gets all feeds in recycle bin in the given project.\nIf omitted, gets all feeds in recycle bin in the organization.",
        "operationId": "Feed Recycle Bin_List",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feed"
              }
            }
          }
        }
      }
    ],
    "PermanentDeleteFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feedrecyclebin/{feedId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Feed Recycle Bin_Permanent Delete Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "RestoreDeletedFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feedrecyclebin/{feedId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Feed Recycle Bin_Restore Deleted Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a feed, a container for various package types.\n\nFeeds can be created in a project if the project parameter is included in the request url.\nIf the project parameter is omitted, the feed will not be associated with a project and will be created at the organization level.",
        "operationId": "Feed  Management_Create Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A JSON object containing both required and optional attributes for the feed. Name is the only required value.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          }
        }
      }
    ],
    "GetFeeds": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all feeds in an account where you have the provided role access.\n\nIf the project parameter is present, gets all feeds in the given project.\nIf omitted, gets all feeds in the organization.",
        "operationId": "Feed  Management_Get Feeds",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "feedRole",
              "description": "Filter by this role, either Administrator(4), Contributor(3), or Reader(2) level permissions.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "FeedRole",
                "values": [
                  {
                    "value": "custom",
                    "description": "Unsupported."
                  },
                  {
                    "value": "none",
                    "description": "Unsupported."
                  },
                  {
                    "value": "reader",
                    "description": "Readers can only read packages and view settings."
                  },
                  {
                    "value": "contributor",
                    "description": "Contributors can do anything to packages in the feed including adding new packages, but they may not modify feed settings."
                  },
                  {
                    "value": "administrator",
                    "description": "Administrators have total control over the feed."
                  },
                  {
                    "value": "collaborator",
                    "description": "Collaborators have the same permissions as readers, but can also ingest packages from configured upstream sources."
                  }
                ]
              }
            },
            {
              "name": "includeDeletedUpstreams",
              "description": "Include upstreams that have been deleted in the response.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeUrls",
              "description": "Resolve names if true",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feed"
              }
            }
          }
        }
      }
    ],
    "DeleteFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove a feed and all its packages. The feed moves to the recycle bin and is reversible.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Feed  Management_Delete Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the settings for a specific feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Feed  Management_Get Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeDeletedUpstreams",
              "description": "Include upstreams that have been deleted in the response.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          }
        }
      }
    ],
    "UpdateFeed": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Change the attributes of a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Feed  Management_Update Feed",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A JSON object containing the feed settings to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeedUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          }
        }
      }
    ],
    "GetPackageChanges": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/packagechanges",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a batch of package changes made to a feed.  The changes returned are 'most recent change' so if an Add is followed by an Update before you begin enumerating, you'll only see one change in the batch.  While consuming batches using the continuation token, you may see changes to the same package version multiple times if they are happening as you enumerate.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Change  Tracking_Get Package Changes",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "A continuation token which acts as a bookmark to a previously retrieved change. This token allows the user to continue retrieving changes in batches, picking up where the previous batch left off. If specified, all the changes that occur strictly after the token will be returned. If not specified or 0, iteration will start with the first change.",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "batchSize",
              "description": "Number of package changes to fetch. The default value is 1000. The maximum value is 2000.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageChangesResponse"
            }
          }
        }
      }
    ],
    "QueryPackageMetrics": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/packagemetricsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Artifact  Details_Query Package Metrics",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageMetricsQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageMetrics"
              }
            }
          }
        }
      }
    ],
    "GetPackages": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/packages",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get details about all of the packages in the feed. Use the various filters to include or exclude information from the result set.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_Get Packages",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "protocolType",
              "description": "One of the supported artifact package types.",
              "required": false,
              "type": "string"
            },
            {
              "name": "packageNameQuery",
              "description": "Filter to packages that contain the provided string. Characters in the string must conform to the package name constraints.",
              "required": false,
              "type": "string"
            },
            {
              "name": "normalizedPackageName",
              "description": "[Obsolete] Used for legacy scenarios and may be removed in future versions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response. Default is True.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeAllVersions",
              "description": "True to return all versions of the package in the response. Default is false (latest version only).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isListed",
              "description": "Only applicable for NuGet packages, setting it for other package types will result in a 404. If false, delisted package versions will be returned. Use this to filter the response when includeAllVersions is set to true. Default is unset (do not return delisted packages).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "getTopPackageVersions",
              "description": "Changes the behavior of $top and $skip to return all versions of each package up to $top. Must be used in conjunction with includeAllVersions=true",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isRelease",
              "description": "Only applicable for Nuget packages. Use this to filter the response when includeAllVersions is set to true. Default is True (only return packages without prerelease versioning).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeDescription",
              "description": "Return the description for every version of each package in the response. Default is False.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Get the top N packages (or package versions where getTopPackageVersions=true)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Skip the first N packages (or package versions where getTopPackageVersions=true)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeDeleted",
              "description": "Return deleted or unpublished versions of packages in the response. Default is False.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isCached",
              "description": "[Obsolete] Used for legacy scenarios and may be removed in future versions.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "directUpstreamId",
              "description": "Filter results to return packages from a specific upstream.",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Package"
              }
            }
          }
        }
      }
    ],
    "GetPackage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/packages/{packageId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get details about a specific package.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_Get Package",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "The package Id (GUID Id, not the package name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeAllVersions",
              "description": "True to return all versions of the package in the response. Default is false (latest version only).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response. Default is True.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isListed",
              "description": "Only applicable for NuGet packages, setting it for other package types will result in a 404. If false, delisted package versions will be returned. Use this to filter the response when includeAllVersions is set to true. Default is unset (do not return delisted packages).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isRelease",
              "description": "Only applicable for Nuget packages. Use this to filter the response when includeAllVersions is set to true.  Default is True (only return packages without prerelease versioning).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeDeleted",
              "description": "Return deleted or unpublished versions of packages in the response. Default is False.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeDescription",
              "description": "Return the description for every version of each package in the response. Default is False.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "QueryPackageVersionMetrics": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/Packages/{packageId}/versionmetricsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Artifact  Details_Query Package Version Metrics",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionMetricsQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageVersionMetrics"
              }
            }
          }
        }
      }
    ],
    "GetPackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/Packages/{packageId}/versions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of package versions, optionally filtering by state.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_Get Package Versions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "Id of the package (GUID Id, not name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeUrls",
              "description": "True to include urls for each version. Default is true.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isListed",
              "description": "Only applicable for NuGet packages. If false, delisted package versions will be returned.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isDeleted",
              "description": "If set specifies whether to return only deleted or non-deleted versions of packages in the response. Default is unset (return all versions).",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageVersion"
              }
            }
          }
        }
      }
    ],
    "GetPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/Packages/{packageId}/versions/{packageVersionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get details about a specific package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_Get Package Version",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "Id of the package (GUID Id, not name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersionId",
              "description": "Id of the package version (GUID Id, not name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeUrls",
              "description": "True to include urls for each version. Default is true.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isListed",
              "description": "Only applicable for NuGet packages. If false, delisted package versions will be returned.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "isDeleted",
              "description": "This does not have any effect on the requested package version, for other versions returned specifies whether to return only deleted or non-deleted versions of packages in the response. Default is unset (return all versions).",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageVersion"
            }
          }
        }
      }
    ],
    "GetPackageVersionProvenance": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/Packages/{packageId}/Versions/{packageVersionId}/provenance",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets provenance for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_GetPackageVersionProvenance",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "Id of the package (GUID Id, not name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "packageVersionId",
              "description": "Id of the package version (GUID Id, not name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageVersionProvenance"
            }
          }
        }
      }
    ],
    "GetFeedPermissions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/permissions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the permissions for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Feed  Management_Get Feed Permissions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeIds",
              "description": "True to include user Ids in the response.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "excludeInheritedPermissions",
              "description": "True to only return explicitly set permissions on the feed.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "identityDescriptor",
              "description": "Filter permissions to the provided identity.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeDeletedFeeds",
              "description": "If includeDeletedFeeds is true, then feedId must be specified by name and not by Guid.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedPermission"
              }
            }
          }
        }
      }
    ],
    "SetFeedPermissions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/permissions",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update the permissions on a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Feed  Management_Set Feed Permissions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Permissions to set.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedPermission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedPermission"
              }
            }
          }
        }
      }
    ],
    "EmptyRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/RecycleBin/Packages",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Queues a job to remove all package versions from a feed's recycle bin",
        "operationId": "Recycle  Bin_Empty Recycle Bin",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperationReference"
            }
          }
        }
      }
    ],
    "GetRecycleBinPackages": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/RecycleBin/Packages",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Query for packages within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Recycle  Bin_Get Recycle Bin Packages",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "protocolType",
              "description": "Type of package (e.g. NuGet, npm, ...).",
              "required": false,
              "type": "string"
            },
            {
              "name": "packageNameQuery",
              "description": "Filter to packages matching this name.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response.  Default is True.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Get the top N packages.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Skip the first N packages.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeAllVersions",
              "description": "True to return all versions of the package in the response.  Default is false (latest version only).",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Package"
              }
            }
          }
        }
      }
    ],
    "GetRecycleBinPackage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/RecycleBin/Packages/{packageId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package and all its versions within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Recycle  Bin_Get Recycle Bin Package",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "The package Id (GUID Id, not the package name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response.  Default is True.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetRecycleBinPackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/RecycleBin/Packages/{packageId}/Versions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of package versions within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Recycle  Bin_Get Recycle Bin Package Versions",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "The package Id (GUID Id, not the package name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response.  Default is True.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecycleBinPackageVersion"
              }
            }
          }
        }
      }
    ],
    "GetRecycleBinPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/RecycleBin/Packages/{packageId}/Versions/{packageVersionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version within the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Recycle  Bin_Get Recycle Bin Package Version",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "The package Id (GUID Id, not the package name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "packageVersionId",
              "description": "The package version Id 9guid Id, not the version string).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeUrls",
              "description": "True to return REST Urls with the response.  Default is True.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RecycleBinPackageVersion"
            }
          }
        }
      }
    ],
    "DeleteFeedRetentionPolicies": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/retentionpolicies",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Retention  Policies_Delete Retention Policy",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetFeedRetentionPolicies": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/retentionpolicies",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Retention  Policies_Get Retention Policy",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedRetentionPolicy"
            }
          }
        }
      }
    ],
    "SetFeedRetentionPolicies": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/retentionpolicies",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Set the retention policy for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Retention  Policies_Set Retention Policy",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Feed retention policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeedRetentionPolicy"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedRetentionPolicy"
            }
          }
        }
      }
    ],
    "CreateFeedView": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/views",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new view on the referenced feed.\n\nThe project parameter must be supplied if the feed was created in a project.",
        "operationId": "Feed  Management_Create Feed View",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "View to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeedView"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedView"
            }
          }
        }
      }
    ],
    "GetFeedViews": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/views",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all views for a feed.\n\nThe project parameter must be supplied if the feed was created in a project.",
        "operationId": "Feed  Management_Get Feed Views",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedView"
              }
            }
          }
        }
      }
    ],
    "DeleteFeedView": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/views/{viewId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a feed view.\n\nThe project parameter must be supplied if the feed was created in a project.",
        "operationId": "Feed  Management_Delete Feed View",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "viewId",
              "description": "Name or Id of the view.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetFeedView": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/views/{viewId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a view by Id.\n\nThe project parameter must be supplied if the feed was created in a project.",
        "operationId": "Feed  Management_Get Feed View",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "viewId",
              "description": "Name or Id of the view.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedView"
            }
          }
        }
      }
    ],
    "UpdateFeedView": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/Feeds/{feedId}/views/{viewId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a view.\n\nThe project parameter must be supplied if the feed was created in a project.",
        "operationId": "Feed  Management_Update Feed View",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "viewId",
              "description": "Name or Id of the view.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "New settings to apply to the specified view.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeedView"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeedView"
            }
          }
        }
      }
    ],
    "GetBadge": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/public/packaging/Feeds/{feedId}/Packages/{packageId}/badge",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Generate a SVG badge for the latest version of a package.  The generated SVG is typically used as the image in an HTML link which takes users to the feed containing the package to accelerate discovery and consumption.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Artifact  Details_Get Badge",
        "host": "feeds.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or Id of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageId",
              "description": "Id of the package (GUID Id, not name).",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ]
  },
  "provenance": {
    "CreateSession": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/provenance/session/{protocol}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a session, a wrapper around a feed that can store additional metadata on the packages published to it.",
        "operationId": "Provenance_CreateSession",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "protocol",
              "description": "The protocol that the session will target",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The feed and metadata for the session",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SessionResponse"
            }
          }
        }
      }
    ]
  },
  "sbom": {},
  "maven": {
    "GetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/upstreaming",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the upstreaming behavior of a package within the context of a feed",
        "operationId": "Maven_Get Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The group id of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "The artifact id of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        }
      }
    ],
    "SetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/upstreaming",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
        "operationId": "Maven_Set Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The behavior to apply to the package within the scope of the feed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_Get Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "showDeleted",
              "description": "True to show information for deleted packages.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "PackageDelete": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version from the feed and move it to the feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_DeletePackageVersion",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "202": {
            "description": "The package has been successfully marked for deletion."
          }
        }
      }
    ],
    "UpdatePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update state for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_Update Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/RecycleBin/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Permanently delete a package from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_DeletePackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/RecycleBin/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_GetPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MavenPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestorePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/RecycleBin/groups/{groupId}/artifacts/{artifactId}/versions/{version}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_Restore Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Group ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "Artifact ID of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Set the 'Deleted' property to false to restore the package.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MavenRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateRecycleBinPackagesAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feed}/maven/RecycleBin/packagesBatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_Update Recycle Bin Packages",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feed",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MavenPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DownloadPackage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/maven/{groupId}/{artifactId}/{version}/{fileName}/content",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Fulfills Maven package file download requests by either returning the URL of the requested package file or, in the case of Azure DevOps Server (OnPrem), returning the content as a stream.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_DownloadPackage",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "GroupId of the maven package",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactId",
              "description": "ArtifactId of the maven package",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "Version of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileName",
              "description": "File name to download",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UpdatePackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/maven/packagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Maven_Update Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Feed which contains the packages to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MavenPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "npm": {
    "GetScopedPackageInfoAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a scoped package version (such as @scope/name).\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetScopedPackageVersion",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UnpublishScopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Unpublish a scoped package version (such as @scope/name).\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Unpublish Scoped Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UpdateScopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Npm_Update Scoped Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetPackageInfoAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about an unscoped package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetPackageVersion",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UnpublishPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Unpublish an unscoped package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Unpublish Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UpdatePackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Npm_Update Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetScopedUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/@{packageScope}/{unscopedPackageName}/upstreaming",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the upstreaming behavior of the (scoped) package within the context of a feed",
        "operationId": "Npm_GetPackageUpstreamingBehavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "The scope of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "The name of the scoped package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        }
      }
    ],
    "SetScopedUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/@{packageScope}/{unscopedPackageName}/upstreaming",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set the upstreaming behavior of a (scoped) package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
        "operationId": "Npm_Set Scoped Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "The scope of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "The name of the scoped package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The behavior to apply to the scoped package within the scope of the feed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetContentScopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}/content",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Npm_DownloadScopedPackage",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetReadmeScopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}/readme",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the Readme for a package version with an npm scope.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetScopedPackageReadme",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope\\name)",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope\\name)",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/{packageName}/upstreaming",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the upstreaming behavior of the (unscoped) package within the context of a feed",
        "operationId": "Npm_GetScopedPackageUpstreamingBehavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        }
      }
    ],
    "SetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/{packageName}/upstreaming",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set the upstreaming behavior of a (scoped) package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
        "operationId": "Npm_Set Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The behavior to apply to the scoped package within the scope of the feed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetContentUnscopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/{packageName}/versions/{packageVersion}/content",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an unscoped npm package.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_DownloadPackage",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetReadmeUnscopedPackageAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packages/{packageName}/versions/{packageVersion}/readme",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the Readme for a package version that has no npm scope.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetPackageReadme",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UpdatePackagesAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/packagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Update Packages",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NpmPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeleteScopedPackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version with an npm scope from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Delete Scoped Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetScopedPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a scoped package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetScopedPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope/name)",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NpmPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestoreScopedPackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/@{packageScope}/{unscopedPackageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version with an npm scope from the recycle bin to its feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Restore Scoped Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageScope",
              "description": "Scope of the package (the 'scope' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "unscopedPackageName",
              "description": "Name of the package (the 'name' part of @scope/name).",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NpmRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version without an npm scope from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Delete Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about an unscoped package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_GetPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NpmPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestorePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version without an npm scope from the recycle bin to its feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Restore Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NpmRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateRecycleBinPackagesAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/npm/RecycleBin/PackagesBatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Npm_Update Recycle Bin Packages",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NpmPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "nuget": {
    "GetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/upstreaming",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the upstreaming behavior of a package within the context of a feed",
        "operationId": "NuGet_Get Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        }
      }
    ],
    "SetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/upstreaming",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
        "operationId": "NuGet_Set Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The behavior to apply to the package within the scope of the feed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Send a package version from the feed to its paired recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Delete Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package to delete.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package to delete.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Get Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "showDeleted",
              "description": "True to include deleted packages in the response.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UpdatePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set mutable state on a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Update Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "New state to apply to the referenced package.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DownloadPackage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packages/{packageName}/versions/{packageVersion}/content",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Download a package version directly.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Download Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "sourceProtocolVersion",
              "description": "Unused",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UpdatePackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/packagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Update Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NuGetPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Delete Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "View a package version's deletion/recycled status\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_GetPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NuGetPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestorePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version from a feed's recycle bin back into the active feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Restore Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Set the 'Deleted' member to 'false' to apply the restore operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NuGetRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateRecycleBinPackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/nuget/RecycleBin/packagesBatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "NuGet_Update Recycle Bin Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data. <c>Operation</c> must be <c>PermanentDelete</c> or <c>RestoreToFeed</c>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NuGetPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "pypi": {
    "GetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/upstreaming",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the upstreaming behavior of a package within the context of a feed",
        "operationId": "Python_Get Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        }
      }
    ],
    "SetUpstreamingBehavior": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/upstreaming",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set the upstreaming behavior of a package within the context of a feed\n\nThe package does not need to necessarily exist in the feed prior to setting the behavior.\nThis assists with packages that are not yet ingested from an upstream, yet the feed owner wants\nto apply a specific behavior on the first ingestion.",
        "operationId": "Python_Set Upstreaming Behavior",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "The name or id of the feed",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "The name of the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The behavior to apply to the package within the scope of the feed",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpstreamingBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version, moving it to the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Delete Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Get Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "showDeleted",
              "description": "True to show information for deleted package versions.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UpdatePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update state for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Update Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Details to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DownloadPackage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packages/{packageName}/versions/{packageVersion}/{fileName}/content",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Download a python package file directly. This API is intended for manual UI download options, not for programmatic access and scripting.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Download Package",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileName",
              "description": "Name of the file in the package",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UpdatePackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/packagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Update Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PyPiPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version from the feed, moving it to the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Delete Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_GetPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PyPiPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestorePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Restore Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Set the 'Deleted' state to 'false' to restore the package to its feed.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PyPiRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateRecycleBinPackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/pypi/RecycleBin/packagesBatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Python_Update Recycle Bin Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Feed which contains the packages to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data. <c>Operation</c> must be <c>PermanentDelete</c> or <c>RestoreToFeed</c>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PyPiPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "upack": {
    "DeletePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version from a feed's recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Delete Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "GetPackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Show information about a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Get Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "showDeleted",
              "description": "True to show information for deleted versions",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        }
      }
    ],
    "UpdatePackageVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update information for a package version.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Update Package Version",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdatePackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/packagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Update several packages from a single feed in a single request. The updates to the packages do not happen atomically.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Update Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UPackPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a package version from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Delete Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPackageVersionMetadataFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about a package version in the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_GetPackageVersionFromRecycleBin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UPackPackageVersionDeletionState"
            }
          }
        }
      }
    ],
    "RestorePackageVersionFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/RecycleBin/packages/{packageName}/versions/{packageVersion}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Restore a package version from the recycle bin to its associated feed.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Restore Package Version From Recycle Bin",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Name or ID of the feed.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageName",
              "description": "Name of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "packageVersion",
              "description": "Version of the package.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Set the 'Deleted' property to 'false' to restore the package.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UPackRecycleBinPackageVersionDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateRecycleBinPackageVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/packaging/feeds/{feedId}/upack/RecycleBin/packagesBatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Delete or restore several package versions from the recycle bin.\n\nThe project parameter must be supplied if the feed was created in a project.\nIf the feed is not associated with any project, omit the project parameter from the request.",
        "operationId": "Universal_Update Recycle Bin Package Versions",
        "host": "pkgs.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "feedId",
              "description": "Feed which contains the packages to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Information about the packages to update, the operation to perform, and its associated data. <c>Operation</c> must be <c>PermanentDelete</c> or <c>RestoreToFeed</c>",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UPackPackagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "audit": {
    "GetActions": [
      {
        "urlTemplate": "/{organization}/_apis/audit/actions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all auditable actions filterable by area.",
        "operationId": "Actions_List",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "areaName",
              "description": "Optional. Get actions scoped to area",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditActionInfo"
              }
            }
          }
        }
      }
    ],
    "QueryLog": [
      {
        "urlTemplate": "/{organization}/_apis/audit/auditlog",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Queries audit log entries",
        "operationId": "Audit Log_Query",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "startTime",
              "description": "Start time of download window. Optional",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "endTime",
              "description": "End time of download window. Optional",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "batchSize",
              "description": "Max number of results to return. Optional",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Token used for returning next set of results from previous query. Optional",
              "required": false,
              "type": "string"
            },
            {
              "name": "skipAggregation",
              "description": "Skips aggregating events and leaves them as individual entries instead. By default events are aggregated. Event types that are aggregated: AuditLog.AccessLog.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuditLogQueryResult"
            }
          }
        }
      }
    ],
    "DownloadLog": [
      {
        "urlTemplate": "/{organization}/_apis/audit/downloadlog",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Downloads audit log entries.",
        "operationId": "Download Log_Download Log",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "format",
              "description": "File format for download. Can be \"json\" or \"csv\".",
              "required": true,
              "type": "string"
            },
            {
              "name": "startTime",
              "description": "Start time of download window. Optional",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "endTime",
              "description": "End time of download window. Optional",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "CreateStream": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create new Audit Stream",
        "operationId": "Streams_Create",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "daysToBackfill",
              "description": "The number of days of previously recorded audit data that will be replayed into the stream. A value of zero will result in only new events being streamed.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream entry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        }
      }
    ],
    "QueryAllStreams": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Return all Audit Streams scoped to an organization",
        "operationId": "Streams_Query All Streams",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditStream"
              }
            }
          }
        }
      }
    ],
    "UpdateStream": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update existing Audit Stream",
        "operationId": "Streams_Update Stream",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream entry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        }
      }
    ],
    "DeleteStream": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams/{streamId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete Audit Stream",
        "operationId": "Streams_Delete",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "streamId",
              "description": "Id of stream entry to delete",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "QueryStreamById": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams/{streamId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Return Audit Stream with id of streamId if one exists otherwise throw",
        "operationId": "Streams_Query Stream By Id",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "streamId",
              "description": "Id of stream entry to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        }
      }
    ],
    "UpdateStatus": [
      {
        "urlTemplate": "/{organization}/_apis/audit/streams/{streamId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update existing Audit Stream status",
        "operationId": "Streams_Update Status",
        "host": "auditservice.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "streamId",
              "description": "Id of stream entry to be updated",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "status",
              "description": "Status of the stream",
              "required": true,
              "type": "string",
              "enum": {
                "name": "AuditStreamStatus",
                "values": [
                  {
                    "value": "unknown",
                    "description": "The state has not been set, The stream is new"
                  },
                  {
                    "value": "enabled",
                    "description": "The stream is enabled and can deliver events"
                  },
                  {
                    "value": "disabledByUser",
                    "description": "The stream has been disabled by a user"
                  },
                  {
                    "value": "disabledBySystem",
                    "description": "The stream has been disabled by the system"
                  },
                  {
                    "value": "deleted",
                    "description": "The stream has been marked for deletion"
                  },
                  {
                    "value": "backfilling",
                    "description": "The stream is delivering old events"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuditStream"
            }
          }
        }
      }
    ]
  },
  "build": {
    "GetBuildControllers": [
      {
        "urlTemplate": "/{organization}/_apis/build/controllers",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets controller, optionally filtered by name",
        "operationId": "Controllers_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "name",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildController"
              }
            }
          }
        }
      }
    ],
    "GetBuildController": [
      {
        "urlTemplate": "/{organization}/_apis/build/controllers/{controllerId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a controller",
        "operationId": "Controllers_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controllerId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildController"
            }
          }
        }
      }
    ],
    "GetResourceUsage": [
      {
        "urlTemplate": "/{organization}/_apis/build/resourceusage",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets information about build resources in the system.",
        "operationId": "Resource Usage_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildResourceUsage"
            }
          }
        }
      }
    ],
    "GetRetentionHistory": [
      {
        "urlTemplate": "/{organization}/_apis/build/retention/history",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the retention history for the project collection. This includes pipelines that have custom retention rules that may prevent the retention job from cleaning them up, runs per pipeline with retention type, files associated with pipelines owned by the collection with retention type, and the number of files per pipeline.",
        "operationId": "History_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "daysToLookback",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildRetentionHistory"
            }
          }
        }
      }
    ],
    "GetBadge": [
      {
        "urlTemplate": "/{organization}/_apis/public/build/definitions/{project}/{definitionId}/badge",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "This endpoint is deprecated. Please see the Build Status REST endpoint.",
        "operationId": "Badge_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "The project ID or name.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "branchName",
              "description": "The name of the branch.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    ],
    "AuthorizeProjectResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/authorizedresources",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Authorizedresources_Authorize Project Resources",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        }
      }
    ],
    "GetProjectResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/authorizedresources",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Authorizedresources_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        }
      }
    ],
    "GetBuilds": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds",
        "verb": "get",
        "apiVersion": "7.1-preview.7",
        "description": "Gets a list of builds.",
        "operationId": "Builds_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "definitions",
              "description": "A comma-delimited list of definition IDs. If specified, filters to builds for these definitions.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "queues",
              "description": "A comma-delimited list of queue IDs. If specified, filters to builds that ran against these queues.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "buildNumber",
              "description": "If specified, filters to builds that match this build number. Append * to do a prefix search.",
              "required": false,
              "type": "string"
            },
            {
              "name": "minTime",
              "description": "If specified, filters to builds that finished/started/queued after this date based on the queryOrder specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "maxTime",
              "description": "If specified, filters to builds that finished/started/queued before this date based on the queryOrder specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "requestedFor",
              "description": "If specified, filters to builds requested for the specified user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "reasonFilter",
              "description": "If specified, filters to builds that match this reason.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "BuildReason",
                "values": [
                  {
                    "value": "none",
                    "description": "No reason. This value should not be used."
                  },
                  {
                    "value": "manual",
                    "description": "The build was started manually."
                  },
                  {
                    "value": "individualCI",
                    "description": "The build was started for the trigger TriggerType.ContinuousIntegration."
                  },
                  {
                    "value": "batchedCI",
                    "description": "The build was started for the trigger TriggerType.BatchedContinuousIntegration."
                  },
                  {
                    "value": "schedule",
                    "description": "The build was started for the trigger TriggerType.Schedule."
                  },
                  {
                    "value": "scheduleForced",
                    "description": "The build was started for the trigger TriggerType.ScheduleForced."
                  },
                  {
                    "value": "userCreated",
                    "description": "The build was created by a user."
                  },
                  {
                    "value": "validateShelveset",
                    "description": "The build was started manually for private validation."
                  },
                  {
                    "value": "checkInShelveset",
                    "description": "The build was started for the trigger ContinuousIntegrationType.Gated."
                  },
                  {
                    "value": "pullRequest",
                    "description": "The build was started by a pull request. Added in resource version 3."
                  },
                  {
                    "value": "buildCompletion",
                    "description": "The build was started when another build completed."
                  },
                  {
                    "value": "resourceTrigger",
                    "description": "The build was started when resources in pipeline triggered it"
                  },
                  {
                    "value": "triggered",
                    "description": "The build was triggered for retention policy purposes."
                  },
                  {
                    "value": "all",
                    "description": "All reasons."
                  }
                ]
              }
            },
            {
              "name": "statusFilter",
              "description": "If specified, filters to builds that match this status.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "BuildStatus",
                "values": [
                  {
                    "value": "none",
                    "description": "No status."
                  },
                  {
                    "value": "inProgress",
                    "description": "The build is currently in progress."
                  },
                  {
                    "value": "completed",
                    "description": "The build has completed."
                  },
                  {
                    "value": "cancelling",
                    "description": "The build is cancelling"
                  },
                  {
                    "value": "postponed",
                    "description": "The build is inactive in the queue."
                  },
                  {
                    "value": "notStarted",
                    "description": "The build has not yet started."
                  },
                  {
                    "value": "all",
                    "description": "All status."
                  }
                ]
              }
            },
            {
              "name": "resultFilter",
              "description": "If specified, filters to builds that match this result.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "BuildResult",
                "values": [
                  {
                    "value": "none",
                    "description": "No result"
                  },
                  {
                    "value": "succeeded",
                    "description": "The build completed successfully."
                  },
                  {
                    "value": "partiallySucceeded",
                    "description": "The build completed compilation successfully but had other errors."
                  },
                  {
                    "value": "failed",
                    "description": "The build completed unsuccessfully."
                  },
                  {
                    "value": "canceled",
                    "description": "The build was canceled before starting."
                  }
                ]
              }
            },
            {
              "name": "tagFilters",
              "description": "A comma-delimited list of tags. If specified, filters to builds that have the specified tags.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "properties",
              "description": "A comma-delimited list of properties to retrieve.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "$top",
              "description": "The maximum number of builds to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "A continuation token, returned by a previous call to this method, that can be used to return the next set of builds.",
              "required": false,
              "type": "string"
            },
            {
              "name": "maxBuildsPerDefinition",
              "description": "The maximum number of builds to return per definition.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deletedFilter",
              "description": "Indicates whether to exclude, include, or only return deleted builds.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "QueryDeletedOption",
                "values": [
                  {
                    "value": "excludeDeleted",
                    "description": "Include only non-deleted builds."
                  },
                  {
                    "value": "includeDeleted",
                    "description": "Include deleted and non-deleted builds."
                  },
                  {
                    "value": "onlyDeleted",
                    "description": "Include only deleted builds."
                  }
                ]
              }
            },
            {
              "name": "queryOrder",
              "description": "The order in which builds should be returned.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "BuildQueryOrder",
                "values": [
                  {
                    "value": "finishTimeAscending",
                    "description": "Order by finish time ascending."
                  },
                  {
                    "value": "finishTimeDescending",
                    "description": "Order by finish time descending."
                  },
                  {
                    "value": "queueTimeDescending",
                    "description": "Order by queue time descending."
                  },
                  {
                    "value": "queueTimeAscending",
                    "description": "Order by queue time ascending."
                  },
                  {
                    "value": "startTimeDescending",
                    "description": "Order by start time descending."
                  },
                  {
                    "value": "startTimeAscending",
                    "description": "Order by start time ascending."
                  }
                ]
              }
            },
            {
              "name": "branchName",
              "description": "If specified, filters to builds that built branches that built this branch.",
              "required": false,
              "type": "string"
            },
            {
              "name": "buildIds",
              "description": "A comma-delimited list that specifies the IDs of builds to retrieve.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "repositoryId",
              "description": "If specified, filters to builds that built from this repository.",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryType",
              "description": "If specified, filters to builds that built from repositories of this type.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Build"
              }
            }
          }
        }
      }
    ],
    "QueueBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds",
        "verb": "post",
        "apiVersion": "7.1-preview.7",
        "description": "Queues a build",
        "operationId": "Builds_Queue",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ignoreWarnings",
              "description": "",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "checkInTicket",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "sourceBuildId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "definitionId",
              "description": "Optional definition id to queue a build without a body. Ignored if there's a valid body",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        }
      }
    ],
    "UpdateBuilds": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds",
        "verb": "patch",
        "apiVersion": "7.1-preview.7",
        "description": "Updates multiple builds.",
        "operationId": "Builds_Update Builds",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The builds to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Build"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Build"
              }
            }
          }
        }
      }
    ],
    "DeleteBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.7",
        "description": "Deletes a build.",
        "operationId": "Builds_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}",
        "verb": "get",
        "apiVersion": "7.1-preview.7",
        "description": "Gets a build",
        "operationId": "Builds_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "propertyFilters",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        }
      }
    ],
    "UpdateBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.7",
        "description": "Updates a build.",
        "operationId": "Builds_Update Build",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "retry",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The build.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        }
      }
    ],
    "GetAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/{timelineId}/{recordId}/attachments/{type}/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a specific attachment.",
        "operationId": "Attachments_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "timelineId",
              "description": "The ID of the timeline.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "recordId",
              "description": "The ID of the timeline record.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "type",
              "description": "The type of the attachment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "The name of the attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "CreateArtifact": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/artifacts",
        "verb": "post",
        "apiVersion": "7.1-preview.5",
        "description": "Associates an artifact with a build.",
        "operationId": "Artifacts_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The artifact.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildArtifact"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildArtifact"
            }
          }
        }
      }
    ],
    "GetArtifacts": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/artifacts",
        "verb": "get",
        "apiVersion": "7.1-preview.5",
        "description": "Gets all artifacts for a build.",
        "operationId": "Artifacts_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildArtifact"
              }
            }
          }
        }
      }
    ],
    "GetAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/attachments/{type}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the list of attachments of a specific type that are associated with a build.",
        "operationId": "Attachments_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "type",
              "description": "The type of attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            }
          }
        }
      }
    ],
    "GetBuildChanges": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the changes associated with a build",
        "operationId": "Builds_Get Build Changes",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "The maximum number of changes to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeSourceChange",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Change"
              }
            }
          }
        }
      }
    ],
    "GetRetentionLeasesForBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/leases",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets all retention leases that apply to a specific build.",
        "operationId": "Builds_Get Retention Leases For Build",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetentionLease"
              }
            }
          }
        }
      }
    ],
    "GetBuildLogs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/logs",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the logs for a build.",
        "operationId": "Builds_Get Build Logs",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildLog"
              }
            }
          }
        }
      }
    ],
    "GetBuildLog": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/logs/{logId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets an individual log file for a build.",
        "operationId": "Builds_Get Build Log",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "logId",
              "description": "The ID of the log file.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "startLine",
              "description": "The start line.",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "endLine",
              "description": "The end line.",
              "required": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetBuildProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/properties",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets properties for a build.",
        "operationId": "Properties_Get Build Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "filter",
              "description": "A comma-delimited list of properties. If specified, filters to these specific properties.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "UpdateBuildProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/properties",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates properties for a build.",
        "operationId": "Properties_Update Build Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A json-patch document describing the properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "GetBuildReport": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/report",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a build report.",
        "operationId": "Report_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildReportMetadata"
            }
          }
        }
      }
    ],
    "UpdateStage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/stages/{stageRefName}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a build stage",
        "operationId": "Stages_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "stageRefName",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStageParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "AddBuildTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/tags",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Adds tags to a build.",
        "operationId": "Tags_Add Build Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The tags to add. Request body is composed directly from listed tags.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetBuildTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/tags",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets the tags for a build.",
        "operationId": "Tags_Get Build Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "UpdateBuildTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/tags",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Adds/Removes tags from a build.",
        "operationId": "Tags_Update Build Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The tags to add/remove.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTagParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "AddBuildTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/tags/{tag}",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Adds a tag to a build.",
        "operationId": "Tags_Add Build Tag",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "tag",
              "description": "The tag to add.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteBuildTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/tags/{tag}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Removes a tag from a build. NOTE: This API will not work for tags with special characters. To remove tags with special characters, use the PATCH method instead (in 6.0+)",
        "operationId": "Tags_Delete Build Tag",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "tag",
              "description": "The tag to remove.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetBuildTimeline": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/timeline/{timelineId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets details for a build",
        "operationId": "Timeline_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "timelineId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "changeId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "planId",
              "description": "",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Timeline"
            }
          }
        }
      }
    ],
    "GetBuildWorkItemsRefs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the work items associated with a build. Only work items in the same project are returned.",
        "operationId": "Builds_Get Build Work Items Refs",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "The maximum number of work items to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRef"
              }
            }
          }
        }
      }
    ],
    "GetBuildWorkItemsRefsFromCommits": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/builds/{buildId}/workitems",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the work items associated with a build, filtered to specific commits.",
        "operationId": "Builds_Get Build Work Items Refs From Commits",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "The ID of the build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "The maximum number of work items to return, or the number of commits to consider if no commit IDs are specified.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "A comma-delimited list of commit IDs.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRef"
              }
            }
          }
        }
      }
    ],
    "GetChangesBetweenBuilds": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the changes made to the repository between two given builds.",
        "operationId": "Builds_Get Changes Between Builds",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fromBuildId",
              "description": "The ID of the first build.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "toBuildId",
              "description": "The ID of the last build.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The maximum number of changes to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Change"
              }
            }
          }
        }
      }
    ],
    "CreateDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions",
        "verb": "post",
        "apiVersion": "7.1-preview.7",
        "description": "Creates a new definition.",
        "operationId": "Definitions_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "definitionToCloneId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "definitionToCloneRevision",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        }
      }
    ],
    "GetDefinitions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions",
        "verb": "get",
        "apiVersion": "7.1-preview.7",
        "description": "Gets a list of definitions.",
        "operationId": "Definitions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "name",
              "description": "If specified, filters to definitions whose names match this pattern.",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "A repository ID. If specified, filters to definitions that use this repository.",
              "required": false,
              "type": "string"
            },
            {
              "name": "repositoryType",
              "description": "If specified, filters to definitions that have a repository of this type.",
              "required": false,
              "type": "string"
            },
            {
              "name": "queryOrder",
              "description": "Indicates the order in which definitions should be returned.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DefinitionQueryOrder",
                "values": [
                  {
                    "value": "none",
                    "description": "No order"
                  },
                  {
                    "value": "lastModifiedAscending",
                    "description": "Order by created on/last modified time ascending."
                  },
                  {
                    "value": "lastModifiedDescending",
                    "description": "Order by created on/last modified time descending."
                  },
                  {
                    "value": "definitionNameAscending",
                    "description": "Order by definition name ascending."
                  },
                  {
                    "value": "definitionNameDescending",
                    "description": "Order by definition name descending."
                  }
                ]
              }
            },
            {
              "name": "$top",
              "description": "The maximum number of definitions to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "A continuation token, returned by a previous call to this method, that can be used to return the next set of definitions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "minMetricsTime",
              "description": "If specified, indicates the date from which metrics should be included.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "definitionIds",
              "description": "A comma-delimited list that specifies the IDs of definitions to retrieve.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "path",
              "description": "If specified, filters to definitions under this folder.",
              "required": false,
              "type": "string"
            },
            {
              "name": "builtAfter",
              "description": "If specified, filters to definitions that have builds after this date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "notBuiltAfter",
              "description": "If specified, filters to definitions that do not have builds after this date.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "includeAllProperties",
              "description": "Indicates whether the full definitions should be returned. By default, shallow representations of the definitions are returned.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLatestBuilds",
              "description": "Indicates whether to return the latest and latest completed builds for this definition.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "taskIdFilter",
              "description": "If specified, filters to definitions that use the specified task.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "processType",
              "description": "If specified, filters to definitions with the given process type.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "yamlFilename",
              "description": "If specified, filters to YAML definitions that match the given filename. To use this filter includeAllProperties should be set to true",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildDefinitionReference"
              }
            }
          }
        }
      }
    ],
    "DeleteDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.7",
        "description": "Deletes a definition and all associated builds.",
        "operationId": "Definitions_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.7",
        "description": "Gets a definition, optionally at a specific revision.",
        "operationId": "Definitions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "revision",
              "description": "The revision number to retrieve. If this is not specified, the latest version will be returned.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "minMetricsTime",
              "description": "If specified, indicates the date from which metrics should be included.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "propertyFilters",
              "description": "A comma-delimited list of properties to include in the results.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "includeLatestBuilds",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        }
      }
    ],
    "RestoreDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.7",
        "description": "Restores a deleted definition",
        "operationId": "Definitions_Restore Definition",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The identifier of the definition to restore.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "deleted",
              "description": "When false, restores a deleted definition.",
              "required": true,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        }
      }
    ],
    "UpdateDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}",
        "verb": "put",
        "apiVersion": "7.1-preview.7",
        "description": "Updates an existing build definition.  In order for this operation to succeed, the value of the \"Revision\" property of the request body must match the existing build definition's. It is recommended that you obtain the existing build definition by using GET, modify the build definition as necessary, and then submit the modified definition with PUT.",
        "operationId": "Definitions_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "secretsSourceDefinitionId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "secretsSourceDefinitionRevision",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The new version of the definition. Its \"Revision\" property must match the existing definition for the update to be accepted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        }
      }
    ],
    "GetDefinitionMetrics": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/metrics",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets build metrics for a definition.",
        "operationId": "Metrics_Get Definition Metrics",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "minMetricsTime",
              "description": "The date from which to calculate metrics.",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildMetric"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/properties",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets properties for a definition.",
        "operationId": "Properties_Get Definition Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "filter",
              "description": "A comma-delimited list of properties. If specified, filters to these specific properties.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "UpdateDefinitionProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/properties",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates properties for a definition.",
        "operationId": "Properties_Update Definition Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A json-patch document describing the properties to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "AuthorizeDefinitionResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/resources",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Resources_Authorize Definition Resources",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionResources": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/resources",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Resources_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DefinitionResourceReference"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionRevisions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/revisions",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets all revisions of a definition.",
        "operationId": "Definitions_Get Definition Revisions",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildDefinitionRevision"
              }
            }
          }
        }
      }
    ],
    "AddDefinitionTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{DefinitionId}/tags",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Adds multiple tags to a definition.",
        "operationId": "Tags_Add Definition Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The tags to add.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{DefinitionId}/tags",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets the tags for a definition.",
        "operationId": "Tags_Get Definition Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "revision",
              "description": "The definition revision number. If not specified, uses the latest revision of the definition.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "UpdateDefinitionTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{DefinitionId}/tags",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Adds/Removes tags from a definition.",
        "operationId": "Tags_Update Definition Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The tags to add/remove.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTagParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "AddDefinitionTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{DefinitionId}/tags/{tag}",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Adds a tag to a definition",
        "operationId": "Tags_Add Definition Tag",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "tag",
              "description": "The tag to add.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteDefinitionTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{DefinitionId}/tags/{tag}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Removes a tag from a definition. NOTE: This API will not work for tags with special characters. To remove tags with special characters, use the PATCH method instead (in 6.0+)",
        "operationId": "Tags_Delete Definition Tag",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "tag",
              "description": "The tag to remove.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionYaml": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/{definitionId}/yaml",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Converts a definition to YAML, optionally at a specific revision.",
        "operationId": "Yaml_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "The ID of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "revision",
              "description": "The revision number to retrieve. If this is not specified, the latest version will be returned.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "minMetricsTime",
              "description": "If specified, indicates the date from which metrics should be included.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "propertyFilters",
              "description": "A comma-delimited list of properties to include in the results.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "includeLatestBuilds",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YamlBuild"
            }
          }
        }
      }
    ],
    "GetTemplates": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/templates",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets all definition templates.",
        "operationId": "Templates_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildDefinitionTemplate"
              }
            }
          }
        }
      }
    ],
    "DeleteTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/templates/{templateId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Deletes a build definition template.",
        "operationId": "Templates_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "The ID of the template.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/templates/{templateId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets a specific build definition template.",
        "operationId": "Templates_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "The ID of the requested template.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinitionTemplate"
            }
          }
        }
      }
    ],
    "SaveTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/definitions/templates/{templateId}",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Updates an existing build definition template.",
        "operationId": "Templates_Save Template",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "The ID of the template.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The new version of the template.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildDefinitionTemplate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildDefinitionTemplate"
            }
          }
        }
      }
    ],
    "CreateFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/folders",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Creates a new folder.",
        "operationId": "Folders_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "The full path of the folder.",
              "required": true,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The folder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        }
      }
    ],
    "DeleteFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/folders",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Deletes a definition folder. Definitions and their corresponding builds will also be deleted.",
        "operationId": "Folders_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "The full path to the folder.",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/folders",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Updates an existing folder at given  existing path",
        "operationId": "Folders_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "The full path to the folder.",
              "required": true,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The new version of the folder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        }
      }
    ],
    "GetFolders": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/folders/{path}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a list of build definition folders.",
        "operationId": "Folders_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "The path to start with.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "queryOrder",
              "description": "The order in which folders should be returned.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "FolderQueryOrder",
                "values": [
                  {
                    "value": "none",
                    "description": "No order"
                  },
                  {
                    "value": "folderAscending",
                    "description": "Order by folder name and path ascending."
                  },
                  {
                    "value": "folderDescending",
                    "description": "Order by folder name and path descending."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Folder"
              }
            }
          }
        }
      }
    ],
    "GetBuildGeneralSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/generalsettings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets pipeline general settings.",
        "operationId": "General Settings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PipelineGeneralSettings"
            }
          }
        }
      }
    ],
    "UpdateBuildGeneralSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/generalsettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates pipeline general settings.",
        "operationId": "General Settings_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineGeneralSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PipelineGeneralSettings"
            }
          }
        }
      }
    ],
    "GetLatestBuild": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/latest/{definition}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the latest build for a definition, optionally scoped to a specific branch.",
        "operationId": "Latest_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definition",
              "description": "definition name with optional leading folder path, or the definition id",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "branchName",
              "description": "optional parameter that indicates the specific branch to use. If not specified, the default branch is used.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        }
      }
    ],
    "GetProjectMetrics": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/metrics/{metricAggregationType}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets build metrics for a project.",
        "operationId": "Metrics_Get Project Metrics",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "metricAggregationType",
              "description": "The aggregation type to use (hourly, daily).",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "minMetricsTime",
              "description": "The date from which to calculate metrics.",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildMetric"
              }
            }
          }
        }
      }
    ],
    "GetBuildOptionDefinitions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/options",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets all build definition options supported by the system.",
        "operationId": "Options_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildOptionDefinition"
              }
            }
          }
        }
      }
    ],
    "GetBuildBadge": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/repos/{repoType}/badge",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a badge that indicates the status of the most recent build for the specified branch.",
        "operationId": "Badge_Get Build Badge Data",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repoType",
              "description": "The repository type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "repoId",
              "description": "The repository ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "branchName",
              "description": "The branch name.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    ],
    "GetRetentionSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the project's retention settings.",
        "operationId": "Retention_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectRetentionSetting"
            }
          }
        }
      }
    ],
    "UpdateRetentionSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates the project's retention settings.",
        "operationId": "Retention_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectRetentionSettingModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProjectRetentionSetting"
            }
          }
        }
      }
    ],
    "AddRetentionLeases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention/leases",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Adds new leases for pipeline runs.",
        "operationId": "Leases_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewRetentionLease"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetentionLease"
              }
            }
          }
        }
      }
    ],
    "DeleteRetentionLeasesById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention/leases",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes specific retention leases.",
        "operationId": "Leases_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ids",
              "description": "",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetRetentionLeasesByMinimalRetentionLeases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention/leases",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns any leases matching the specified MinimalRetentionLeases",
        "operationId": "Leases_Get Retention Leases By Minimal Retention Leases",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "leasesToFetch",
              "description": "List of JSON-serialized MinimalRetentionLeases separated by '|'",
              "required": true,
              "type": "string",
              "format": "array (MinimalRetentionLease)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetentionLease"
              }
            }
          }
        }
      }
    ],
    "GetRetentionLease": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention/leases/{leaseId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns the details of the retention lease given a lease id.",
        "operationId": "Leases_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "leaseId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetentionLease"
            }
          }
        }
      }
    ],
    "UpdateRetentionLease": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/retention/leases/{leaseId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Updates the duration or pipeline protection status of a retention lease.",
        "operationId": "Leases_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "leaseId",
              "description": "The ID of the lease to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The new data for the retention lease.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetentionLeaseUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RetentionLease"
            }
          }
        }
      }
    ],
    "GetBuildSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/settings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the build settings.",
        "operationId": "Settings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildSettings"
            }
          }
        }
      }
    ],
    "UpdateBuildSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/settings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates the build settings.",
        "operationId": "Settings_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The new settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BuildSettings"
            }
          }
        }
      }
    ],
    "GetStatusBadge": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/status/{definition}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "<p>Gets the build status for a definition, optionally scoped to a specific branch, stage, job, and configuration.</p> <p>If there are more than one, then it is required to pass in a stageName value when specifying a jobName, and the same rule then applies for both if passing a configuration parameter.</p>",
        "operationId": "Status_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definition",
              "description": "Either the definition name with optional leading folder path, or the definition id.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "branchName",
              "description": "Only consider the most recent build for this branch. If not specified, the default branch is used.",
              "required": false,
              "type": "string"
            },
            {
              "name": "stageName",
              "description": "Use this stage within the pipeline to render the status.",
              "required": false,
              "type": "string"
            },
            {
              "name": "jobName",
              "description": "Use this job within a stage of the pipeline to render the status.",
              "required": false,
              "type": "string"
            },
            {
              "name": "configuration",
              "description": "Use this job configuration to render the status",
              "required": false,
              "type": "string"
            },
            {
              "name": "label",
              "description": "Replaces the default text on the left side of the badge.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    ],
    "GetTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/tags",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets a list of all build tags in the project.",
        "operationId": "Tags_Get Tags",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/tags/{tag}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Removes a tag from builds, definitions, and from the tag store",
        "operationId": "Tags_Delete Tag",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "tag",
              "description": "The tag to remove.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemsBetweenBuilds": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/build/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets all the work items between two builds.",
        "operationId": "Builds_Get Work Items Between Builds",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fromBuildId",
              "description": "The ID of the first build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "toBuildId",
              "description": "The ID of the last build.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The maximum number of work items to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRef"
              }
            }
          }
        }
      }
    ],
    "ListSourceProviders": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceproviders",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of source providers and their capabilities.",
        "operationId": "Source Providers_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SourceProviderAttributes"
              }
            }
          }
        }
      }
    ],
    "ListBranches": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/branches",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a list of branches for the given source code repository.",
        "operationId": "Source Providers_List Branches",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "The vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.",
              "required": false,
              "type": "string"
            },
            {
              "name": "branchName",
              "description": "If supplied, the name of the branch to check for specifically.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetFileContents": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/filecontents",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the contents of a file in the given source code repository.",
        "operationId": "Source Providers_Get File Contents",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.",
              "required": false,
              "type": "string"
            },
            {
              "name": "commitOrBranch",
              "description": "The identifier of the commit or branch from which a file's contents are retrieved.",
              "required": false,
              "type": "string"
            },
            {
              "name": "path",
              "description": "The path to the file to retrieve, relative to the root of the repository.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetPathContents": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/pathcontents",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the contents of a directory in the given source code repository.",
        "operationId": "Source Providers_Get Path Contents",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "If specified, the vendor-specific identifier or the name of the repository to get branches. Can only be omitted for providers that do not support multiple repositories.",
              "required": false,
              "type": "string"
            },
            {
              "name": "commitOrBranch",
              "description": "The identifier of the commit or branch from which a file's contents are retrieved.",
              "required": false,
              "type": "string"
            },
            {
              "name": "path",
              "description": "The path contents to list, relative to the root of the repository.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SourceRepositoryItem"
              }
            }
          }
        }
      }
    ],
    "GetPullRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/pullrequests/{pullRequestId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a pull request object from source provider.",
        "operationId": "Source Providers_Get Pull Request",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "Vendor-specific id of the pull request.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "repositoryId",
              "description": "Vendor-specific identifier or the name of the repository that contains the pull request.",
              "required": false,
              "type": "string"
            },
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PullRequest"
            }
          }
        }
      }
    ],
    "ListRepositories": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/repositories",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a list of source code repositories.",
        "operationId": "Source Providers_List Repositories",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "If specified, the vendor-specific identifier or the name of a single repository to get.",
              "required": false,
              "type": "string"
            },
            {
              "name": "resultSet",
              "description": "'top' for the repositories most relevant for the endpoint. If not set, all repositories are returned. Ignored if 'repository' is set.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ResultSet",
                "values": [
                  {
                    "value": "all",
                    "description": "Include all repositories"
                  },
                  {
                    "value": "top",
                    "description": "Include most relevant repositories for user"
                  }
                ]
              }
            },
            {
              "name": "pageResults",
              "description": "If set to true, this will limit the set of results and will return a continuation token to continue the query.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "continuationToken",
              "description": "When paging results, this is a continuation token, returned by a previous call to this method, that can be used to return the next set of repositories.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SourceRepositories"
            }
          }
        }
      }
    ],
    "RestoreWebhooks": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/webhooks",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Recreates the webhooks for the specified triggers in the given source code repository.",
        "operationId": "Source Providers_Restore Webhooks",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The types of triggers to restore webhooks for.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "DefinitionTriggerType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "ListWebhooks": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/sourceProviders/{providerName}/webhooks",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a list of webhooks installed in the given source code repository.",
        "operationId": "Source Providers_List Webhooks",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "providerName",
              "description": "The name of the source provider.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "serviceEndpointId",
              "description": "If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "repository",
              "description": "If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RepositoryWebhook"
              }
            }
          }
        }
      }
    ]
  },
  "core": {
    "GetProcesses": [
      {
        "urlTemplate": "/{organization}/_apis/process/processes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of processes.",
        "operationId": "Processes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Process"
              }
            }
          }
        }
      }
    ],
    "GetProcessById": [
      {
        "urlTemplate": "/{organization}/_apis/process/processes/{processId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a process by ID.",
        "operationId": "Processes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "ID for a process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          }
        }
      }
    ],
    "GetProjects": [
      {
        "urlTemplate": "/{organization}/_apis/projects",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get all projects in the organization that the authenticated user has access to.",
        "operationId": "Projects_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "stateFilter",
              "description": "Filter on team projects in a specific team project state (default: WellFormed).",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ProjectState",
                "values": [
                  {
                    "value": "deleting",
                    "description": "Project is in the process of being deleted."
                  },
                  {
                    "value": "new",
                    "description": "Project is in the process of being created."
                  },
                  {
                    "value": "wellFormed",
                    "description": "Project is completely created and ready to use."
                  },
                  {
                    "value": "createPending",
                    "description": "Project has been queued for creation, but the process has not yet started."
                  },
                  {
                    "value": "all",
                    "description": "All projects regardless of state except Deleted."
                  },
                  {
                    "value": "unchanged",
                    "description": "Project has not been changed."
                  },
                  {
                    "value": "deleted",
                    "description": "Project has been deleted."
                  }
                ]
              }
            },
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Pointer that shows how many projects already been fetched.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "getDefaultTeamImageUrl",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamProjectReference"
              }
            }
          }
        }
      }
    ],
    "QueueCreateProject": [
      {
        "urlTemplate": "/{organization}/_apis/projects",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Queues a project to be created. Use the [GetOperation](../../operations/operations/get) to periodically check for create project status.",
        "operationId": "Projects_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The project to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamProject"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperationReference"
            }
          }
        }
      }
    ],
    "GetProject": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get project with the specified id or name, optionally including capabilities.",
        "operationId": "Projects_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeCapabilities",
              "description": "Include capabilities (such as source control) in the team project result (default: false).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeHistory",
              "description": "Search within renamed projects (that had such name in the past).",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamProject"
            }
          }
        }
      }
    ],
    "QueueDeleteProject": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.4",
        "description": "Queues a project to be deleted. Use the [GetOperation](../../operations/operations/get) to periodically check for delete project status.",
        "operationId": "Projects_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The project id of the project to delete.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperationReference"
            }
          }
        }
      }
    ],
    "UpdateProject": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.4",
        "description": "Update an existing project's name, abbreviation, description, or restore a project.",
        "operationId": "Projects_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The project id of the project to update.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The updates for the project. The state must be set to wellFormed to restore the project.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamProject"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperationReference"
            }
          }
        }
      }
    ],
    "RemoveProjectAvatar": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/avatar",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes the avatar for the project.",
        "operationId": "Avatar_Remove Project Avatar",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The ID or name of the project.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "SetProjectAvatar": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/avatar",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Sets the avatar for the project.",
        "operationId": "Avatar_Set Project Avatar",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The ID or name of the project.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The avatar blob data object to upload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectAvatar"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetProjectTeamsByCategory": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/categorizedteams/",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets list of user readable teams in a project and teams user is member of (excluded from readable list).",
        "operationId": "Categorized Teams_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project containing the teams to retrieve.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expandIdentity",
              "description": "A value indicating whether or not to expand Identity information in the result WebApiTeam object.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Maximum number of teams to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of teams to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CategorizedWebApiTeams"
            }
          }
        }
      }
    ],
    "GetProjectProperties": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/properties",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a collection of team project properties.",
        "operationId": "Projects_Get Project Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The team project ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "keys",
              "description": "A comma-delimited string of team project property names. Wildcard characters (\"?\" and \"*\") are supported. If no key is specified, all properties will be returned.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectProperty"
              }
            }
          }
        }
      }
    ],
    "SetProjectProperties": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/properties",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Create, update, and delete team project properties.",
        "operationId": "Projects_Set Project Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The team project ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A JSON Patch document that represents an array of property operations. See RFC 6902 for more details on JSON Patch. The accepted operation verbs are Add and Remove, where Add is used for both creating and updating properties. The path consists of a forward slash and a property name.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateTeam": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Create a team in a team project.\n\nPossible failure scenarios\nInvalid project name/ID (project doesn't exist) 404\nInvalid team name or description 400\nTeam already exists 400\nInsufficient privileges 400",
        "operationId": "Teams_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project in which to create the team.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The team data used to create the team.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApiTeam"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebApiTeam"
            }
          }
        }
      }
    ],
    "GetTeams": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of teams.",
        "operationId": "Teams_Get Teams",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$mine",
              "description": "If true return all the teams requesting user is member, otherwise return all the teams user has read access.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Maximum number of teams to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of teams to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$expandIdentity",
              "description": "A value indicating whether or not to expand Identity information in the result WebApiTeam object.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebApiTeam"
              }
            }
          }
        }
      }
    ],
    "DeleteTeam": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams/{teamId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Delete a team.",
        "operationId": "Teams_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project containing the team to delete.",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamId",
              "description": "The name or ID of the team to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTeam": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams/{teamId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a specific team.",
        "operationId": "Teams_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project containing the team.",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamId",
              "description": "The name or ID (GUID) of the team.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expandIdentity",
              "description": "A value indicating whether or not to expand Identity information in the result WebApiTeam object.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebApiTeam"
            }
          }
        }
      }
    ],
    "UpdateTeam": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams/{teamId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update a team's name and/or description.",
        "operationId": "Teams_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project containing the team to update.",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamId",
              "description": "The name of ID of the team to update.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApiTeam"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebApiTeam"
            }
          }
        }
      }
    ],
    "GetTeamMembersWithExtendedProperties": [
      {
        "urlTemplate": "/{organization}/_apis/projects/{projectId}/teams/{teamId}/members",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a list of members for a specific team.",
        "operationId": "Teams_Get Team Members With Extended Properties",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "The name or ID (GUID) of the team project the team belongs to.",
              "required": true,
              "type": "string"
            },
            {
              "name": "teamId",
              "description": "The name or ID (GUID) of the team .",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMember"
              }
            }
          }
        }
      }
    ],
    "GetAllTeams": [
      {
        "urlTemplate": "/{organization}/_apis/teams",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of all teams.",
        "operationId": "Teams_Get All Teams",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$mine",
              "description": "If true, then return all teams requesting user is member. Otherwise return all teams user has read access.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Maximum number of teams to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of teams to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$expandIdentity",
              "description": "A value indicating whether or not to expand Identity information in the result WebApiTeam object.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebApiTeam"
              }
            }
          }
        }
      }
    ]
  },
  "dashboard": {
    "GetWidgetTypes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/dashboard/widgettypes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all available widget metadata in alphabetical order, including widgets marked with isVisibleFromCatalog == false.",
        "operationId": "Widget Types_Get Widget Types",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$scope",
              "description": "",
              "required": true,
              "type": "string",
              "enum": {
                "name": "WidgetScope",
                "values": [
                  {
                    "value": "collection_User",
                    "description": ""
                  },
                  {
                    "value": "project_Team",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetTypesResponse"
            }
          }
        }
      }
    ],
    "GetWidgetMetadata": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/dashboard/widgettypes/{contributionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the widget metadata satisfying the specified contribution ID.",
        "operationId": "Widget Types_Get Widget Metadata",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "contributionId",
              "description": "The ID of Contribution for the Widget",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WidgetMetadataResponse"
            }
          }
        }
      }
    ],
    "CreateDashboard": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Create the supplied dashboard.",
        "operationId": "Dashboards_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The initial state of the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        }
      }
    ],
    "GetDashboardsByProject": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of dashboards under a project.",
        "operationId": "Dashboards_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dashboard"
              }
            }
          }
        }
      }
    ],
    "ReplaceDashboards": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Update the name and position of dashboards in the supplied group, and remove omitted dashboards. Does not modify dashboard content.",
        "operationId": "Dashboards_Replace Dashboards",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardGroup"
            }
          }
        }
      }
    ],
    "DeleteDashboard": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Delete a dashboard given its ID. This also deletes the widgets associated with this dashboard.",
        "operationId": "Dashboards_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard to delete.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetDashboard": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a dashboard by its ID.",
        "operationId": "Dashboards_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        }
      }
    ],
    "ReplaceDashboard": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Replace configuration for the specified dashboard. Replaces Widget list on Dashboard, only if property is supplied.",
        "operationId": "Dashboards_Replace Dashboard",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard to replace.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The Configuration of the dashboard to replace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        }
      }
    ],
    "CreateWidget": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Create a widget on the specified dashboard.",
        "operationId": "Widgets_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of dashboard the widget will be added to.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "State of the widget to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        }
      }
    ],
    "GetWidgets": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get widgets contained on the specified dashboard.",
        "operationId": "Widgets_Get Widgets",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard to read.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [
            {
              "name": "eTag",
              "description": "Dashboard Widgets Version",
              "required": false,
              "type": "string"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "ReplaceWidgets": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Replace the widgets on specified dashboard with the supplied widgets.",
        "operationId": "Widgets_Replace Widgets",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the Dashboard to modify.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [
            {
              "name": "eTag",
              "description": "Dashboard Widgets Version",
              "required": false,
              "type": "string"
            }
          ],
          "body": {
            "name": "body",
            "description": "Revised state of widgets to store for the dashboard.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "UpdateWidgets": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update the supplied widgets on the dashboard using supplied state. State of existing Widgets not passed in the widget list is preserved.",
        "operationId": "Widgets_Update Widgets",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the Dashboard to modify.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [
            {
              "name": "eTag",
              "description": "Dashboard Widgets Version",
              "required": false,
              "type": "string"
            }
          ],
          "body": {
            "name": "body",
            "description": "The set of widget states to update on the dashboard.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteWidget": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Delete the specified widget.",
        "operationId": "Widgets_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard containing the widget.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "widgetId",
              "description": "ID of the widget to update.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Dashboard"
            }
          }
        }
      }
    ],
    "GetWidget": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get the current state of the specified widget.",
        "operationId": "Widgets_Get Widget",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard containing the widget.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "widgetId",
              "description": "ID of the widget to read.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        }
      }
    ],
    "ReplaceWidget": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Override the  state of the specified widget.",
        "operationId": "Widgets_Replace Widget",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard containing the widget.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "widgetId",
              "description": "ID of the widget to update.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "State to be written for the widget.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        }
      }
    ],
    "UpdateWidget": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/dashboard/dashboards/{dashboardId}/widgets/{widgetId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Perform a partial update of the specified widget.",
        "operationId": "Widgets_Update Widget",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "dashboardId",
              "description": "ID of the dashboard containing the widget.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "widgetId",
              "description": "ID of the widget to update.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Description of the widget changes to apply. All non-null fields will be replaced.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          }
        }
      }
    ]
  },
  "elastic": {
    "CreateElasticPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new elastic pool. This will create a new TaskAgentPool at the organization level. If a project id is provided, this will create a new TaskAgentQueue in the specified project.",
        "operationId": "Elasticpools_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "poolName",
              "description": "Name to use for the new TaskAgentPool",
              "required": true,
              "type": "string"
            },
            {
              "name": "authorizeAllPipelines",
              "description": "Setting to determine if all pipelines are authorized to use this TaskAgentPool by default.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "autoProvisionProjectPools",
              "description": "Setting to automatically provision TaskAgentQueues in every project for the new pool.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "projectId",
              "description": "Optional: If provided, a new TaskAgentQueue will be created in the specified project.",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Elastic pool to create. Contains the properties necessary for configuring a new ElasticPool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ElasticPoolCreationResult"
            }
          }
        }
      }
    ],
    "GetElasticPools": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of all Elastic Pools.",
        "operationId": "Elasticpools_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElasticPool"
              }
            }
          }
        }
      }
    ],
    "GetElasticPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools/{poolId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the Elastic Pool with the specified Pool Id.",
        "operationId": "Elasticpools_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "Pool Id of the associated TaskAgentPool",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        }
      }
    ],
    "UpdateElasticPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools/{poolId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update settings on a specified Elastic Pool.",
        "operationId": "Elasticpools_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "New Elastic Pool settings data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticPoolSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        }
      }
    ],
    "GetElasticPoolLogs": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools/{poolId}/logs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get elastic pool diagnostics logs for a specified Elastic Pool.",
        "operationId": "Elasticpoollogs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "Pool Id of the Elastic Pool",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "Number of elastic pool logs to retrieve",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElasticPoolLog"
              }
            }
          }
        }
      }
    ],
    "GetElasticNodes": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools/{poolId}/nodes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of ElasticNodes currently in the ElasticPool",
        "operationId": "Nodes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "Pool id of the ElasticPool",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$state",
              "description": "Optional: Filter to only retrieve ElasticNodes in the given ElasticNodeState",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ElasticNodeState",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "new",
                    "description": ""
                  },
                  {
                    "value": "creatingCompute",
                    "description": ""
                  },
                  {
                    "value": "startingAgent",
                    "description": ""
                  },
                  {
                    "value": "idle",
                    "description": ""
                  },
                  {
                    "value": "assigned",
                    "description": ""
                  },
                  {
                    "value": "offline",
                    "description": ""
                  },
                  {
                    "value": "pendingReimage",
                    "description": ""
                  },
                  {
                    "value": "pendingDelete",
                    "description": ""
                  },
                  {
                    "value": "saved",
                    "description": ""
                  },
                  {
                    "value": "deletingCompute",
                    "description": ""
                  },
                  {
                    "value": "deleted",
                    "description": ""
                  },
                  {
                    "value": "lost",
                    "description": ""
                  },
                  {
                    "value": "reimagingCompute",
                    "description": ""
                  },
                  {
                    "value": "restartingAgent",
                    "description": ""
                  },
                  {
                    "value": "failedToStartPendingDelete",
                    "description": ""
                  },
                  {
                    "value": "failedToRestartPendingDelete",
                    "description": ""
                  },
                  {
                    "value": "failedVMPendingDelete",
                    "description": ""
                  },
                  {
                    "value": "assignedPendingDelete",
                    "description": ""
                  },
                  {
                    "value": "retryDelete",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ElasticNode"
              }
            }
          }
        }
      }
    ],
    "UpdateElasticNode": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/elasticpools/{poolId}/nodes/{elasticNodeId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update properties on a specified ElasticNode",
        "operationId": "Nodes_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "elasticNodeId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticNodeSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ElasticNode"
            }
          }
        }
      }
    ]
  },
  "task": {
    "PostEvent": [
      {
        "urlTemplate": "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/events",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Send a pipeline job event to be processed by the execution plan.",
        "operationId": "Events_Post Event",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "scopeIdentifier",
              "description": "The project GUID to scope the request",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "hubName",
              "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "The ID of the plan.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The event data to be processed by the plan.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobEvent"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateOidcToken": [
      {
        "urlTemplate": "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/jobs/{jobId}/oidctoken",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Oidctoken_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "scopeIdentifier",
              "description": "The project GUID to scope the request",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "hubName",
              "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "jobId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "serviceConnectionId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskHubOidcToken"
            }
          }
        }
      }
    ],
    "CreateLog": [
      {
        "urlTemplate": "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a log and connect it to a pipeline run's execution plan.",
        "operationId": "Logs_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "scopeIdentifier",
              "description": "The project GUID to scope the request",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "hubName",
              "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "The ID of the plan.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "An object that contains information about log's path.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          }
        }
      }
    ],
    "AppendLogContent": [
      {
        "urlTemplate": "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/logs/{logId}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Append a log to a task's log. The log should be sent in the body of the request as a TaskLog object stream.",
        "operationId": "Logs_Append Log Content",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "scopeIdentifier",
              "description": "The project GUID to scope the request",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "hubName",
              "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "The ID of the plan.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "logId",
              "description": "The ID of the log.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskLog"
            }
          }
        }
      }
    ],
    "UpdateRecords": [
      {
        "urlTemplate": "/{organization}/{scopeIdentifier}/_apis/distributedtask/hubs/{hubName}/plans/{planId}/timelines/{timelineId}/records",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update timeline records if they already exist, otherwise create new ones for the same timeline.",
        "operationId": "Records_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "scopeIdentifier",
              "description": "The project GUID to scope the request",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "hubName",
              "description": "The name of the server hub. Common examples: \"build\", \"rm\", \"checks\"",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "The ID of the plan.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "timelineId",
              "description": "The ID of the timeline.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The array of timeline records to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VssJsonCollectionWrapper"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimelineRecord"
              }
            }
          }
        }
      }
    ]
  },
  "taskagent": {
    "AddAgentCloud": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Agentclouds_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        }
      }
    ],
    "GetAgentClouds": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Agentclouds_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentCloud"
              }
            }
          }
        }
      }
    ],
    "DeleteAgentCloud": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds/{agentCloudId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Agentclouds_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "agentCloudId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        }
      }
    ],
    "GetAgentCloud": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds/{agentCloudId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Agentclouds_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "agentCloudId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        }
      }
    ],
    "UpdateAgentCloud": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds/{agentCloudId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Agentclouds_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "agentCloudId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentCloud"
            }
          }
        }
      }
    ],
    "GetAgentCloudRequests": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentclouds/{agentCloudId}/requests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Requests_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "agentCloudId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentCloudRequest"
              }
            }
          }
        }
      }
    ],
    "GetAgentCloudTypes": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/agentcloudtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get agent cloud types.",
        "operationId": "Agentcloudtypes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentCloudType"
              }
            }
          }
        }
      }
    ],
    "AddAgentPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create an agent pool.",
        "operationId": "Pools_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Details about the new agent pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        }
      }
    ],
    "GetAgentPoolsByIds": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of agent pools.",
        "operationId": "Pools_Get Agent Pools By Ids",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "poolIds",
              "description": "pool Ids to fetch",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "actionFilter",
              "description": "Filter by whether the calling user has use or manage permissions",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentPoolActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "manage",
                    "description": ""
                  },
                  {
                    "value": "use",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentPool"
              }
            }
          }
        }
      }
    ],
    "DeleteAgentPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete an agent pool.",
        "operationId": "Pools_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "ID of the agent pool to delete",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetAgentPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about an agent pool.",
        "operationId": "Pools_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "An agent pool ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "properties",
              "description": "Agent pool properties (comma-separated)",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "actionFilter",
              "description": "Filter by whether the calling user has use or manage permissions",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentPoolActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "manage",
                    "description": ""
                  },
                  {
                    "value": "use",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        }
      }
    ],
    "UpdateAgentPool": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update properties on an agent pool",
        "operationId": "Pools_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool to update",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Updated agent pool details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentPool"
            }
          }
        }
      }
    ],
    "AddAgent": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Adds an agent to a pool.  You probably don't want to call this endpoint directly. Instead, [configure an agent](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) using the agent download package.",
        "operationId": "Agents_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool in which to add the agent",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Details about the agent being added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        }
      }
    ],
    "GetAgents": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of agents.",
        "operationId": "Agents_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool containing the agents",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "agentName",
              "description": "Filter on agent name",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeCapabilities",
              "description": "Whether to include the agents' capabilities in the response",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeAssignedRequest",
              "description": "Whether to include details about the agents' current work",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLastCompletedRequest",
              "description": "Whether to include details about the agents' most recent completed work",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "propertyFilters",
              "description": "Filter which custom properties will be returned",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "demands",
              "description": "Filter by demands the agents can satisfy",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgent"
              }
            }
          }
        }
      }
    ],
    "DeleteAgent": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents/{agentId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete an agent.  You probably don't want to call this endpoint directly. Instead, [use the agent configuration script](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) to remove an agent from your organization.",
        "operationId": "Agents_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The pool ID to remove the agent from",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "agentId",
              "description": "The agent ID to remove",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetAgent": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents/{agentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about an agent.",
        "operationId": "Agents_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool containing the agent",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "agentId",
              "description": "The agent ID to get information about",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeCapabilities",
              "description": "Whether to include the agent's capabilities in the response",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeAssignedRequest",
              "description": "Whether to include details about the agent's current work",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLastCompletedRequest",
              "description": "Whether to include details about the agents' most recent completed work",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "propertyFilters",
              "description": "Filter which custom properties will be returned",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        }
      }
    ],
    "ReplaceAgent": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents/{agentId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Replace an agent.  You probably don't want to call this endpoint directly. Instead, [use the agent configuration script](https://docs.microsoft.com/azure/devops/pipelines/agents/agents) to remove and reconfigure an agent from your organization.",
        "operationId": "Agents_Replace Agent",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool to use",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "agentId",
              "description": "The agent to replace",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Updated details about the replacing agent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        }
      }
    ],
    "UpdateAgent": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/pools/{poolId}/agents/{agentId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update agent details.",
        "operationId": "Agents_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "poolId",
              "description": "The agent pool to use",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "agentId",
              "description": "The agent to update",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Updated details about the agent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgent"
            }
          }
        }
      }
    ],
    "AddVariableGroup": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/variablegroups",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Add a variable group.",
        "operationId": "Variablegroups_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableGroupParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
          }
        }
      }
    ],
    "ShareVariableGroup": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/variablegroups",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Add a variable group.",
        "operationId": "Variablegroups_Share Variable Group",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "variableGroupId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableGroupProjectReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeleteVariableGroup": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/variablegroups/{groupId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Delete a variable group",
        "operationId": "Variablegroups_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the variable group.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "projectIds",
              "description": "",
              "required": true,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateVariableGroup": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/variablegroups/{groupId}",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Update a variable group.",
        "operationId": "Variablegroups_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the variable group to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VariableGroupParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
          }
        }
      }
    ],
    "GetYamlSchema": [
      {
        "urlTemplate": "/{organization}/_apis/distributedtask/yamlschema",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "GET the Yaml schema used for Yaml file validation.",
        "operationId": "Yamlschema_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "validateTaskNames",
              "description": "Whether the schema should validate that tasks are actually installed (useful for offline tools where you don't want validation).",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    ],
    "AddDeploymentGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a deployment group.",
        "operationId": "Deploymentgroups_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Deployment group to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentGroupCreateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
          }
        }
      }
    ],
    "GetDeploymentGroups": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of deployment groups by name or IDs.",
        "operationId": "Deploymentgroups_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "name",
              "description": "Name of the deployment group.",
              "required": false,
              "type": "string"
            },
            {
              "name": "actionFilter",
              "description": "Get only deployment groups on which this action can be performed.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentGroupActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": "All deployment groups."
                  },
                  {
                    "value": "manage",
                    "description": "Only deployment groups for which caller has **manage** permission."
                  },
                  {
                    "value": "use",
                    "description": "Only deployment groups for which caller has **use** permission."
                  }
                ]
              }
            },
            {
              "name": "$expand",
              "description": "Include these additional details in the returned objects.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentGroupExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "No additional properties."
                  },
                  {
                    "value": "machines",
                    "description": "Deprecated: Include all the deployment targets."
                  },
                  {
                    "value": "tags",
                    "description": "Include unique list of tags across all deployment targets."
                  }
                ]
              }
            },
            {
              "name": "continuationToken",
              "description": "Get deployment groups with names greater than this continuationToken lexicographically.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Maximum number of deployment groups to return. Default is **1000**.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "ids",
              "description": "Comma separated list of IDs of the deployment groups.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentGroup"
              }
            }
          }
        }
      }
    ],
    "DeleteDeploymentGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a deployment group.",
        "operationId": "Deploymentgroups_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group to be deleted.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetDeploymentGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a deployment group by its ID.",
        "operationId": "Deploymentgroups_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "actionFilter",
              "description": "Get the deployment group only if this action can be performed on it.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentGroupActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": "All deployment groups."
                  },
                  {
                    "value": "manage",
                    "description": "Only deployment groups for which caller has **manage** permission."
                  },
                  {
                    "value": "use",
                    "description": "Only deployment groups for which caller has **use** permission."
                  }
                ]
              }
            },
            {
              "name": "$expand",
              "description": "Include these additional details in the returned object.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentGroupExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "No additional properties."
                  },
                  {
                    "value": "machines",
                    "description": "Deprecated: Include all the deployment targets."
                  },
                  {
                    "value": "tags",
                    "description": "Include unique list of tags across all deployment targets."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
          }
        }
      }
    ],
    "UpdateDeploymentGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a deployment group.",
        "operationId": "Deploymentgroups_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Deployment group to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentGroupUpdateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentGroup"
            }
          }
        }
      }
    ],
    "GetDeploymentTargets": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of deployment targets in a deployment group.",
        "operationId": "Targets_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "tags",
              "description": "Get only the deployment targets that contain all these comma separted list of tags.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "name",
              "description": "Name pattern of the deployment targets to return.",
              "required": false,
              "type": "string"
            },
            {
              "name": "partialNameMatch",
              "description": "When set to true, treats **name** as pattern. Else treats it as absolute match. Default is **false**.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "Include these additional details in the returned objects.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentTargetExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "No additional properties."
                  },
                  {
                    "value": "capabilities",
                    "description": "Include capabilities of the deployment agent."
                  },
                  {
                    "value": "assignedRequest",
                    "description": "Include the job request assigned to the deployment agent."
                  },
                  {
                    "value": "lastCompletedRequest",
                    "description": "Include the last completed job request of the deployment agent."
                  }
                ]
              }
            },
            {
              "name": "agentStatus",
              "description": "Get only deployment targets that have this status.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentStatusFilter",
                "values": [
                  {
                    "value": "offline",
                    "description": "Only deployment targets that are offline."
                  },
                  {
                    "value": "online",
                    "description": "Only deployment targets that are online."
                  },
                  {
                    "value": "all",
                    "description": "All deployment targets."
                  }
                ]
              }
            },
            {
              "name": "agentJobResult",
              "description": "Get only deployment targets that have this last job result.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentJobResultFilter",
                "values": [
                  {
                    "value": "failed",
                    "description": "Only those deployment targets on which last job failed (**Abandoned**, **Canceled**, **Failed**, **Skipped**)."
                  },
                  {
                    "value": "passed",
                    "description": "Only those deployment targets on which last job Passed (**Succeeded**, **Succeeded with issues**)."
                  },
                  {
                    "value": "neverDeployed",
                    "description": "Only those deployment targets that never executed a job."
                  },
                  {
                    "value": "all",
                    "description": "All deployment targets."
                  }
                ]
              }
            },
            {
              "name": "continuationToken",
              "description": "Get deployment targets with names greater than this continuationToken lexicographically.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Maximum number of deployment targets to return. Default is **1000**.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "enabled",
              "description": "Get only deployment targets that are enabled or disabled. Default is 'null' which returns all the targets.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "propertyFilters",
              "description": "",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
          }
        }
      }
    ],
    "UpdateDeploymentTargets": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update tags of a list of deployment targets in a deployment group.",
        "operationId": "Targets_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group in which deployment targets are updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Deployment targets with tags to udpdate.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentTargetUpdateParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentMachine"
              }
            }
          }
        }
      }
    ],
    "DeleteDeploymentTarget": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a deployment target in a deployment group. This deletes the agent from associated deployment pool too.",
        "operationId": "Targets_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group in which deployment target is deleted.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "targetId",
              "description": "ID of the deployment target to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetDeploymentTarget": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a deployment target by its ID in a deployment group",
        "operationId": "Targets_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "deploymentGroupId",
              "description": "ID of the deployment group to which deployment target belongs.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "targetId",
              "description": "ID of the deployment target to return.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Include these additional details in the returned objects.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentTargetExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "No additional properties."
                  },
                  {
                    "value": "capabilities",
                    "description": "Include capabilities of the deployment agent."
                  },
                  {
                    "value": "assignedRequest",
                    "description": "Include the job request assigned to the deployment agent."
                  },
                  {
                    "value": "lastCompletedRequest",
                    "description": "Include the last completed job request of the deployment agent."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeploymentMachine"
            }
          }
        }
      }
    ],
    "AddEnvironment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create an environment.",
        "operationId": "Environments_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Environment to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentCreateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        }
      }
    ],
    "GetEnvironments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all environments.",
        "operationId": "Environments_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "name",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentInstance"
              }
            }
          }
        }
      }
    ],
    "DeleteEnvironment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete the specified environment.",
        "operationId": "Environments_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "ID of the environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetEnvironmentById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an environment by its ID.",
        "operationId": "Environments_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "ID of the environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "expands",
              "description": "Include these additional details in the returned objects.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "EnvironmentExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "No additional properties"
                  },
                  {
                    "value": "resourceReferences",
                    "description": "Include resource references referring to the environment."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        }
      }
    ],
    "UpdateEnvironment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update the specified environment.",
        "operationId": "Environments_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "ID of the environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Environment data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentUpdateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EnvironmentInstance"
            }
          }
        }
      }
    ],
    "GetEnvironmentDeploymentExecutionRecords": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}/environmentdeploymentrecords",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get environment deployment execution history",
        "operationId": "Environmentdeployment Records_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentDeploymentExecutionRecord"
              }
            }
          }
        }
      }
    ],
    "AddKubernetesResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Kubernetes_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesResourceCreateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesResource"
            }
          }
        }
      }
    ],
    "DeleteKubernetesResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes/{resourceId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Kubernetes_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "resourceId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetKubernetesResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes/{resourceId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Kubernetes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "environmentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "resourceId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesResource"
            }
          }
        }
      }
    ],
    "AddAgentQueue": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/queues",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new agent queue to connect a project to an agent pool.",
        "operationId": "Queues_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "authorizePipelines",
              "description": "Automatically authorize this queue when using YAML",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Details about the queue to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
          }
        }
      }
    ],
    "GetAgentQueuesForPools": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/queues",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of agent queues by pool ids",
        "operationId": "Queues_Get Agent Queues For Pools",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "poolIds",
              "description": "A comma-separated list of pool ids to get the corresponding queues for",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "actionFilter",
              "description": "Filter by whether the calling user has use or manage permissions",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentQueueActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "manage",
                    "description": ""
                  },
                  {
                    "value": "use",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskAgentQueue"
              }
            }
          }
        }
      }
    ],
    "DeleteAgentQueue": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/queues/{queueId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes an agent queue from a project.",
        "operationId": "Queues_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "queueId",
              "description": "The agent queue to remove",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetAgentQueue": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/queues/{queueId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get information about an agent queue.",
        "operationId": "Queues_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "queueId",
              "description": "The agent queue to get information about",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "actionFilter",
              "description": "Filter by whether the calling user has use or manage permissions",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskAgentQueueActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "manage",
                    "description": ""
                  },
                  {
                    "value": "use",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskAgentQueue"
            }
          }
        }
      }
    ],
    "AddTaskGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/taskgroups",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a task group.",
        "operationId": "Taskgroups_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Task group object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroupCreateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        }
      }
    ],
    "DeleteTaskGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/taskgroups/{taskGroupId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a task group.",
        "operationId": "Taskgroups_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "taskGroupId",
              "description": "Id of the task group to be deleted.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "comment",
              "description": "Comments to delete.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTaskGroups": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/taskgroups/{taskGroupId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List task groups.",
        "operationId": "Taskgroups_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "taskGroupId",
              "description": "Id of the task group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "expanded",
              "description": "'true' to recursively expand task groups. Default is 'false'.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "taskIdFilter",
              "description": "Guid of the taskId to filter.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "deleted",
              "description": "'true'to include deleted task groups. Default is 'false'.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Number of task groups to get.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Gets the task groups after the continuation token provided.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "queryOrder",
              "description": "Gets the results in the defined order. Default is 'CreatedOnDescending'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TaskGroupQueryOrder",
                "values": [
                  {
                    "value": "createdOnAscending",
                    "description": "Order by createdon ascending."
                  },
                  {
                    "value": "createdOnDescending",
                    "description": "Order by createdon descending."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskGroup"
              }
            }
          }
        }
      }
    ],
    "UpdateTaskGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/taskgroups/{taskGroupId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update a task group.",
        "operationId": "Taskgroups_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "taskGroupId",
              "description": "Id of the task group to update.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Task group to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskGroupUpdateParameter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        }
      }
    ],
    "GetVariableGroupsById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/variablegroups",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get variable groups by ids.",
        "operationId": "Variablegroups_Get Variable Groups By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "groupIds",
              "description": "Comma separated list of Ids of variable groups.",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariableGroup"
              }
            }
          }
        }
      }
    ],
    "GetVariableGroup": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/distributedtask/variablegroups/{groupId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a variable group.",
        "operationId": "Variablegroups_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the variable group.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VariableGroup"
            }
          }
        }
      }
    ]
  },
  "extensionmanagement": {
    "GetInstalledExtensions": [
      {
        "urlTemplate": "/{organization}/_apis/extensionmanagement/installedextensions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List the installed extensions in the account / project collection.",
        "operationId": "Installed Extensions_List",
        "host": "extmgmt.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeDisabledExtensions",
              "description": "If true (the default), include disabled extensions in the results.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeErrors",
              "description": "If true, include installed extensions with errors.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "assetTypes",
              "description": "Determines which files are returned in the files array.  Provide the wildcard '*' to return all files, or a colon separated list to retrieve files with specific asset types.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "includeInstallationIssues",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstalledExtension"
              }
            }
          }
        }
      }
    ],
    "UpdateInstalledExtension": [
      {
        "urlTemplate": "/{organization}/_apis/extensionmanagement/installedextensions",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update an installed extension. Typically this API is used to enable or disable an extension.",
        "operationId": "Installed Extensions_Update",
        "host": "extmgmt.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          }
        }
      }
    ],
    "GetInstalledExtensionByName": [
      {
        "urlTemplate": "/{organization}/_apis/extensionmanagement/installedextensionsbyname/{publisherName}/{extensionName}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an installed extension by its publisher and extension name.",
        "operationId": "Installed Extensions_Get",
        "host": "extmgmt.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherName",
              "description": "Name of the publisher. Example: \"fabrikam\".",
              "required": true,
              "type": "string"
            },
            {
              "name": "extensionName",
              "description": "Name of the extension. Example: \"ops-tools\".",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "assetTypes",
              "description": "Determines which files are returned in the files array.  Provide the wildcard '*' to return all files, or a colon separated list to retrieve files with specific asset types.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          }
        }
      }
    ],
    "UninstallExtensionByName": [
      {
        "urlTemplate": "/{organization}/_apis/extensionmanagement/installedextensionsbyname/{publisherName}/{extensionName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Uninstall the specified extension from the account / project collection.",
        "operationId": "Installed Extensions_Uninstall Extension By Name",
        "host": "extmgmt.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherName",
              "description": "Name of the publisher. Example: \"fabrikam\".",
              "required": true,
              "type": "string"
            },
            {
              "name": "extensionName",
              "description": "Name of the extension. Example: \"ops-tools\".",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "reason",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "reasonCode",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "InstallExtensionByName": [
      {
        "urlTemplate": "/{organization}/_apis/extensionmanagement/installedextensionsbyname/{publisherName}/{extensionName}/{version}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Install the specified extension into the account / project collection.",
        "operationId": "Installed Extensions_Install Extension By Name",
        "host": "extmgmt.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherName",
              "description": "Name of the publisher. Example: \"fabrikam\".",
              "required": true,
              "type": "string"
            },
            {
              "name": "extensionName",
              "description": "Name of the extension. Example: \"ops-tools\".",
              "required": true,
              "type": "string"
            },
            {
              "name": "version",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InstalledExtension"
            }
          }
        }
      }
    ]
  },
  "favorite": {
    "CreateFavorite": [
      {
        "urlTemplate": "/{organization}/_apis/favorite/favorites",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Favorites_Create Favorite",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FavoriteCreateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Favorite"
            }
          }
        }
      }
    ],
    "GetFavorites": [
      {
        "urlTemplate": "/{organization}/_apis/favorite/favorites",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Favorites_Get Favorites",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "artifactType",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "artifactScopeType",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "artifactScopeId",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeExtendedDetails",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Favorite"
              }
            }
          }
        }
      }
    ],
    "DeleteFavoriteById": [
      {
        "urlTemplate": "/{organization}/_apis/favorite/favorites/{favoriteId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Favorites_Delete Favorite By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "favoriteId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "artifactType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactScopeType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactScopeId",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetFavoriteById": [
      {
        "urlTemplate": "/{organization}/_apis/favorite/favorites/{favoriteId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Favorites_Get Favorite By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "favoriteId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "artifactScopeType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactType",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "artifactScopeId",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeExtendedDetails",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Favorite"
            }
          }
        }
      }
    ]
  },
  "git": {
    "GetDeletedRepositories": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/deletedrepositories",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve deleted git repositories.",
        "operationId": "Repositories_Get Deleted Repositories",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitDeletedRepository"
              }
            }
          }
        }
      }
    ],
    "CreateFavorite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/favorites/refs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a ref favorite",
        "operationId": "Refs Favorites_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The ref favorite to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitRefFavorite"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRefFavorite"
            }
          }
        }
      }
    ],
    "GetRefFavorites": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/favorites/refs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the refs favorites for a repo and an identity.",
        "operationId": "Refs Favorites_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "repositoryId",
              "description": "The id of the repository.",
              "required": false,
              "type": "string"
            },
            {
              "name": "identityId",
              "description": "The id of the identity whose favorites are to be retrieved. If null, the requesting identity is used.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRefFavorite"
              }
            }
          }
        }
      }
    ],
    "DeleteRefFavorite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/favorites/refs/{favoriteId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes the refs favorite specified",
        "operationId": "Refs Favorites_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "favoriteId",
              "description": "The Id of the ref favorite to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetRefFavorite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/favorites/refs/{favoriteId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the refs favorite for a favorite Id.",
        "operationId": "Refs Favorites_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "favoriteId",
              "description": "The Id of the requested ref favorite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRefFavorite"
            }
          }
        }
      }
    ],
    "GetPolicyConfigurations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/policy/configurations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a list of policy configurations by a given set of scope/filtering criteria.\n\nBelow is a short description of how all of the query parameters interact with each other:\n- repositoryId set, refName set: returns all policy configurations that *apply* to a particular branch in a repository\n- repositoryId set, refName unset: returns all policy configurations that *apply* to a particular repository\n- repositoryId unset, refName unset: returns all policy configurations that are *defined* at the project level\n- repositoryId unset, refName set: returns all project-level branch policies, plus the project level configurations\nFor all of the examples above, when policyType is set, it'll restrict results to the given policy type",
        "operationId": "Policy Configurations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "repositoryId",
              "description": "The repository id.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "refName",
              "description": "The fully-qualified Git ref name (e.g. refs/heads/master).",
              "required": false,
              "type": "string"
            },
            {
              "name": "policyType",
              "description": "The policy type filter.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "$top",
              "description": "Maximum number of policies to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Pass a policy configuration ID to fetch the next page of results, up to top number of results, for this endpoint.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyConfiguration"
              }
            },
            "headers": {
              "x-ms-continuationtoken": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestsByProject": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/pullrequests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all pull requests matching a specified criteria.\n\nPlease note that description field will be truncated up to 400 symbols in the result.",
        "operationId": "Pull Requests_Get Pull Requests By Project",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "searchCriteria.creatorId",
              "description": "If set, search for pull requests that were created by this identity.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.includeLinks",
              "description": "Whether to include the _links field on the shallow references",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.maxTime",
              "description": "If specified, filters pull requests that created/closed before this date based on the queryTimeRangeType specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "searchCriteria.minTime",
              "description": "If specified, filters pull requests that created/closed after this date based on the queryTimeRangeType specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "searchCriteria.queryTimeRangeType",
              "description": "The type of time range which should be used for minTime and maxTime. Defaults to Created if unset.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "PullRequestTimeRangeType",
                "values": [
                  {
                    "value": "created",
                    "description": "The date when the pull request was created."
                  },
                  {
                    "value": "closed",
                    "description": "The date when the pull request was closed (completed, abandoned, or merged externally)."
                  }
                ]
              }
            },
            {
              "name": "searchCriteria.repositoryId",
              "description": "If set, search for pull requests whose target branch is in this repository.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.reviewerId",
              "description": "If set, search for pull requests that have this identity as a reviewer.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.sourceRefName",
              "description": "If set, search for pull requests from this branch.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.sourceRepositoryId",
              "description": "If set, search for pull requests whose source branch is in this repository.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.status",
              "description": "If set, search for pull requests that are in this state. Defaults to Active if unset.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "PullRequestStatus",
                "values": [
                  {
                    "value": "notSet",
                    "description": "Status not set. Default state."
                  },
                  {
                    "value": "active",
                    "description": "Pull request is active."
                  },
                  {
                    "value": "abandoned",
                    "description": "Pull request is abandoned."
                  },
                  {
                    "value": "completed",
                    "description": "Pull request is completed."
                  },
                  {
                    "value": "all",
                    "description": "Used in pull request search criteria to include all statuses."
                  }
                ]
              }
            },
            {
              "name": "searchCriteria.targetRefName",
              "description": "If set, search for pull requests into this branch.",
              "required": false,
              "type": "string"
            },
            {
              "name": "maxCommentLength",
              "description": "Not used.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The number of pull requests to retrieve.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequest"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/pullrequests/{pullRequestId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a pull request.",
        "operationId": "Pull Requests_Get Pull Request By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "The ID of the pull request to retrieve.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        }
      }
    ],
    "GetRecycleBinRepositories": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/recycleBin/repositories",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve soft-deleted git repositories from the recycle bin.",
        "operationId": "Repositories_Get Recycle Bin Repositories",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitDeletedRepository"
              }
            }
          }
        }
      }
    ],
    "DeleteRepositoryFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/recycleBin/repositories/{repositoryId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Destroy (hard delete) a soft-deleted Git repository.",
        "operationId": "Repositories_Delete Repository From Recycle Bin",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The ID of the repository.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "RestoreRepositoryFromRecycleBin": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/recycleBin/repositories/{repositoryId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Recover a soft-deleted Git repository. Recently deleted repositories go into a soft-delete state for a period of time before they are hard deleted and become unrecoverable.",
        "operationId": "Repositories_Restore Repository From Recycle Bin",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The ID of the repository.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitRecycleBinRepositoryDetails"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRepository"
            }
          }
        }
      }
    ],
    "CreateRepository": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a git repository in a team project.",
        "operationId": "Repositories_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "sourceRef",
              "description": "[optional] Specify the source refs to use while creating a fork repo",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Specify the repo name, team project and/or parent repository. Team project information can be omitted from gitRepositoryToCreate if the request is project-scoped (i.e., includes project Id).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitRepositoryCreateOptions"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitRepository"
            }
          }
        }
      }
    ],
    "GetRepositories": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve git repositories.",
        "operationId": "Repositories_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "[optional] True to include reference links. The default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeAllUrls",
              "description": "[optional] True to include all remote URLs. The default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeHidden",
              "description": "[optional] True to include hidden repositories. The default value is false.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRepository"
              }
            }
          }
        }
      }
    ],
    "DeleteRepository": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a git repository",
        "operationId": "Repositories_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The ID of the repository.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetRepository": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a git repository.",
        "operationId": "Repositories_Get Repository",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRepository"
            }
          }
        }
      }
    ],
    "UpdateRepository": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates the Git repository with either a new repo name or a new default branch.",
        "operationId": "Repositories_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The ID of the repository.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Specify a new repo name or a new default branch of the repository",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitRepository"
            }
          }
        },
        "responses": {
          "200": {
            "description": "The operation succeeded. The response contains the updated repository information.",
            "schema": {
              "$ref": "#/definitions/GitRepository"
            }
          }
        }
      }
    ],
    "CreateAnnotatedTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/annotatedtags",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create an annotated tag.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects\nmay contain a repository of the same name. You don't need to include the project if you specify a\nrepository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).",
        "operationId": "Annotated Tags_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Object containing details of tag to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitAnnotatedTag"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitAnnotatedTag"
            }
          }
        }
      }
    ],
    "GetAnnotatedTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/annotatedtags/{objectId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an annotated tag.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects\nmay contain a repository of the same name. You don't need to include the project if you specify a\nrepository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).",
        "operationId": "Annotated Tags_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "objectId",
              "description": "ObjectId (Sha1Id) of tag to get.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitAnnotatedTag"
            }
          }
        }
      }
    ],
    "GetBlobs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/blobs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Gets one or more blobs in a zip file download.",
        "operationId": "Blobs_Get Blobs Zip",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "filename",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Blob IDs (SHA1 hashes) to be returned in the zip file.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetBlob": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/blobs/{sha1}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a single blob.\n\nRepositories have both a name and an identifier. Identifiers are globally unique,\nbut several projects may contain a repository of the same name. You don't need to include\nthe project if you specify a repository by ID. However, if you specify a repository by name,\nyou must also specify the project (by name or ID).",
        "operationId": "Blobs_Get Blob",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "sha1",
              "description": "SHA1 hash of the file. You can get the SHA1 of a file using the \"Git/Items/Get Item\" endpoint.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "download",
              "description": "If true, prompt for a download rather than rendering in a browser. Note: this value defaults to true if $format is zip",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "fileName",
              "description": "Provide a fileName to use for a download.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$format",
              "description": "Options: json, zip, text, octetstream. If not set, defaults to the MIME type set in the Accept header.",
              "required": false,
              "type": "string"
            },
            {
              "name": "resolveLfs",
              "description": "If true, try to resolve a blob to its LFS contents, if it's an LFS pointer file. Only compatible with octet-stream Accept headers or $format types",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitBlobRef"
            }
          }
        }
      }
    ],
    "CreateCherryPick": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/cherryPicks",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Cherry pick a specific commit or commits that are associated to a pull request into a new branch.",
        "operationId": "Cherry Picks_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitAsyncRefOperationParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCherryPick"
            }
          }
        }
      }
    ],
    "GetCherryPickForRefName": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/cherryPicks",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve information about a cherry pick operation for a specific branch. This operation is expensive due to the underlying object structure, so this API only looks at the 1000 most recent cherry pick operations.",
        "operationId": "Cherry Picks_Get Cherry Pick For Ref Name",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "refName",
              "description": "The GitAsyncRefOperationParameters generatedRefName used for the cherry pick operation.",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCherryPick"
            }
          }
        }
      }
    ],
    "GetCherryPick": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/cherryPicks/{cherryPickId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve information about a cherry pick operation by cherry pick Id.",
        "operationId": "Cherry Picks_Get Cherry Pick",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "cherryPickId",
              "description": "ID of the cherry pick.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCherryPick"
            }
          }
        }
      }
    ],
    "GetPushCommits": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commits",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a list of commits associated with a particular push.",
        "operationId": "Commits_Get Push Commits",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The id or friendly name of the repository. To use the friendly name, projectId must also be specified.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "pushId",
              "description": "The id of the push.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "top",
              "description": "The maximum number of commits to return (\"get the top x commits\").",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "skip",
              "description": "The number of commits to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeLinks",
              "description": "Set to false to avoid including REST Url links for resources. Defaults to true.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitCommitRef"
              }
            }
          }
        }
      }
    ],
    "GetCommit": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a particular commit.",
        "operationId": "Commits_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "commitId",
              "description": "The id of the commit.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The id or friendly name of the repository. To use the friendly name, projectId must also be specified.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "changeCount",
              "description": "The number of changes to include in the result.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCommit"
            }
          }
        }
      }
    ],
    "GetChanges": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve changes for a particular commit.",
        "operationId": "Commits_Get Changes",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "commitId",
              "description": "The id of the commit.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The id or friendly name of the repository. To use the friendly name, projectId must also be specified.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "top",
              "description": "The maximum number of changes to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "skip",
              "description": "The number of changes to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCommitChanges"
            }
          }
        }
      }
    ],
    "CreateCommitStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/statuses",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create Git commit status.",
        "operationId": "Statuses_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "commitId",
              "description": "ID of the Git commit.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Git commit status object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitStatus"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitStatus"
            }
          }
        }
      }
    ],
    "GetStatuses": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/statuses",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get statuses associated with the Git commit.",
        "operationId": "Statuses_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "commitId",
              "description": "ID of the Git commit.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "top",
              "description": "Optional. The number of statuses to retrieve. Default is 1000.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "skip",
              "description": "Optional. The number of statuses to ignore. Default is 0. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "latestOnly",
              "description": "The flag indicates whether to get only latest statuses grouped by `Context.Name` and `Context.Genre`.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitStatus"
              }
            }
          }
        }
      }
    ],
    "GetCommitsBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/commitsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve git commits for a project matching the search criteria",
        "operationId": "Commits_Get Commits Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$skip",
              "description": "Number of commits to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Maximum number of commits to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeStatuses",
              "description": "True to include additional commit status information.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Search options",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitQueryCommitsCriteria"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitCommitRef"
              }
            }
          }
        }
      }
    ],
    "GetCommitDiffs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/diffs/commits",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Find the closest common commit (the merge base) between base and target commits, and get the diff between either the base and target commits or common and target commits.",
        "operationId": "Diffs_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "diffCommonCommit",
              "description": "If true, diff between common and target commits. If false, diff between base and target commits.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "Maximum number of changes to return. Defaults to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of changes to skip",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "baseVersion",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "baseVersionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "baseVersionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            },
            {
              "name": "targetVersion",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "targetVersionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "targetVersionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitCommitDiffs"
            }
          }
        }
      }
    ],
    "CreateImportRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/importRequests",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create an import request.",
        "operationId": "Import Requests_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The import request to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitImportRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitImportRequest"
            }
          }
        }
      }
    ],
    "QueryImportRequests": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/importRequests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve import requests for a repository.",
        "operationId": "Import Requests_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeAbandoned",
              "description": "True to include abandoned import requests in the results.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitImportRequest"
              }
            }
          }
        }
      }
    ],
    "GetImportRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a particular import request.",
        "operationId": "Import Requests_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "importRequestId",
              "description": "The unique identifier for the import request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitImportRequest"
            }
          }
        }
      }
    ],
    "UpdateImportRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Retry or abandon a failed import request.\n\nThere can only be one active import request associated with a repository. Marking a failed import request abandoned makes it inactive.",
        "operationId": "Import Requests_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "importRequestId",
              "description": "The unique identifier for the import request to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The updated version of the import request. Currently, the only change allowed is setting the Status to Queued or Abandoned.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitImportRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitImportRequest"
            }
          }
        }
      }
    ],
    "GetItems": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/items",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn't apply to zipped content which is always returned as a download.",
        "operationId": "Items_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scopePath",
              "description": "The path scope.  The default is null.",
              "required": false,
              "type": "string"
            },
            {
              "name": "recursionLevel",
              "description": "The recursion level of this request. The default is 'none', no recursion.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "VersionControlRecursionType",
                "values": [
                  {
                    "value": "none",
                    "description": "Only return the specified item."
                  },
                  {
                    "value": "oneLevel",
                    "description": "Return the specified item and its direct children."
                  },
                  {
                    "value": "oneLevelPlusNestedEmptyFolders",
                    "description": "Return the specified item and its direct children, as well as recursive chains of nested child folders that only contain a single folder."
                  },
                  {
                    "value": "full",
                    "description": "Return specified item and all descendants"
                  }
                ]
              }
            },
            {
              "name": "includeContentMetadata",
              "description": "Set to true to include content metadata.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "latestProcessedChange",
              "description": "Set to true to include the latest changes.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "download",
              "description": "Set to true to download the response as a file.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLinks",
              "description": "Set to true to include links to items.  Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$format",
              "description": "If specified, this overrides the HTTP Accept request header to return either 'json' or 'zip'. If $format is specified, then api-version should also be specified as a query parameter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            },
            {
              "name": "zipForUnix",
              "description": "Set to true to keep the file permissions for unix (and POSIX) systems like executables and symlinks",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitItem"
              }
            }
          }
        }
      }
    ],
    "GetItemsBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/itemsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path",
        "operationId": "Items_Get Items Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Request data attributes: ItemDescriptors, IncludeContentMetadata, LatestProcessedChange, IncludeLinks. ItemDescriptors: Collection of items to fetch, including path, version, and recursion level. IncludeContentMetadata: Whether to include metadata for all items LatestProcessedChange: Whether to include shallow ref to commit that last changed each item. IncludeLinks: Whether to include the _links field on the shallow references.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitItemRequestData"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "array"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullrequestquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "This API is used to find what pull requests are related to a given commit.  It can be used to either find the pull request that created a particular merge commit or it can be used to find all pull requests that have ever merged a particular commit.  The input is a list of queries which each contain a list of commits. For each commit that you search against, you will get back a dictionary of commit -> pull requests.",
        "operationId": "Pull Request Query_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The list of queries to perform.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequestQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestQuery"
            }
          }
        }
      }
    ],
    "CreatePullRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullrequests",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a pull request.",
        "operationId": "Pull Requests_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "supportsIterations",
              "description": "If true, subsequent pushes to the pull request will be individually reviewable. Set this to false for large pull requests for performance reasons if this functionality is not needed.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The pull request to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        }
      }
    ],
    "GetPullRequests": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullrequests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all pull requests matching a specified criteria.\n\nPlease note that description field will be truncated up to 400 symbols in the result.",
        "operationId": "Pull Requests_Get Pull Requests",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "searchCriteria.creatorId",
              "description": "If set, search for pull requests that were created by this identity.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.includeLinks",
              "description": "Whether to include the _links field on the shallow references",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.maxTime",
              "description": "If specified, filters pull requests that created/closed before this date based on the queryTimeRangeType specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "searchCriteria.minTime",
              "description": "If specified, filters pull requests that created/closed after this date based on the queryTimeRangeType specified.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "searchCriteria.queryTimeRangeType",
              "description": "The type of time range which should be used for minTime and maxTime. Defaults to Created if unset.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "PullRequestTimeRangeType",
                "values": [
                  {
                    "value": "created",
                    "description": "The date when the pull request was created."
                  },
                  {
                    "value": "closed",
                    "description": "The date when the pull request was closed (completed, abandoned, or merged externally)."
                  }
                ]
              }
            },
            {
              "name": "searchCriteria.repositoryId",
              "description": "If set, search for pull requests whose target branch is in this repository.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.reviewerId",
              "description": "If set, search for pull requests that have this identity as a reviewer.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.sourceRefName",
              "description": "If set, search for pull requests from this branch.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.sourceRepositoryId",
              "description": "If set, search for pull requests whose source branch is in this repository.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.status",
              "description": "If set, search for pull requests that are in this state. Defaults to Active if unset.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "PullRequestStatus",
                "values": [
                  {
                    "value": "notSet",
                    "description": "Status not set. Default state."
                  },
                  {
                    "value": "active",
                    "description": "Pull request is active."
                  },
                  {
                    "value": "abandoned",
                    "description": "Pull request is abandoned."
                  },
                  {
                    "value": "completed",
                    "description": "Pull request is completed."
                  },
                  {
                    "value": "all",
                    "description": "Used in pull request search criteria to include all statuses."
                  }
                ]
              }
            },
            {
              "name": "searchCriteria.targetRefName",
              "description": "If set, search for pull requests into this branch.",
              "required": false,
              "type": "string"
            },
            {
              "name": "maxCommentLength",
              "description": "Not used.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "The number of pull requests to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The number of pull requests to retrieve.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequest"
              }
            }
          }
        }
      }
    ],
    "GetPullRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullrequests/{pullRequestId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a pull request.",
        "operationId": "Pull Requests_Get Pull Request",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "The ID of the pull request to retrieve.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "maxCommentLength",
              "description": "Not used.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Not used.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Not used.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeCommits",
              "description": "If true, the pull request will be returned with the associated commits.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeWorkItemRefs",
              "description": "If true, the pull request will be returned with the associated work item references.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        }
      }
    ],
    "UpdatePullRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullrequests/{pullRequestId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a pull request\n\nThese are the properties that can be updated with the API:\n - Status\n - Title\n - Description (up to 4000 characters)\n - CompletionOptions\n - MergeOptions\n - AutoCompleteSetBy.Id\n - TargetRefName (when the PR retargeting feature is enabled)\n Attempting to update other properties outside of this list will either cause the server to throw an `InvalidArgumentValueException`,\n or to silently ignore the update.",
        "operationId": "Pull Requests_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The pull request content that should be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequest"
            }
          }
        }
      }
    ],
    "GetAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of files attached to a given pull request.",
        "operationId": "Pull Request Attachments_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            }
          }
        }
      }
    ],
    "CreateAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Attach a new file to a pull request.",
        "operationId": "Pull Request Attachments_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileName",
              "description": "The name of the file.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        }
      }
    ],
    "DeleteAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a pull request attachment.",
        "operationId": "Pull Request Attachments_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileName",
              "description": "The name of the attachment to delete.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the file content of a pull request attachment.",
        "operationId": "Pull Request Attachments_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fileName",
              "description": "The name of the attachment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetPullRequestCommits": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/commits",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the commits for the specified pull request.",
        "operationId": "Pull Request Commits_Get Pull Request Commits",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "Maximum number of commits to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "The continuation token used for pagination.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitCommitRef"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestIterations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get the list of iterations for the specified pull request.",
        "operationId": "Pull Request Iterations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeCommits",
              "description": "If true, include the commits associated with each iteration in the response.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequestIteration"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestIteration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get the specified iteration for a pull request.",
        "operationId": "Pull Request Iterations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration to return.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestIteration"
            }
          }
        }
      }
    ],
    "GetPullRequestIterationChanges": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve the changes made in a pull request between two iterations.",
        "operationId": "Pull Request Iteration Changes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration. <br /> Iteration one is the head of the source branch at the time the pull request is created and subsequent iterations are created when there are pushes to the source branch. Allowed values are between 1 and the maximum iteration on this pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "Optional. The number of changes to retrieve.  The default value is 100 and the maximum value is 2000.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Optional. The number of changes to ignore.  For example, to retrieve changes 101-150, set top 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$compareTo",
              "description": "ID of the pull request iteration to compare against.  The default value is zero which indicates the comparison is made against the common commit between the source and target branches",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestIterationChanges"
            }
          }
        }
      }
    ],
    "GetPullRequestIterationCommits": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/commits",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the commits for the specified iteration of a pull request.",
        "operationId": "Pull Request Commits_Get Pull Request Iteration Commits",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration from which to get the commits.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "top",
              "description": "Maximum number of commits to return. The maximum number of commits that can be returned per batch is 500.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "skip",
              "description": "Number of commits to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitCommitRef"
              }
            }
          }
        }
      }
    ],
    "CreatePullRequestIterationStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.\n\nThe only required field for the status is `Context.Name` that uniquely identifies the status.\nNote that `iterationId` in the request body is optional since `iterationId` can be specified in the URL.\nA conflict between `iterationId` in the URL and `iterationId` in the request body will result in status code 400.",
        "operationId": "Pull Request Iteration Statuses_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Pull request status to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        }
      }
    ],
    "GetPullRequestIterationStatuses": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all the statuses associated with a pull request iteration.",
        "operationId": "Pull Request Iteration Statuses_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequestStatus"
              }
            }
          }
        }
      }
    ],
    "UpdatePullRequestIterationStatuses": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update pull request iteration statuses collection. The only supported operation type is `remove`.\n\nThis operation allows to delete multiple statuses in one call.\nThe path of the `remove` operation should refer to the ID of the pull request status.\nFor example `path=\"/1\"` refers to the pull request status with ID 1.",
        "operationId": "Pull Request Iteration Statuses_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Operations to apply to the pull request statuses in JSON Patch format.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePullRequestIterationStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete pull request iteration status.\n\nYou can remove multiple statuses in one call by using Update operation.",
        "operationId": "Pull Request Iteration Statuses_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "statusId",
              "description": "ID of the pull request status.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPullRequestIterationStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.",
        "operationId": "Pull Request Iteration Statuses_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "ID of the pull request iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "statusId",
              "description": "ID of the pull request status.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        }
      }
    ],
    "CreatePullRequestLabel": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a tag (if that does not exists yet) and add that as a label (tag) for a specified pull request. The only required field is the name of the new label (tag).",
        "operationId": "Pull Request Labels_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "Project ID or project name.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Label to assign to the pull request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApiCreateTagRequestData"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebApiTagDefinition"
            }
          }
        }
      }
    ],
    "GetPullRequestLabels": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all the labels (tags) assigned to a pull request.",
        "operationId": "Pull Request Labels_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "Project ID or project name.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebApiTagDefinition"
              }
            }
          }
        }
      }
    ],
    "DeletePullRequestLabels": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a label (tag) from the set of those assigned to the pull request. The tag itself will not be deleted.",
        "operationId": "Pull Request Labels_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "labelIdOrName",
              "description": "The name or ID of the label requested.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "Project ID or project name.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPullRequestLabel": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieves a single label (tag) that has been assigned to a pull request.",
        "operationId": "Pull Request Labels_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "labelIdOrName",
              "description": "The name or ID of the label requested.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "Project ID or project name.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebApiTagDefinition"
            }
          }
        }
      }
    ],
    "GetPullRequestProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get external properties of the pull request.",
        "operationId": "Pull Request Properties_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "UpdatePullRequestProperties": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Create or update pull request external properties. The patch operation can be `add`, `replace` or `remove`. For `add` operation, the path can be empty. If the path is empty, the value must be a list of key value pairs. For `replace` operation, the path cannot be empty. If the path does not exist, the property will be added to the collection. For `remove` operation, the path cannot be empty. If the path does not exist, no action will be performed.",
        "operationId": "Pull Request Properties_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Properties to add, replace or remove in JSON Patch format.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertiesCollection"
            }
          }
        }
      }
    ],
    "CreatePullRequestReviewers": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add reviewers to a pull request.",
        "operationId": "Pull Request Reviewers_Create Pull Request Reviewers",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Reviewers to add to the pull request.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRef"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRefWithVote"
              }
            }
          }
        }
      }
    ],
    "CreateUnmaterializedPullRequestReviewer": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Add an unmaterialized identity to the reviewers of a pull request.",
        "operationId": "Pull Request Reviewers_Create Unmaterialized Pull Request Reviewer",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Reviewer to add to the pull request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        }
      }
    ],
    "GetPullRequestReviewers": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve the reviewers for a pull request",
        "operationId": "Pull Request Reviewers_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRefWithVote"
              }
            }
          }
        }
      }
    ],
    "UpdatePullRequestReviewers": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Reset the votes of multiple reviewers on a pull request.  NOTE: This endpoint only supports updating votes, but does not support updating required reviewers (use policy) or display names.",
        "operationId": "Pull Request Reviewers_Update Pull Request Reviewers",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "IDs of the reviewers whose votes will be reset to zero",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRefWithVote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreatePullRequestReviewer": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Add a reviewer to a pull request or cast a vote.",
        "operationId": "Pull Request Reviewers_Create Pull Request Reviewer",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reviewerId",
              "description": "ID of the reviewer.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Reviewer's vote.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.<br />Reviewers can set their own vote with this method.  When adding other reviewers, vote must be set to zero.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        }
      }
    ],
    "DeletePullRequestReviewer": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove a reviewer from a pull request.",
        "operationId": "Pull Request Reviewers_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reviewerId",
              "description": "ID of the reviewer to remove.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPullRequestReviewer": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve information about a particular reviewer on a pull request",
        "operationId": "Pull Request Reviewers_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reviewerId",
              "description": "ID of the reviewer.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        }
      }
    ],
    "UpdatePullRequestReviewer": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Edit a reviewer entry. These fields are patchable: isFlagged, hasDeclined",
        "operationId": "Pull Request Reviewers_Update Pull Request Reviewer",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reviewerId",
              "description": "ID of the reviewer.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Reviewer data.<br />If the reviewer's ID is included here, it must match the reviewerID parameter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IdentityRefWithVote"
            }
          }
        }
      }
    ],
    "SharePullRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/share",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Sends an e-mail notification about a specific pull request to a set of recipients",
        "operationId": "Pull Request Share_Share Pull Request",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the git repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareNotificationContext"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreatePullRequestStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a pull request status.\n\nThe only required field for the status is `Context.Name` that uniquely identifies the status.\nNote that you can specify iterationId in the request body to post the status on the iteration.",
        "operationId": "Pull Request Statuses_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Pull request status to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        }
      }
    ],
    "GetPullRequestStatuses": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all the statuses associated with a pull request.",
        "operationId": "Pull Request Statuses_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequestStatus"
              }
            }
          }
        }
      }
    ],
    "UpdatePullRequestStatuses": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update pull request statuses collection. The only supported operation type is `remove`.\n\nThis operation allows to delete multiple statuses in one call.\nThe path of the `remove` operation should refer to the ID of the pull request status.\nFor example `path=\"/1\"` refers to the pull request status with ID 1.",
        "operationId": "Pull Request Statuses_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Operations to apply to the pull request statuses in JSON Patch format.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeletePullRequestStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete pull request status.\n\nYou can remove multiple statuses in one call by using Update operation.",
        "operationId": "Pull Request Statuses_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "statusId",
              "description": "ID of the pull request status.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPullRequestStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the specific pull request status by ID. The status ID is unique within the pull request across all iterations.",
        "operationId": "Pull Request Statuses_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request’s target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "statusId",
              "description": "ID of the pull request status.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestStatus"
            }
          }
        }
      }
    ],
    "CreateThread": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a thread in a pull request.",
        "operationId": "Pull Request Threads_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "Repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The thread to create. Thread must contain at least one comment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequestCommentThread"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestCommentThread"
            }
          }
        }
      }
    ],
    "GetThreads": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all threads in a pull request.",
        "operationId": "Pull Request Threads_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$iteration",
              "description": "If specified, thread positions will be tracked using this iteration as the right side of the diff.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$baseIteration",
              "description": "If specified, thread positions will be tracked using this iteration as the left side of the diff.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPullRequestCommentThread"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestThread": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a thread in a pull request.",
        "operationId": "Pull Request Threads_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$iteration",
              "description": "If specified, thread position will be tracked using this iteration as the right side of the diff.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$baseIteration",
              "description": "If specified, thread position will be tracked using this iteration as the left side of the diff.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestCommentThread"
            }
          }
        }
      }
    ],
    "UpdateThread": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a thread in a pull request.",
        "operationId": "Pull Request Threads_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The thread content that should be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPullRequestCommentThread"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPullRequestCommentThread"
            }
          }
        }
      }
    ],
    "CreateComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a comment on a specific thread in a pull request (up to 500 comments can be created per thread).",
        "operationId": "Pull Request Thread Comments_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread that the desired comment is in.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The comment to create. Comments can be up to 150,000 characters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "GetComments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all comments associated with a specific thread in a pull request.",
        "operationId": "Pull Request Thread Comments_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        }
      }
    ],
    "DeleteComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a comment associated with a specific thread in a pull request.",
        "operationId": "Pull Request Thread Comments_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread that the desired comment is in.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "ID of the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a comment associated with a specific thread in a pull request.",
        "operationId": "Pull Request Thread Comments_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread that the desired comment is in.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "ID of the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "UpdateComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a comment associated with a specific thread in a pull request.",
        "operationId": "Pull Request Thread Comments_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "ID of the thread that the desired comment is in.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "ID of the comment to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The comment content that should be updated. Comments can be up to 150,000 characters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "CreateLike": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add a like on a comment.",
        "operationId": "Pull Request Comment Likes_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "The ID of the thread that contains the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "The ID of the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeleteLike": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a like on a comment.",
        "operationId": "Pull Request Comment Likes_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "The ID of the thread that contains the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "The ID of the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetLikes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get likes for a comment.",
        "operationId": "Pull Request Comment Likes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The repository ID of the pull request's target branch.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "threadId",
              "description": "The ID of the thread that contains the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "The ID of the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRef"
              }
            }
          }
        }
      }
    ],
    "GetPullRequestWorkItemRefs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a list of work items associated with a pull request.",
        "operationId": "Pull Request Work Items_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID or name of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pullRequestId",
              "description": "ID of the pull request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRef"
              }
            }
          }
        }
      }
    ],
    "CreatePush": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pushes",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Push changes to the repository.",
        "operationId": "Pushes_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitPush"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPush"
            }
          }
        }
      }
    ],
    "GetPushes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pushes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Retrieves pushes associated with the specified repository.",
        "operationId": "Pushes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$skip",
              "description": "Number of pushes to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Number of pushes to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "searchCriteria.fromDate",
              "description": "Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "searchCriteria.includeLinks",
              "description": "Whether to include the _links field on the shallow references",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.includeRefUpdates",
              "description": "Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.pusherId",
              "description": "Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "searchCriteria.refName",
              "description": "Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.toDate",
              "description": "Search criteria attributes: fromDate, toDate, pusherId, refName, includeRefUpdates or includeLinks. fromDate: Start date to search from. toDate: End date to search to. pusherId: Identity of the person who submitted the push. refName: Branch name to consider. includeRefUpdates: If true, include the list of refs that were updated by the push. includeLinks: Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitPush"
              }
            }
          }
        }
      }
    ],
    "GetPush": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/pushes/{pushId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Retrieves a particular push.",
        "operationId": "Pushes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pushId",
              "description": "ID of the push.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeCommits",
              "description": "The number of commits to include in the result.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeRefUpdates",
              "description": "If true, include the list of refs that were updated by the push.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitPush"
            }
          }
        }
      }
    ],
    "GetRefs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/refs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Queries the provided repository for its refs and returns them.",
        "operationId": "Refs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "filter",
              "description": "[optional] A filter to apply to the refs (starts with).",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeLinks",
              "description": "[optional] Specifies if referenceLinks should be included in the result. default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeStatuses",
              "description": "[optional] Includes up to the first 1000 commit statuses for each ref. The default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeMyBranches",
              "description": "[optional] Includes only branches that the user owns, the branches the user favorites, and the default branch. The default value is false. Cannot be combined with the filter parameter.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "latestStatusesOnly",
              "description": "[optional] True to include only the tip commit status for each ref. This option requires `includeStatuses` to be true. The default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "peelTags",
              "description": "[optional] Annotated tags will populate the PeeledObjectId property. default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "filterContains",
              "description": "[optional] A filter to apply to the refs (contains).",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "[optional] Maximum number of refs to return. It cannot be bigger than 1000. If it is not provided but continuationToken is, top will default to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "The continuation token used for pagination.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRef"
              }
            }
          }
        }
      }
    ],
    "UpdateRef": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/refs",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Lock or Unlock a branch.",
        "operationId": "Refs_Update Ref",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "filter",
              "description": "The name of the branch to lock/unlock",
              "required": true,
              "type": "string"
            },
            {
              "name": "projectId",
              "description": "ID or name of the team project. Optional if specifying an ID for repository.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The ref update action (lock/unlock) to perform",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitRefUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRef"
            }
          }
        }
      }
    ],
    "UpdateRefs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/refs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creating, updating, or deleting refs(branches).\n\nUpdating a ref means making it point at a different commit than it used to. You must specify both the old and new commit to avoid race conditions.",
        "operationId": "Refs_Update Refs",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "ID or name of the team project. Optional if specifying an ID for repository.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of ref updates to attempt to perform",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRefUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRefUpdateResult"
              }
            }
          }
        }
      }
    ],
    "CreateRevert": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/reverts",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Starts the operation to create a new branch which reverts changes introduced by either a specific commit or commits that are associated to a pull request.",
        "operationId": "Reverts_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitAsyncRefOperationParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRevert"
            }
          }
        }
      }
    ],
    "GetRevertForRefName": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/reverts",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve information about a revert operation for a specific branch.",
        "operationId": "Reverts_Get Revert For Ref Name",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "refName",
              "description": "The GitAsyncRefOperationParameters generatedRefName used for the revert operation.",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRevert"
            }
          }
        }
      }
    ],
    "GetRevert": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/reverts/{revertId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve information about a revert operation by revert Id.",
        "operationId": "Reverts_Get Revert",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "revertId",
              "description": "ID of the revert operation.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "repositoryId",
              "description": "ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitRevert"
            }
          }
        }
      }
    ],
    "GetBranches": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/stats/branches",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve statistics about all branches within a repository.",
        "operationId": "Stats_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "baseVersionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "baseVersionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "baseVersionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitBranchStats"
              }
            }
          }
        }
      }
    ],
    "GetSuggestions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/suggestions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a pull request suggestion for a particular repository or team project.",
        "operationId": "Suggestions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "ID of the git repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitSuggestion"
              }
            }
          }
        }
      }
    ],
    "GetTree": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryId}/trees/{sha1}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "The Tree endpoint returns the collection of objects underneath the specified tree. Trees are folders in a Git repository.\n\nRepositories have both a name and an identifier. Identifiers are globally unique, but several projects may contain a repository of the same name. You don't need to include the project if you specify a repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID.",
        "operationId": "Trees_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryId",
              "description": "Repository Id.",
              "required": true,
              "type": "string"
            },
            {
              "name": "sha1",
              "description": "SHA1 hash of the tree object.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "projectId",
              "description": "Project Id.",
              "required": false,
              "type": "string"
            },
            {
              "name": "recursive",
              "description": "Search recursively. Include trees underneath this tree. Default is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "fileName",
              "description": "Name to use if a .zip file is returned. Default is the object ID.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$format",
              "description": "Use \"zip\". Defaults to the MIME type set in the Accept header.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitTreeRef"
            }
          }
        }
      }
    ],
    "GetMergeBases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/commits/{commitId}/mergebases",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Find the merge bases of two commits, optionally across forks. If otherRepositoryId is not specified, the merge bases will only be calculated within the context of the local repositoryNameOrId.",
        "operationId": "Merge Bases_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "ID or name of the local repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "commitId",
              "description": "First commit, usually the tip of the target branch of the potential merge.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "otherCommitId",
              "description": "Other commit, usually the tip of the source branch of the potential merge.",
              "required": true,
              "type": "string"
            },
            {
              "name": "otherCollectionId",
              "description": "The collection ID where otherCommitId lives.",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "otherRepositoryId",
              "description": "The repository ID where otherCommitId lives.",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitCommitRef"
              }
            }
          }
        }
      }
    ],
    "GetForks": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/forks/{collectionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all forks of a repository in the collection.",
        "operationId": "Forks_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "collectionId",
              "description": "Team project collection ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "True to include links.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitRepositoryRef"
              }
            }
          }
        }
      }
    ],
    "CreateForkSyncRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Request that another repository's refs be fetched into this one. It syncs two existing forks. To create a fork, please see the <a href=\"https://docs.microsoft.com/en-us/rest/api/vsts/git/repositories/create?view=azure-devops-rest-5.1\"> repositories endpoint</a>",
        "operationId": "Forks_Create fork sync request",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "True to include links",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Source repository and ref mapping.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitForkSyncRequestParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitForkSyncRequest"
            }
          }
        }
      }
    ],
    "GetForkSyncRequests": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all requested fork sync operations on this repository.",
        "operationId": "Forks_Get Fork Sync Requests",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeAbandoned",
              "description": "True to include abandoned requests.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLinks",
              "description": "True to include links.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GitForkSyncRequest"
              }
            }
          }
        }
      }
    ],
    "GetForkSyncRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific fork sync operation's details.",
        "operationId": "Forks_Get fork sync request",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "forkSyncOperationId",
              "description": "OperationId of the sync request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "True to include links.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitForkSyncRequest"
            }
          }
        }
      }
    ],
    "CreateMergeRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/merges",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Request a git merge operation. Currently we support merging only 2 commits.",
        "operationId": "Merges_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "True to include links",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Parents commitIds and merge commit messsage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitMergeParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitMerge"
            }
          }
        }
      }
    ],
    "GetMergeRequest": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/git/repositories/{repositoryNameOrId}/merges/{mergeOperationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific merge operation's details.",
        "operationId": "Merges_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repositoryNameOrId",
              "description": "The name or ID of the repository.",
              "required": true,
              "type": "string"
            },
            {
              "name": "mergeOperationId",
              "description": "OperationId of the merge request.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeLinks",
              "description": "True to include links",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GitMerge"
            }
          }
        }
      }
    ]
  },
  "graph": {
    "GetDescriptor": [
      {
        "urlTemplate": "/{organization}/_apis/graph/descriptors/{storageKey}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Resolve a storage key to a descriptor",
        "operationId": "Descriptors_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "storageKey",
              "description": "Storage key of the subject (user, group, scope, etc.) to resolve",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphDescriptorResult"
            }
          }
        }
      }
    ],
    "CreateGroup": [
      {
        "urlTemplate": "/{organization}/_apis/graph/groups",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new Azure DevOps group or materialize an existing AAD group.\n\nThe body of the request must be a derived type of GraphGroupCreationContext:\n  * GraphGroupVstsCreationContext - Create a new Azure DevOps group that is not backed by an external provider.\n  * GraphGroupMailAddressCreationContext - Create a new group using the mail address as a reference to an existing group from an external AD or AAD backed provider.\n  * GraphGroupOriginIdCreationContext - Create a new group using the OriginID as a reference to a group from an external AD or AAD backed provider.\n\n Optionally, you can add the newly created group as a member of an existing Azure DevOps group and/or specify a custom storage key for the group.",
        "operationId": "Groups_Create",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scopeDescriptor",
              "description": "A descriptor referencing the scope (collection, project) in which the group should be created. If omitted, will be created in the scope of the enclosing account or organization. Valid only for VSTS groups.",
              "required": false,
              "type": "string"
            },
            {
              "name": "groupDescriptors",
              "description": "A comma separated list of descriptors referencing groups you want the graph group to join",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The subset of the full graph group used to uniquely find the graph subject in an external provider.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphGroupCreationContext"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphGroup"
            }
          }
        }
      }
    ],
    "ListGroups": [
      {
        "urlTemplate": "/{organization}/_apis/graph/groups",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a list of all groups in the current scope (usually organization or account).\n\nThe optional parameters are used to filter down the returned results. Returned results are in no guaranteed order.\n\n Since the list of groups may be large, results are returned in pages of groups.  If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results.",
        "operationId": "Groups_List",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scopeDescriptor",
              "description": "Specify a non-default scope (collection, project) to search for groups.",
              "required": false,
              "type": "string"
            },
            {
              "name": "subjectTypes",
              "description": "A comma separated list of user subject subtypes to reduce the retrieved results, e.g. Microsoft.IdentityModel.Claims.ClaimsIdentity",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "continuationToken",
              "description": "An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraphGroup"
              }
            },
            "headers": {
              "X-MS-ContinuationToken": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteGroup": [
      {
        "urlTemplate": "/{organization}/_apis/graph/groups/{groupDescriptor}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes an Azure DevOps group from all of its parent groups.\n\nThe group will still be visible, but membership\n checks for the group, and all descendants which derive membership through it, will return false.”",
        "operationId": "Groups_Delete",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupDescriptor",
              "description": "The descriptor of the group to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetGroup": [
      {
        "urlTemplate": "/{organization}/_apis/graph/groups/{groupDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a group by its descriptor.\n\nThe group will be returned even if it has been deleted from the account or has had all its memberships\ndeleted.",
        "operationId": "Groups_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupDescriptor",
              "description": "The descriptor of the desired graph group.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphGroup"
            }
          }
        }
      }
    ],
    "UpdateGroup": [
      {
        "urlTemplate": "/{organization}/_apis/graph/groups/{groupDescriptor}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update the properties of an Azure DevOps group.\n\nCurrently limited to only changing the description and account name.",
        "operationId": "Groups_Update",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupDescriptor",
              "description": "The descriptor of the group to modify.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The JSON+Patch document containing the fields to alter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphGroup"
            }
          }
        }
      }
    ],
    "ListMemberships": [
      {
        "urlTemplate": "/{organization}/_apis/graph/Memberships/{subjectDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all the memberships where this descriptor is a member in the relationship.\n\nThe default value for direction is 'up' meaning return all memberships where the subject is a member (e.g. all groups the subject is a member of).\n Alternatively, passing the direction as 'down' will return all memberships where the subject is a container (e.g. all members of the subject group).",
        "operationId": "Memberships_List",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "Fetch all direct memberships of this descriptor.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "direction",
              "description": "Defaults to Up.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GraphTraversalDirection",
                "values": [
                  {
                    "value": "unknown",
                    "description": ""
                  },
                  {
                    "value": "down",
                    "description": ""
                  },
                  {
                    "value": "up",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "depth",
              "description": "The maximum number of edges to traverse up or down the membership tree. Currently the only supported value is '1'.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraphMembership"
              }
            }
          }
        }
      }
    ],
    "AddMembership": [
      {
        "urlTemplate": "/{organization}/_apis/graph/memberships/{subjectDescriptor}/{containerDescriptor}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new membership between a container and subject.",
        "operationId": "Memberships_Add",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "A descriptor to a group or user that can be the child subject in the relationship.",
              "required": true,
              "type": "string"
            },
            {
              "name": "containerDescriptor",
              "description": "A descriptor to a group that can be the container in the relationship.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphMembership"
            }
          }
        }
      }
    ],
    "CheckMembershipExistence": [
      {
        "urlTemplate": "/{organization}/_apis/graph/memberships/{subjectDescriptor}/{containerDescriptor}",
        "verb": "head",
        "apiVersion": "7.1-preview.1",
        "description": "Check to see if a membership relationship between a container and subject exists.",
        "operationId": "Memberships_Check Membership Existence",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "The group or user that is a child subject of the relationship.",
              "required": true,
              "type": "string"
            },
            {
              "name": "containerDescriptor",
              "description": "The group that is the container in the relationship.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The operation succeeded. Membership exists."
          },
          "404": {
            "description": "Membership does not exist."
          }
        }
      }
    ],
    "GetMembership": [
      {
        "urlTemplate": "/{organization}/_apis/graph/memberships/{subjectDescriptor}/{containerDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a membership relationship between a container and subject.",
        "operationId": "Memberships_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "A descriptor to the child subject in the relationship.",
              "required": true,
              "type": "string"
            },
            {
              "name": "containerDescriptor",
              "description": "A descriptor to the container in the relationship.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphMembership"
            }
          }
        }
      }
    ],
    "RemoveMembership": [
      {
        "urlTemplate": "/{organization}/_apis/graph/memberships/{subjectDescriptor}/{containerDescriptor}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes a membership between a container and subject.",
        "operationId": "Memberships_Remove Membership",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "A descriptor to a group or user that is the child subject in the relationship.",
              "required": true,
              "type": "string"
            },
            {
              "name": "containerDescriptor",
              "description": "A descriptor to a group that is the container in the relationship.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetMembershipState": [
      {
        "urlTemplate": "/{organization}/_apis/graph/membershipstates/{subjectDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Check whether a subject is active or inactive.",
        "operationId": "Membership States_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "Descriptor of the subject (user, group, scope, etc.) to check state of",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphMembershipState"
            }
          }
        }
      }
    ],
    "RequestAccess": [
      {
        "urlTemplate": "/{organization}/_apis/graph/requestaccess",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Request Access_Request Access",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JToken"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateServicePrincipal": [
      {
        "urlTemplate": "/{organization}/_apis/graph/serviceprincipals",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Materialize an existing AAD service principal into the ADO account.\n\nNOTE: Created service principals are not active in an account.\n\n Adding a service principal to an account is required before the service principal can be added to ADO groups or assigned an asset.\n\n The body of the request must be a derived type of GraphServicePrincipalCreationContext:\n  * GraphServicePrincipalOriginIdCreationContext - Create a new service principal using the OriginID as a reference to an existing service principal from AAD backed provider.\n\n If the service principal to be added corresponds to a service principal that was previously deleted, then that service principal will be restored.\n\n Optionally, you can add the newly created service principal as a member of an existing ADO group and/or specify a custom storage key for the service principal.",
        "operationId": "Service Principals_Create",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "groupDescriptors",
              "description": "A comma separated list of descriptors of groups you want the graph service principal to join",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The subset of the full graph service principal used to uniquely find the graph subject in an external provider.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphServicePrincipalCreationContext"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphServicePrincipal"
            }
          }
        }
      }
    ],
    "ListServicePrincipals": [
      {
        "urlTemplate": "/{organization}/_apis/graph/serviceprincipals",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of all service principals in a given scope.\n\nSince the list of service principals may be large, results are returned in pages of service principals. If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results. The only reliable way to know if there is no more service principals left is the lack of a continuation token.",
        "operationId": "Service Principals_List",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.",
              "required": false,
              "type": "string"
            },
            {
              "name": "scopeDescriptor",
              "description": "Specify a non-default scope (collection, project) to search for service principals.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraphServicePrincipal"
              }
            },
            "headers": {
              "X-MS-ContinuationToken": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteServicePrincipal": [
      {
        "urlTemplate": "/{organization}/_apis/graph/serviceprincipals/{servicePrincipalDescriptor}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Disables a service principal.\n\nThe service principal will still be visible, but membership checks for the service principal will return false.",
        "operationId": "Service Principals_Delete",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "servicePrincipalDescriptor",
              "description": "The descriptor of the service principal to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetServicePrincipal": [
      {
        "urlTemplate": "/{organization}/_apis/graph/serviceprincipals/{servicePrincipalDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a service principal by its descriptor.",
        "operationId": "Service Principals_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "servicePrincipalDescriptor",
              "description": "The descriptor of the desired service principal.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphServicePrincipal"
            }
          }
        }
      }
    ],
    "GetStorageKey": [
      {
        "urlTemplate": "/{organization}/_apis/graph/storagekeys/{subjectDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Resolve a descriptor to a storage key.",
        "operationId": "Storage Keys_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subjectDescriptor",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphStorageKeyResult"
            }
          }
        }
      }
    ],
    "LookupSubjects": [
      {
        "urlTemplate": "/{organization}/_apis/graph/subjectlookup",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Resolve descriptors to users, groups or scopes (Subjects) in a batch.",
        "operationId": "Subject Lookup_Lookup Subjects",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A list of descriptors that specifies a subset of subjects to retrieve. Each descriptor uniquely identifies the subject across all instance scopes, but only at a single point in time.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphSubjectLookup"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/GraphSubject"
              }
            }
          }
        }
      }
    ],
    "QuerySubjects": [
      {
        "urlTemplate": "/{organization}/_apis/graph/subjectquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Search for Azure Devops users, or/and groups. Results will be returned in a batch with no more than 100 graph subjects.",
        "operationId": "Subject Query_Query",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The query that we'll be using to search includes the following: Query: the search term. The search will be prefix matching only. SubjectKind: \"User\" or \"Group\" can be specified, both or either ScopeDescriptor: Non-default scope can be specified, i.e. project scope descriptor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphSubjectQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraphSubject"
              }
            }
          }
        }
      }
    ],
    "DeleteAvatar": [
      {
        "urlTemplate": "/{organization}/_apis/graph/Subjects/{subjectDescriptor}/avatars",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Avatars_Delete",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subjectDescriptor",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetAvatar": [
      {
        "urlTemplate": "/{organization}/_apis/graph/Subjects/{subjectDescriptor}/avatars",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Avatars_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subjectDescriptor",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "size",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "AvatarSize",
                "values": [
                  {
                    "value": "small",
                    "description": ""
                  },
                  {
                    "value": "medium",
                    "description": ""
                  },
                  {
                    "value": "large",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "format",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        }
      }
    ],
    "SetAvatar": [
      {
        "urlTemplate": "/{organization}/_apis/graph/Subjects/{subjectDescriptor}/avatars",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Avatars_Set Avatar",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subjectDescriptor",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateUser": [
      {
        "urlTemplate": "/{organization}/_apis/graph/users",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Materialize an existing AAD or MSA user into the ADO account.\n\nNOTE: Created users are not active in an account unless they have been explicitly assigned a parent group at creation time or have signed in\n  and been autolicensed through AAD group memberships.\n\n Adding a user to an account is required before the user can be added to ADO groups or assigned an asset.\n\n The body of the request must be a derived type of GraphUserCreationContext:\n  * GraphUserMailAddressCreationContext - Create a new user using the mail address as a reference to an existing user from an external AD or AAD backed provider.\n  * GraphUserOriginIdCreationContext - Create a new user using the OriginID as a reference to an existing user from an external AD or AAD backed provider.\n  * GraphUserPrincipalNameCreationContext - Create a new user using the principal name as a reference to an existing user from an external AD or AAD backed provider.\n\n If the user to be added corresponds to a user that was previously deleted, then that user will be restored.\n\n Optionally, you can add the newly created user as a member of an existing ADO group and/or specify a custom storage key for the user.",
        "operationId": "Users_Create",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "groupDescriptors",
              "description": "A comma separated list of descriptors of groups you want the graph user to join",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The subset of the full graph user used to uniquely find the graph subject in an external provider.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphUserCreationContext"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphUser"
            }
          }
        }
      }
    ],
    "ListUsers": [
      {
        "urlTemplate": "/{organization}/_apis/graph/users",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of all users in a given scope.\n\nSince the list of users may be large, results are returned in pages of users.  If there are more results\n than can be returned in a single page, the result set will contain a continuation token for retrieval of the\n next set of results.",
        "operationId": "Users_List",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "subjectTypes",
              "description": "A comma separated list of user subject subtypes to reduce the retrieved results, e.g. msa’, ‘aad’, ‘svc’ (service identity), ‘imp’ (imported identity), etc.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "continuationToken",
              "description": "An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.",
              "required": false,
              "type": "string"
            },
            {
              "name": "scopeDescriptor",
              "description": "Specify a non-default scope (collection, project) to search for users.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GraphUser"
              }
            },
            "headers": {
              "X-MS-ContinuationToken": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeleteUser": [
      {
        "urlTemplate": "/{organization}/_apis/graph/users/{userDescriptor}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Disables a user.\n\nThe user will still be visible, but membership checks for the user will return false.",
        "operationId": "Users_Delete",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userDescriptor",
              "description": "The descriptor of the user to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetUser": [
      {
        "urlTemplate": "/{organization}/_apis/graph/users/{userDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a user by its descriptor.",
        "operationId": "Users_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userDescriptor",
              "description": "The descriptor of the desired user.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphUser"
            }
          }
        }
      }
    ],
    "UpdateUser": [
      {
        "urlTemplate": "/{organization}/_apis/graph/users/{userDescriptor}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Map an existing user to a different user.\n\nThe body of the request must be a derived type of GraphUserUpdateContext:\n * GraphUserOriginIdUpdateContext - Map an existing user in an account, to an existing user from an external AD or AAD backed provider using the OriginId as a reference.",
        "operationId": "Users_Update",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userDescriptor",
              "description": "The descriptor of the user to update",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The subset of the full graph user used to uniquely find the graph subject in an external provider.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphUserUpdateContext"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphUser"
            }
          }
        }
      }
    ],
    "GetProviderInfo": [
      {
        "urlTemplate": "/{organization}/_apis/graph/Users/{userDescriptor}/providerinfo",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Provider Info_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "userDescriptor",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GraphProviderInfo"
            }
          }
        }
      }
    ]
  },
  "servicehooks": {
    "ListConsumers": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/consumers",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of available service hook consumer services. Optionally filter by consumers that support at least one event type from the specific publisher.",
        "operationId": "Consumers_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consumer"
              }
            }
          }
        }
      }
    ],
    "GetConsumer": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/consumers/{consumerId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific consumer service. Optionally filter out consumer actions that do not support any event types for the specified publisher.",
        "operationId": "Consumers_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "consumerId",
              "description": "ID for a consumer.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          }
        }
      }
    ],
    "ListConsumerActions": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/consumers/{consumerId}/actions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of consumer actions for a specific consumer.",
        "operationId": "Consumers_List Consumer Actions",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "consumerId",
              "description": "ID for a consumer.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConsumerAction"
              }
            }
          }
        }
      }
    ],
    "GetConsumerAction": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/consumers/{consumerId}/actions/{consumerActionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get details about a specific consumer action.",
        "operationId": "Consumers_Get Consumer Action",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "consumerId",
              "description": "ID for a consumer.",
              "required": true,
              "type": "string"
            },
            {
              "name": "consumerActionId",
              "description": "ID for a consumerActionId.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConsumerAction"
            }
          }
        }
      }
    ],
    "QueryNotifications": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/notificationsquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Query for notifications. A notification includes details about the event, the request to and the response from the consumer service.",
        "operationId": "Notifications_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationsQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationsQuery"
            }
          }
        }
      }
    ],
    "ListPublishers": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishers",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of publishers.",
        "operationId": "Publishers_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Publisher"
              }
            }
          }
        }
      }
    ],
    "GetPublisher": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishers/{publisherId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific service hooks publisher.",
        "operationId": "Publishers_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherId",
              "description": "ID for a publisher.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          }
        }
      }
    ],
    "ListEventTypes": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishers/{publisherId}/eventtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the event types for a specific publisher.",
        "operationId": "Publishers_List Event Types",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherId",
              "description": "ID for a publisher.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventTypeDescriptor"
              }
            }
          }
        }
      }
    ],
    "GetEventType": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishers/{publisherId}/eventtypes/{eventTypeId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific event type.",
        "operationId": "Publishers_Get Event Type",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherId",
              "description": "ID for a publisher.",
              "required": true,
              "type": "string"
            },
            {
              "name": "eventTypeId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EventTypeDescriptor"
            }
          }
        }
      }
    ],
    "QueryInputValues": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishers/{publisherId}/inputValuesQuery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Publishers_Query Input Values",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "publisherId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputValuesQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InputValuesQuery"
            }
          }
        }
      }
    ],
    "QueryPublishers": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/publishersquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Query for service hook publishers.",
        "operationId": "Publishers_Query Publishers",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishersQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PublishersQuery"
            }
          }
        }
      }
    ],
    "CreateSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a subscription.",
        "operationId": "Subscriptions_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Subscription to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      }
    ],
    "ListSubscriptions": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of subscriptions.",
        "operationId": "Subscriptions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "ID for a subscription.",
              "required": false,
              "type": "string"
            },
            {
              "name": "eventType",
              "description": "The event type to filter on (if any).",
              "required": false,
              "type": "string"
            },
            {
              "name": "consumerId",
              "description": "ID for a consumer.",
              "required": false,
              "type": "string"
            },
            {
              "name": "consumerActionId",
              "description": "ID for a consumerActionId.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          }
        }
      }
    ],
    "DeleteSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a specific service hooks subscription.",
        "operationId": "Subscriptions_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID for a subscription.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific service hooks subscription.",
        "operationId": "Subscriptions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID for a subscription.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      }
    ],
    "ReplaceSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update a subscription. <param name=\"subscriptionId\">ID for a subscription that you wish to update.</param>",
        "operationId": "Subscriptions_Replace Subscription",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        }
      }
    ],
    "GetSubscriptionDiagnostics": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}/diagnostics",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Diagnostics_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionDiagnostics"
            }
          }
        }
      }
    ],
    "UpdateSubscriptionDiagnostics": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}/diagnostics",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Diagnostics_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSubscripitonDiagnosticsParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionDiagnostics"
            }
          }
        }
      }
    ],
    "GetNotifications": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}/notifications",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of notifications for a specific subscription. A notification includes details about the event, the request to and the response from the consumer service.",
        "operationId": "Notifications_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID for a subscription.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "maxResults",
              "description": "Maximum number of notifications to return. Default is **100**.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "status",
              "description": "Get only notifications with this status.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "NotificationStatus",
                "values": [
                  {
                    "value": "queued",
                    "description": "The notification has been queued"
                  },
                  {
                    "value": "processing",
                    "description": "The notification has been dequeued and has begun processing."
                  },
                  {
                    "value": "requestInProgress",
                    "description": "The consumer action has processed the notification. The request is in progress."
                  },
                  {
                    "value": "completed",
                    "description": "The request completed"
                  }
                ]
              }
            },
            {
              "name": "result",
              "description": "Get only notifications with this result type.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "NotificationResult",
                "values": [
                  {
                    "value": "pending",
                    "description": "The notification has not yet completed"
                  },
                  {
                    "value": "succeeded",
                    "description": "The notification was sent successfully"
                  },
                  {
                    "value": "failed",
                    "description": "The notification failed to be sent successfully to the consumer"
                  },
                  {
                    "value": "filtered",
                    "description": "The notification was filtered by the Delivery Job"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          }
        }
      }
    ],
    "GetNotification": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptions/{subscriptionId}/notifications/{notificationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific notification for a subscription.",
        "operationId": "Notifications_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subscriptionId",
              "description": "ID for a subscription.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "notificationId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    ],
    "CreateSubscriptionsQuery": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/subscriptionsquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Query for service hook subscriptions.",
        "operationId": "Subscriptions_Create Subscriptions Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionsQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionsQuery"
            }
          }
        }
      }
    ],
    "CreateTestNotification": [
      {
        "urlTemplate": "/{organization}/_apis/hooks/testnotifications",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Sends a test notification. This is useful for verifying the configuration of an updated or new service hooks subscription.",
        "operationId": "Notifications_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "useRealData",
              "description": "Only allow testing with real data in existing subscriptions.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    ]
  },
  "identities": {
    "ReadIdentities": [
      {
        "urlTemplate": "/{organization}/_apis/identities",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Resolve legacy identity information for use with older APIs such as the Security APIs",
        "operationId": "Identities_Read Identities",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "descriptors",
              "description": "A comma separated list of identity descriptors to resolve",
              "required": false,
              "type": "string"
            },
            {
              "name": "identityIds",
              "description": "A comma seperated list of storage keys to resolve",
              "required": false,
              "type": "string"
            },
            {
              "name": "subjectDescriptors",
              "description": "A comma seperated list of subject descriptors to resolve",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchFilter",
              "description": "The type of search to perform. Values can be AccountName (domain\\alias), DisplayName, MailAddress, General (display name, account name, or unique name), or LocalGroupName (only search Azure Devops groups).",
              "required": false,
              "type": "string"
            },
            {
              "name": "filterValue",
              "description": "The search value, as specified by the searchFilter.",
              "required": false,
              "type": "string"
            },
            {
              "name": "queryMembership",
              "description": "The membership information to include with the identities. Values can be None for no membership data or Direct to include the groups that the identity is a member of and the identities that are a member of this identity (groups only)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "QueryMembership",
                "values": [
                  {
                    "value": "none",
                    "description": "Query will not return any membership data"
                  },
                  {
                    "value": "direct",
                    "description": "Query will return only direct membership data"
                  },
                  {
                    "value": "expanded",
                    "description": "Query will return expanded membership data"
                  },
                  {
                    "value": "expandedUp",
                    "description": "Query will return expanded up membership data (parents only)"
                  },
                  {
                    "value": "expandedDown",
                    "description": "Query will return expanded down membership data (children only)"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identity"
              }
            }
          }
        }
      }
    ]
  },
  "memberentitlementmanagement": {
    "AddGroupEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/groupentitlements",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a group entitlement with license rule, extension rule.",
        "operationId": "Group Entitlements_Add",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ruleOption",
              "description": "RuleOption [ApplyGroupRule/TestApplyGroupRule] - specifies if the rules defined in group entitlement should be created and applied to it’s members (default option) or just be tested",
              "required": false,
              "type": "string",
              "enum": {
                "name": "RuleOption",
                "values": [
                  {
                    "value": "applyGroupRule",
                    "description": ""
                  },
                  {
                    "value": "testApplyGroupRule",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "GroupEntitlement object specifying License Rule, Extensions Rule for the group. Based on the rules the members of the group will be given licenses and extensions. The Group Entitlement can be used to add the group to another project level groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupEntitlement"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GroupEntitlementOperationReference"
            }
          }
        }
      }
    ],
    "GetGroupEntitlements": [
      {
        "urlTemplate": "/{organization}/_apis/groupentitlements",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the group entitlements for an account.",
        "operationId": "Group Entitlements_List",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupEntitlement"
              }
            }
          }
        }
      }
    ],
    "DeleteGroupEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/groupentitlements/{groupId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a group entitlement.",
        "operationId": "Group Entitlements_Delete",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "ID of the group to delete.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "ruleOption",
              "description": "RuleOption [ApplyGroupRule/TestApplyGroupRule] - specifies if the rules defined in group entitlement should be deleted and the changes are applied to it’s members (default option) or just be tested",
              "required": false,
              "type": "string",
              "enum": {
                "name": "RuleOption",
                "values": [
                  {
                    "value": "applyGroupRule",
                    "description": ""
                  },
                  {
                    "value": "testApplyGroupRule",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "removeGroupMembership",
              "description": "Optional parameter that specifies whether the group with the given ID should be removed from all other groups",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupEntitlementOperationReference"
            }
          }
        }
      }
    ],
    "GetGroupEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/groupentitlements/{groupId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a group entitlement.\n\nIf the group entitlement does not exist, returns null.",
        "operationId": "Group Entitlements_Get",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "ID of the group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupEntitlement"
            }
          }
        }
      }
    ],
    "UpdateGroupEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/groupentitlements/{groupId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update entitlements (License Rule, Extensions Rule, Project memberships etc.) for a group.",
        "operationId": "Group Entitlements_Update",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "ID of the group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "ruleOption",
              "description": "RuleOption [ApplyGroupRule/TestApplyGroupRule] - specifies if the rules defined in group entitlement should be updated and the changes are applied to it’s members (default option) or just be tested",
              "required": false,
              "type": "string",
              "enum": {
                "name": "RuleOption",
                "values": [
                  {
                    "value": "applyGroupRule",
                    "description": ""
                  },
                  {
                    "value": "testApplyGroupRule",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "JsonPatchDocument containing the operations to perform on the group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GroupEntitlementOperationReference"
            }
          }
        }
      }
    ],
    "GetGroupMembers": [
      {
        "urlTemplate": "/{organization}/_apis/GroupEntitlements/{groupId}/members",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get direct members of a Group.",
        "operationId": "Members_Get",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the Group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "maxResults",
              "description": "Maximum number of results to retrieve.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pagingToken",
              "description": "Paging Token from the previous page fetched. If the 'pagingToken' is null, the results would be fetched from the beginning of the Members List.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PagedGraphMemberList"
            }
          }
        }
      }
    ],
    "AddMemberToGroup": [
      {
        "urlTemplate": "/{organization}/_apis/GroupEntitlements/{groupId}/members/{memberId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Add a member to a Group.",
        "operationId": "Members_Add",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the Group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "memberId",
              "description": "Id of the member to add.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "RemoveMemberFromGroup": [
      {
        "urlTemplate": "/{organization}/_apis/GroupEntitlements/{groupId}/members/{memberId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove a member from a Group.",
        "operationId": "Members_Remove Member From Group",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "Id of the group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "memberId",
              "description": "Id of the member to remove.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "SearchMemberEntitlements": [
      {
        "urlTemplate": "/{organization}/_apis/memberentitlements",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "",
        "operationId": "Member Entitlements_Search Member Entitlements",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "select",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "UserEntitlementProperty",
                "values": [
                  {
                    "value": "license",
                    "description": ""
                  },
                  {
                    "value": "extensions",
                    "description": ""
                  },
                  {
                    "value": "projects",
                    "description": ""
                  },
                  {
                    "value": "groupRules",
                    "description": ""
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "$filter",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "$orderBy",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array"
            }
          }
        }
      }
    ],
    "AddServicePrincipalEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/serviceprincipalentitlements",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add a service principal, assign license and extensions and make them a member of a project group in an account.\n\nNOTE: If you are working with AAD app registration, you can find service principal of your app\nin enterprise applications, and make sure to use service principal's object id as originId parameter\nin the request body",
        "operationId": "Service Principal Entitlements_Add",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "ServicePrincipalEntitlement object specifying License, Extensions and Project/Team groups the service principal should be added to.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicePrincipalEntitlement"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalEntitlementsPostResponse"
            }
          }
        }
      }
    ],
    "UpdateServicePrincipalEntitlements": [
      {
        "urlTemplate": "/{organization}/_apis/serviceprincipalentitlements",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Edit the entitlements (License, Extensions, Projects, Teams etc) for one or more service principals.",
        "operationId": "Service Principal Entitlements_Update Service Principal Entitlements",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "JsonPatchDocument containing the operations to perform.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalEntitlementOperationReference"
            }
          }
        }
      }
    ],
    "DeleteServicePrincipalEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/serviceprincipalentitlements/{servicePrincipalId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a service principal from the account.\n\nThe delete operation includes unassigning Extensions and Licenses and removing the service principal from all project memberships.\nThe service principal would continue to have access to the account if it is member of an AAD group, that is added directly to the account.",
        "operationId": "Service Principal Entitlements_Delete",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "servicePrincipalId",
              "description": "ID of the service principal.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetServicePrincipalEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/serviceprincipalentitlements/{servicePrincipalId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get Service principal Entitlement for a service principal.",
        "operationId": "Service Principal Entitlements_Get",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "servicePrincipalId",
              "description": "ID of the service principal.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalEntitlement"
            }
          }
        }
      }
    ],
    "UpdateServicePrincipalEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/serviceprincipalentitlements/{servicePrincipalId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Edit the entitlements (License, Extensions, Projects, Teams etc) for a service principal.",
        "operationId": "Service Principal Entitlements_Update Service Principal Entitlement",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "servicePrincipalId",
              "description": "ID of the service principal.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "JsonPatchDocument containing the operations to perform on the service principal.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalEntitlementsPatchResponse"
            }
          }
        }
      }
    ],
    "AddUserEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Add a user, assign license and extensions and make them a member of a project group in an account.",
        "operationId": "User Entitlements_Add",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "UserEntitlement object specifying License, Extensions and Project/Team groups the user should be added to.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserEntitlement"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserEntitlementsPostResponse"
            }
          }
        }
      }
    ],
    "SearchUserEntitlements": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a paged set of user entitlements matching the filter and sort criteria built with properties that match the select input.",
        "operationId": "User Entitlements_Search User Entitlements",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "Continuation token for getting the next page of data set. If null is passed, gets the first page.",
              "required": false,
              "type": "string"
            },
            {
              "name": "select",
              "description": "Comma (\",\") separated list of properties to select in the result entitlements. names of the properties are - 'Projects, 'Extensions' and 'Grouprules'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "UserEntitlementProperty",
                "values": [
                  {
                    "value": "license",
                    "description": ""
                  },
                  {
                    "value": "extensions",
                    "description": ""
                  },
                  {
                    "value": "projects",
                    "description": ""
                  },
                  {
                    "value": "groupRules",
                    "description": ""
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "$filter",
              "description": "Equality operators relating to searching user entitlements seperated by and clauses. Valid filters include: licenseId, licenseStatus, userType, and name. licenseId: filters based on license assignment using license names. i.e. licenseId eq 'Account-Stakeholder' or licenseId eq 'Account-Express'. licenseStatus: filters based on license status. currently only supports disabled. i.e. licenseStatus eq 'Disabled'. To get disabled basic licenses, you would pass (licenseId eq 'Account-Express' and licenseStatus eq 'Disabled') userType: filters off identity type. Suppored types are member or guest i.e. userType eq 'member'. name: filters on if the user's display name or email contians given input. i.e. get all users with \"test\" in email or displayname is \"name eq 'test'\". A valid query could be: (licenseId eq 'Account-Stakeholder' or (licenseId eq 'Account-Express' and licenseStatus eq 'Disabled')) and name eq 'test' and userType eq 'guest'.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$orderBy",
              "description": "PropertyName and Order (separated by a space ( )) to sort on (e.g. lastAccessed desc). Order defaults to ascending. valid properties to order by are dateCreated, lastAccessed, and name",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PagedGraphMemberList"
            }
          }
        }
      }
    ],
    "UpdateUserEntitlements": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Edit the entitlements (License, Extensions, Projects, Teams etc) for one or more users.",
        "operationId": "User Entitlements_Update User Entitlements",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "doNotSendInviteForNewUsers",
              "description": "Whether to send email invites to new users or not",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "JsonPatchDocument containing the operations to perform.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserEntitlementOperationReference"
            }
          }
        }
      }
    ],
    "DeleteUserEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements/{userId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Delete a user from the account.\n\nThe delete operation includes unassigning Extensions and Licenses and removing the user from all project memberships.\nThe user would continue to have access to the account if she is member of an AAD group, that is added directly to the account.",
        "operationId": "User Entitlements_Delete",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userId",
              "description": "ID of the user.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetUserEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements/{userId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get User Entitlement for a user.",
        "operationId": "User Entitlements_Get",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userId",
              "description": "ID of the user.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserEntitlement"
            }
          }
        }
      }
    ],
    "UpdateUserEntitlement": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlements/{userId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Edit the entitlements (License, Extensions, Projects, Teams etc) for a user.",
        "operationId": "User Entitlements_Update User Entitlement",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "userId",
              "description": "ID of the user.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "JsonPatchDocument containing the operations to perform on the user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserEntitlementsPatchResponse"
            }
          }
        }
      }
    ],
    "GetUsersSummary": [
      {
        "urlTemplate": "/{organization}/_apis/userentitlementsummary",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get summary of Licenses, Extension, Projects, Groups and their assignments in the collection.",
        "operationId": "User Entitlement Summary_Get",
        "host": "vsaex.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "select",
              "description": "Comma (\",\") separated list of properties to select. Supported property names are {AccessLevels, Licenses, Projects, Groups}.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersSummary"
            }
          }
        }
      }
    ]
  },
  "notification": {
    "ListLogs": [
      {
        "urlTemplate": "/{organization}/_apis/notification/diagnosticlogs/{source}/entries/{entryId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of diagnostic logs for this service.",
        "operationId": "Diagnostic Logs_List",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "source",
              "description": "ID specifying which type of logs to check diagnostics for.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "entryId",
              "description": "The ID of the specific log to query for.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "startTime",
              "description": "Start time for the time range to query in.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "endTime",
              "description": "End time for the time range to query in.",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/INotificationDiagnosticLog"
              }
            }
          }
        }
      }
    ],
    "ListEventTypes": [
      {
        "urlTemplate": "/{organization}/_apis/notification/eventtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List available event types for this service. Optionally filter by only event types for the specified publisher.",
        "operationId": "Event Types_List",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "publisherId",
              "description": "Limit to event types for this publisher",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationEventType"
              }
            }
          }
        }
      }
    ],
    "GetEventType": [
      {
        "urlTemplate": "/{organization}/_apis/notification/eventtypes/{eventType}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific event type.",
        "operationId": "Event Types_Get",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "eventType",
              "description": "The ID of the event type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationEventType"
            }
          }
        }
      }
    ],
    "GetSettings": [
      {
        "urlTemplate": "/{organization}/_apis/notification/settings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Settings_Get",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationAdminSettings"
            }
          }
        }
      }
    ],
    "UpdateSettings": [
      {
        "urlTemplate": "/{organization}/_apis/notification/settings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Settings_Update",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationAdminSettingsUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationAdminSettings"
            }
          }
        }
      }
    ],
    "GetSubscriber": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscribers/{subscriberId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get delivery preferences of a notifications subscriber.",
        "operationId": "Subscribers_Get",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriberId",
              "description": "ID of the user or group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationSubscriber"
            }
          }
        }
      }
    ],
    "UpdateSubscriber": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscribers/{subscriberId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update delivery preferences of a notifications subscriber.",
        "operationId": "Subscribers_Update",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriberId",
              "description": "ID of the user or group.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationSubscriberUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationSubscriber"
            }
          }
        }
      }
    ],
    "QuerySubscriptions": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptionquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Query for subscriptions. A subscription is returned if it matches one or more of the specified conditions.",
        "operationId": "Subscriptions_Query",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationSubscription"
              }
            }
          }
        }
      }
    ],
    "CreateSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new subscription.",
        "operationId": "Subscriptions_Create",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationSubscriptionCreateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationSubscription"
            }
          }
        }
      }
    ],
    "ListSubscriptions": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of notification subscriptions, either by subscription IDs or by all subscriptions for a given user or group.",
        "operationId": "Subscriptions_List",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "targetId",
              "description": "User or Group ID",
              "required": false,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "ids",
              "description": "List of subscription IDs",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "queryFlags",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "SubscriptionQueryFlags",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "includeInvalidSubscriptions",
                    "description": "Include subscriptions with invalid subscribers."
                  },
                  {
                    "value": "includeDeletedSubscriptions",
                    "description": "Include subscriptions marked for deletion."
                  },
                  {
                    "value": "includeFilterDetails",
                    "description": "Include the full filter details with each subscription."
                  },
                  {
                    "value": "alwaysReturnBasicInformation",
                    "description": "For a subscription the caller does not have permission to view, return basic (non-confidential) information."
                  },
                  {
                    "value": "includeSystemSubscriptions",
                    "description": "Include system subscriptions."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationSubscription"
              }
            }
          }
        }
      }
    ],
    "DeleteSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions/{subscriptionId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a subscription.",
        "operationId": "Subscriptions_Delete",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions/{subscriptionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a notification subscription by its ID.",
        "operationId": "Subscriptions_Get",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "queryFlags",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "SubscriptionQueryFlags",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "includeInvalidSubscriptions",
                    "description": "Include subscriptions with invalid subscribers."
                  },
                  {
                    "value": "includeDeletedSubscriptions",
                    "description": "Include subscriptions marked for deletion."
                  },
                  {
                    "value": "includeFilterDetails",
                    "description": "Include the full filter details with each subscription."
                  },
                  {
                    "value": "alwaysReturnBasicInformation",
                    "description": "For a subscription the caller does not have permission to view, return basic (non-confidential) information."
                  },
                  {
                    "value": "includeSystemSubscriptions",
                    "description": "Include system subscriptions."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationSubscription"
            }
          }
        }
      }
    ],
    "UpdateSubscription": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions/{subscriptionId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update an existing subscription. Depending on the type of subscription and permissions, the caller can update the description, filter settings, channel (delivery) settings and more.",
        "operationId": "Subscriptions_Update",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationSubscriptionUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationSubscription"
            }
          }
        }
      }
    ],
    "GetSubscriptionDiagnostics": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions/{subscriptionId}/diagnostics",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the diagnostics settings for a subscription.",
        "operationId": "Diagnostics_Get",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "The id of the notifications subscription.",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionDiagnostics"
            }
          }
        }
      }
    ],
    "UpdateSubscriptionDiagnostics": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptions/{subscriptionId}/diagnostics",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update the diagnostics settings for a subscription.",
        "operationId": "Diagnostics_Update",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "The id of the notifications subscription.",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSubscripitonDiagnosticsParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionDiagnostics"
            }
          }
        }
      }
    ],
    "UpdateSubscriptionUserSettings": [
      {
        "urlTemplate": "/{organization}/_apis/notification/Subscriptions/{subscriptionId}/usersettings/{userId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update the specified user's settings for the specified subscription. This API is typically used to opt in or out of a shared subscription. User settings can only be applied to shared subscriptions, like team subscriptions or default subscriptions.",
        "operationId": "Subscriptions_Update Subscription User Settings",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "subscriptionId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "userId",
              "description": "ID of the user",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionUserSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubscriptionUserSettings"
            }
          }
        }
      }
    ],
    "GetSubscriptionTemplates": [
      {
        "urlTemplate": "/{organization}/_apis/notification/subscriptiontemplates",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get available subscription templates.",
        "operationId": "Subscriptions_Get Subscription Templates",
        "host": "{service}dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationSubscriptionTemplate"
              }
            }
          }
        }
      }
    ]
  },
  "operations": {
    "GetOperation": [
      {
        "urlTemplate": "/{organization}/_apis/operations/{operationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets an operation from the operationId using the given pluginId.\n\nSome scenarios don’t require a pluginId. If a pluginId is not included in the call then just the operationId will be used to find an operation.",
        "operationId": "Operations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "operationId",
              "description": "The ID for the operation.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "pluginId",
              "description": "The ID for the plugin.",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        }
      }
    ]
  },
  "permissionsreport": {
    "CreatePermissionsReport": [
      {
        "urlTemplate": "/{organization}/_apis/permissionsreport",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Request a permissions report to be created asyncronously",
        "operationId": "Permissions Report_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Request configuration to be included in the permissions report",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionsReportRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReferenceLinks"
            }
          }
        }
      }
    ],
    "GetPermissionsReports": [
      {
        "urlTemplate": "/{organization}/_apis/permissionsreport",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of permissions reports",
        "operationId": "Permissions Report_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermissionsReport"
              }
            }
          }
        }
      }
    ],
    "GetPermissionsReport": [
      {
        "urlTemplate": "/{organization}/_apis/permissionsreport/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific permissions report",
        "operationId": "Permissions Report_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The ID (GUID) of the permissions report",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PermissionsReport"
            }
          }
        }
      }
    ],
    "Download": [
      {
        "urlTemplate": "/{organization}/_apis/permissionsreport/{id}/download",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Download the json results of a permissions report",
        "operationId": "Permissions Report Download_Download",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The ID (GUID) of the permissions report",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ]
  },
  "pipelines": {
    "CreatePipeline": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a pipeline.",
        "operationId": "Pipelines_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Input parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePipelineParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        }
      }
    ],
    "ListPipelines": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of pipelines.",
        "operationId": "Pipelines_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "orderBy",
              "description": "A sort expression. Defaults to \"name asc\"",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "The maximum number of pipelines to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "A continuation token from a previous request, to retrieve the next page of results",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pipeline"
              }
            }
          }
        }
      }
    ],
    "GetPipeline": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a pipeline, optionally at the specified version",
        "operationId": "Pipelines_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "The pipeline ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "pipelineVersion",
              "description": "The pipeline version",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        }
      }
    ],
    "Preview": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/preview",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Queues a dry run of the pipeline and returns an object containing the final yaml.",
        "operationId": "Preview_Preview",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "The pipeline ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "pipelineVersion",
              "description": "The pipeline version.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Optional additional parameters for this run.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunPipelineParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PreviewRun"
            }
          }
        }
      }
    ],
    "ListRuns": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets top 10000 runs for a particular pipeline.",
        "operationId": "Runs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "The pipeline id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Run"
              }
            }
          }
        }
      }
    ],
    "RunPipeline": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Runs a pipeline.",
        "operationId": "Runs_Run Pipeline",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "The pipeline ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "pipelineVersion",
              "description": "The pipeline version.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Optional additional parameters for this run.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunPipelineParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          }
        }
      }
    ],
    "GetRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs/{runId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a run for a particular pipeline.",
        "operationId": "Runs_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "The pipeline id",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "runId",
              "description": "The run id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          }
        }
      }
    ],
    "GetArtifact": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs/{runId}/artifacts",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific artifact from a pipeline run",
        "operationId": "Artifacts_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "ID of the pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "runId",
              "description": "ID of the run of that pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "artifactName",
              "description": "Name of the artifact.",
              "required": true,
              "type": "string"
            },
            {
              "name": "$expand",
              "description": "Expand options. Default is None.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetArtifactExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "No expansion."
                  },
                  {
                    "value": "signedContent",
                    "description": "Include signed content."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        }
      }
    ],
    "ListLogs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs/{runId}/logs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of logs from a pipeline run.",
        "operationId": "Logs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "ID of the pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "runId",
              "description": "ID of the run of that pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Expand options. Default is None.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetLogExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "signedContent",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LogCollection"
            }
          }
        }
      }
    ],
    "GetLog": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/pipelines/{pipelineId}/runs/{runId}/logs/{logId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a specific log from a pipeline run",
        "operationId": "Logs_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "pipelineId",
              "description": "ID of the pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "runId",
              "description": "ID of the run of that pipeline.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "logId",
              "description": "ID of the log.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Expand options. Default is None.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetLogExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "signedContent",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Log"
            }
          }
        }
      }
    ]
  },
  "policy": {
    "CreatePolicyConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a policy configuration of a given policy type.",
        "operationId": "Configurations_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The policy configuration to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        }
      }
    ],
    "GetPolicyConfigurations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of policy configurations in a project.\n\nThe 'scope' parameter for this API should not be used, except for legacy compatability reasons. It returns specifically\nscoped policies and does not support heirarchical nesting. Instead, use the /_apis/git/policy/configurations API, which provides\nfirst class scope filtering support.\n\nThe optional `policyType` parameter can be used to filter the set of policies returned from this method.",
        "operationId": "Configurations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scope",
              "description": "[Provided for legacy reasons] The scope on which a subset of policies is defined.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Maximum number of policies to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "The continuation token used for pagination.",
              "required": false,
              "type": "string"
            },
            {
              "name": "policyType",
              "description": "Filter returned policies to only this type",
              "required": false,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyConfiguration"
              }
            }
          }
        }
      }
    ],
    "DeletePolicyConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations/{configurationId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a policy configuration by its ID.",
        "operationId": "Configurations_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "ID of the policy configuration to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "204": {
            "description": "NoContent"
          }
        }
      }
    ],
    "GetPolicyConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations/{configurationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a policy configuration by its ID.",
        "operationId": "Configurations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "ID of the policy configuration",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        }
      }
    ],
    "UpdatePolicyConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations/{configurationId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update a policy configuration by its ID.",
        "operationId": "Configurations_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "ID of the existing policy configuration to be updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The policy configuration to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        }
      }
    ],
    "GetPolicyConfigurationRevisions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations/{configurationId}/revisions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all revisions for a given policy.",
        "operationId": "Revisions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "The policy configuration ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "The number of revisions to retrieve.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "The number of revisions to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyConfiguration"
              }
            }
          }
        }
      }
    ],
    "GetPolicyConfigurationRevision": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/configurations/{configurationId}/revisions/{revisionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a specific revision of a given policy by ID.",
        "operationId": "Revisions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "The policy configuration ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "revisionId",
              "description": "The revision ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyConfiguration"
            }
          }
        }
      }
    ],
    "GetPolicyEvaluations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/evaluations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieves a list of all the policy evaluation statuses for a specific pull request.\n\nEvaluations are retrieved using an artifact ID which uniquely identifies the pull request.\nTo generate an artifact ID for a pull request, use this template:\n```\nvstfs:///CodeReview/CodeReviewId/{projectId}/{pullRequestId}\n```",
        "operationId": "Evaluations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "artifactId",
              "description": "A string which uniquely identifies the target of a policy evaluation.",
              "required": true,
              "type": "string"
            },
            {
              "name": "includeNotApplicable",
              "description": "Some policies might determine that they do not apply to a specific pull request. Setting this parameter to true will return evaluation records even for policies which don't apply to this pull request.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "The number of policy evaluation records to retrieve.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "The number of policy evaluation records to ignore. For example, to retrieve results 101-150, set top to 50 and skip to 100.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyEvaluationRecord"
              }
            }
          }
        }
      }
    ],
    "GetPolicyEvaluation": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/evaluations/{evaluationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the present evaluation state of a policy.\n\nEach policy which applies to a pull request will have an evaluation state which is specific to that policy running\nin the context of that pull request. Each evaluation is uniquely identified via a Guid. You can find all the policy\nevaluations for a specific pull request using the List operation of this controller.",
        "operationId": "Evaluations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "evaluationId",
              "description": "ID of the policy evaluation to be retrieved.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyEvaluationRecord"
            }
          }
        }
      }
    ],
    "RequeuePolicyEvaluation": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/evaluations/{evaluationId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Requeue the policy evaluation.\n\nSome policies define a \"requeue\" action which performs some policy-specific operation.\nYou can trigger this operation by updating an existing policy evaluation and setting the\nPolicyEvaluationRecord.Status field to Queued.\nAlthough any policy evaluation can be requeued, at present only build policies perform any action\nin response. Requeueing a build policy will queue a new build to run (cancelling any existing build which\nis running).",
        "operationId": "Evaluations_Requeue Policy Evaluation",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "evaluationId",
              "description": "ID of the policy evaluation to be retrieved.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyEvaluationRecord"
            }
          }
        }
      }
    ],
    "GetPolicyTypes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/types",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve all available policy types.",
        "operationId": "Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyType"
              }
            }
          }
        }
      }
    ],
    "GetPolicyType": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/policy/types/{typeId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve a specific policy type by ID.",
        "operationId": "Types_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "typeId",
              "description": "The policy ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PolicyType"
            }
          }
        }
      }
    ]
  },
  "workitemtrackingprocesstemplate": {
    "GetBehaviors": [
      {
        "urlTemplate": "/{organization}/_apis/work/processadmin/{processId}/behaviors",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a list of behaviors for the process.",
        "operationId": "Behaviors_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdminBehavior"
              }
            }
          }
        }
      }
    ],
    "Export": [
      {
        "urlTemplate": "/{organization}/_apis/work/processadmin/processes/export/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns requested process template.",
        "operationId": "Processes_Export Process Template",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "Import": [
      {
        "urlTemplate": "/{organization}/_apis/work/processadmin/processes/import",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Imports a process from zip file.",
        "operationId": "Processes_Import Process Template",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ignoreWarnings",
              "description": "Ignores validation warnings. Default value is false.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "replaceExistingTemplate",
              "description": "Replaces the existing template. Default value is true.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessImportResult"
            }
          }
        }
      }
    ],
    "Status": [
      {
        "urlTemplate": "/{organization}/_apis/work/processadmin/processes/status/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Tells whether promote has completed for the specified promote job ID.",
        "operationId": "Processes_Import Process Template Status",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The ID of the promote job operation",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessPromoteStatus"
            }
          }
        }
      }
    ]
  },
  "workitemtracking": {
    "CreateNewProcess": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Creates a process.",
        "operationId": "Processes_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "CreateProcessModel.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProcessModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          }
        }
      }
    ],
    "GetListOfProcesses": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get list of all processes including system and inherited.",
        "operationId": "Processes_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetProcessExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "No expand level."
                  },
                  {
                    "value": "projects",
                    "description": "Projects expand level."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessInfo"
              }
            }
          }
        }
      }
    ],
    "CreateProcessBehavior": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/behaviors",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Creates a single behavior in the given process.",
        "operationId": "Behaviors_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessBehaviorCreateRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessBehavior"
            }
          }
        }
      }
    ],
    "GetProcessBehaviors": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/behaviors",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a list of all behaviors in the process.",
        "operationId": "Behaviors_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetBehaviorsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default none option."
                  },
                  {
                    "value": "fields",
                    "description": "This option returns fields associated with a behavior."
                  },
                  {
                    "value": "combinedFields",
                    "description": "This option returns fields associated with this behavior and all behaviors from which it inherits."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessBehavior"
              }
            }
          }
        }
      }
    ],
    "DeleteProcessBehavior": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/behaviors/{behaviorRefName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes a behavior in the process.",
        "operationId": "Behaviors_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "behaviorRefName",
              "description": "The reference name of the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetProcessBehavior": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/behaviors/{behaviorRefName}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a behavior of the process.",
        "operationId": "Behaviors_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "behaviorRefName",
              "description": "The reference name of the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetBehaviorsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default none option."
                  },
                  {
                    "value": "fields",
                    "description": "This option returns fields associated with a behavior."
                  },
                  {
                    "value": "combinedFields",
                    "description": "This option returns fields associated with this behavior and all behaviors from which it inherits."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessBehavior"
            }
          }
        }
      }
    ],
    "UpdateProcessBehavior": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/behaviors/{behaviorRefName}",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Replaces a behavior in the process.",
        "operationId": "Behaviors_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "behaviorRefName",
              "description": "The reference name of the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessBehaviorUpdateRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessBehavior"
            }
          }
        }
      }
    ],
    "CreateProcessWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypes",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Creates a work item type in the process.",
        "operationId": "Work Item Types_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process on which to create work item type.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProcessWorkItemTypeRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemType"
            }
          }
        }
      }
    ],
    "GetProcessWorkItemTypes": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a list of all work item types in a process.",
        "operationId": "Work Item Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Flag to determine what properties of work item type to return",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetWorkItemTypeExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Returns no properties in get work item type response."
                  },
                  {
                    "value": "states",
                    "description": "Returns states property in get work item type response."
                  },
                  {
                    "value": "behaviors",
                    "description": "Returns behaviors property in get work item type response."
                  },
                  {
                    "value": "layout",
                    "description": "Returns layout property in get work item type response."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessWorkItemType"
              }
            }
          }
        }
      }
    ],
    "DeleteProcessWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypes/{witRefName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes a work item type in the process.",
        "operationId": "Work Item Types_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetProcessWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypes/{witRefName}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a single work item type in a process.",
        "operationId": "Work Item Types_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Flag to determine what properties of work item type to return",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetWorkItemTypeExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Returns no properties in get work item type response."
                  },
                  {
                    "value": "states",
                    "description": "Returns states property in get work item type response."
                  },
                  {
                    "value": "behaviors",
                    "description": "Returns behaviors property in get work item type response."
                  },
                  {
                    "value": "layout",
                    "description": "Returns layout property in get work item type response."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemType"
            }
          }
        }
      }
    ],
    "UpdateProcessWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypes/{witRefName}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Updates a work item type of the process.",
        "operationId": "Work Item Types_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProcessWorkItemTypeRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemType"
            }
          }
        }
      }
    ],
    "AddFieldToWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/fields",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Adds a field to a work item type.",
        "operationId": "Fields_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddProcessWorkItemTypeFieldRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemTypeField"
            }
          }
        }
      }
    ],
    "GetAllWorkItemTypeFields": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/fields",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a list of all fields in a work item type.",
        "operationId": "Fields_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessWorkItemTypeField"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemTypeField": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/fields/{fieldRefName}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a field in a work item type.",
        "operationId": "Fields_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldRefName",
              "description": "The reference name of the field.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ProcessWorkItemTypeFieldsExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "Includes only basic properties of the field."
                  },
                  {
                    "value": "allowedValues",
                    "description": "Includes allowed values for the field."
                  },
                  {
                    "value": "all",
                    "description": "Includes allowed values and dependent fields of the field."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemTypeField"
            }
          }
        }
      }
    ],
    "RemoveWorkItemTypeField": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/fields/{fieldRefName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes a field from a work item type. Does not permanently delete the field.",
        "operationId": "Fields_Remove Work Item Type Field",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldRefName",
              "description": "The reference name of the field.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateWorkItemTypeField": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/fields/{fieldRefName}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Updates a field in a work item type.",
        "operationId": "Fields_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldRefName",
              "description": "The reference name of the field.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProcessWorkItemTypeFieldRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessWorkItemTypeField"
            }
          }
        }
      }
    ],
    "GetFormLayout": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the form layout.",
        "operationId": "Layout_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FormLayout"
            }
          }
        }
      }
    ],
    "CreateControlInGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/groups/{groupId}/controls",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a control in a group.",
        "operationId": "Controls_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group to add the control to.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The control.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        }
      }
    ],
    "MoveControlToGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/groups/{groupId}/controls/{controlId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Moves a control to a specified group.",
        "operationId": "Controls_Move Control To Group",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group to move the control to.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controlId",
              "description": "The ID of the control.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "removeFromGroupId",
              "description": "The group ID to remove the control from.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The control.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        }
      }
    ],
    "RemoveControlFromGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/groups/{groupId}/controls/{controlId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a control from the work item form.",
        "operationId": "Controls_Remove Control From Group",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controlId",
              "description": "The ID of the control to remove.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateControl": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/groups/{groupId}/controls/{controlId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a control on the work item form.",
        "operationId": "Controls_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controlId",
              "description": "The ID of the control.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The updated control.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        }
      }
    ],
    "AddPage": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Adds a page to the work item form.",
        "operationId": "Pages_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The page.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Page"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          }
        }
      }
    ],
    "UpdatePage": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a page on the work item form",
        "operationId": "Pages_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The page",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Page"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          }
        }
      }
    ],
    "RemovePage": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a page from the work item form",
        "operationId": "Pages_Remove Page",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "The ID of the page",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "AddGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Adds a group to the work item form.",
        "operationId": "Groups_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "The ID of the page to add the group to.",
              "required": true,
              "type": "string"
            },
            {
              "name": "sectionId",
              "description": "The ID of the section to add the group to.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      }
    ],
    "MoveGroupToSection": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups/{groupId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Moves a group to a different section.",
        "operationId": "Groups_Move Group To Section",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "The ID of the page the group is in.",
              "required": true,
              "type": "string"
            },
            {
              "name": "sectionId",
              "description": "The ID of the section the group is in.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "removeFromSectionId",
              "description": "ID of the section to remove the group from.",
              "required": true,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The updated group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      }
    ],
    "RemoveGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups/{groupId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a group from the work item form.",
        "operationId": "Groups_Remove Group",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "The ID of the page the group is in",
              "required": true,
              "type": "string"
            },
            {
              "name": "sectionId",
              "description": "The ID of the section to the group is in",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateGroup": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups/{groupId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a group in the work item form.",
        "operationId": "Groups_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "The ID of the page the group is in.",
              "required": true,
              "type": "string"
            },
            {
              "name": "sectionId",
              "description": "The ID of the section the group is in.",
              "required": true,
              "type": "string"
            },
            {
              "name": "groupId",
              "description": "The ID of the group.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The updated group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      }
    ],
    "GetSystemControls": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/systemcontrols",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets edited system controls for a work item type in a process. To get all system controls (base + edited) use layout API(s)",
        "operationId": "System Controls_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Control"
              }
            }
          }
        }
      }
    ],
    "DeleteSystemControl": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/systemcontrols/{controlId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes a system control modification on the work item form.",
        "operationId": "System Controls_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controlId",
              "description": "The ID of the control.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Control"
              }
            }
          }
        }
      }
    ],
    "UpdateSystemControl": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/systemcontrols/{controlId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates/adds a system control on the work item form.",
        "operationId": "System Controls_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "controlId",
              "description": "The ID of the control.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Control"
            }
          }
        }
      }
    ],
    "AddProcessWorkItemTypeRule": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/rules",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Adds a rule to work item type in the process.",
        "operationId": "Rules_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProcessRuleRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessRule"
            }
          }
        }
      }
    ],
    "GetProcessWorkItemTypeRules": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/rules",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a list of all rules in the work item type of the process.",
        "operationId": "Rules_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessRule"
              }
            }
          }
        }
      }
    ],
    "DeleteProcessWorkItemTypeRule": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/rules/{ruleId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes a rule from the work item type in the process.",
        "operationId": "Rules_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "ruleId",
              "description": "The ID of the rule",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetProcessWorkItemTypeRule": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/rules/{ruleId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a single rule in the work item type of the process.",
        "operationId": "Rules_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "ruleId",
              "description": "The ID of the rule",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessRule"
            }
          }
        }
      }
    ],
    "UpdateProcessWorkItemTypeRule": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/rules/{ruleId}",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Updates a rule in the work item type of the process.",
        "operationId": "Rules_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "ruleId",
              "description": "The ID of the rule",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProcessRuleRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessRule"
            }
          }
        }
      }
    ],
    "CreateStateDefinition": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a state definition in the work item type of the process.",
        "operationId": "States_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemStateInputModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemStateResultModel"
            }
          }
        }
      }
    ],
    "GetStateDefinitions": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a list of all state definitions in a work item type of the process.",
        "operationId": "States_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemStateResultModel"
              }
            }
          }
        }
      }
    ],
    "DeleteStateDefinition": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states/{stateId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a state definition in the work item type of the process.",
        "operationId": "States_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "stateId",
              "description": "ID of the state",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetStateDefinition": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states/{stateId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a single state definition in a work item type of the process.",
        "operationId": "States_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "stateId",
              "description": "The ID of the state",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemStateResultModel"
            }
          }
        }
      }
    ],
    "HideStateDefinition": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states/{stateId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Hides a state definition in the work item type of the process.Only states with customizationType:System can be hidden.",
        "operationId": "States_Hide State Definition",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "stateId",
              "description": "The ID of the state",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideStateModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemStateResultModel"
            }
          }
        }
      }
    ],
    "UpdateStateDefinition": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states/{stateId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a given state definition in the work item type of the process.",
        "operationId": "States_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefName",
              "description": "The reference name of the work item type",
              "required": true,
              "type": "string"
            },
            {
              "name": "stateId",
              "description": "ID of the state",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemStateInputModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemStateResultModel"
            }
          }
        }
      }
    ],
    "AddBehaviorToWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypesbehaviors/{witRefNameForBehaviors}/behaviors",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Adds a behavior to the work item type of the process.",
        "operationId": "Work Item Types Behaviors_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefNameForBehaviors",
              "description": "Work item type reference name for the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTypeBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeBehavior"
            }
          }
        }
      }
    ],
    "GetBehaviorsForWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypesbehaviors/{witRefNameForBehaviors}/behaviors",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a list of all behaviors for the work item type of the process.",
        "operationId": "Work Item Types Behaviors_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefNameForBehaviors",
              "description": "Work item type reference name for the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTypeBehavior"
              }
            }
          }
        }
      }
    ],
    "UpdateBehaviorToWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypesbehaviors/{witRefNameForBehaviors}/behaviors",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a behavior for the work item type of the process.",
        "operationId": "Work Item Types Behaviors_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefNameForBehaviors",
              "description": "Work item type reference name for the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTypeBehavior"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeBehavior"
            }
          }
        }
      }
    ],
    "GetBehaviorForWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypesbehaviors/{witRefNameForBehaviors}/behaviors/{behaviorRefName}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a behavior for the work item type of the process.",
        "operationId": "Work Item Types Behaviors_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefNameForBehaviors",
              "description": "Work item type reference name for the behavior",
              "required": true,
              "type": "string"
            },
            {
              "name": "behaviorRefName",
              "description": "The reference name of the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeBehavior"
            }
          }
        }
      }
    ],
    "RemoveBehaviorFromWorkItemType": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processId}/workitemtypesbehaviors/{witRefNameForBehaviors}/behaviors/{behaviorRefName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a behavior for the work item type of the process.",
        "operationId": "Work Item Types Behaviors_Remove Behavior From Work Item Type",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processId",
              "description": "The ID of the process",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "witRefNameForBehaviors",
              "description": "Work item type reference name for the behavior",
              "required": true,
              "type": "string"
            },
            {
              "name": "behaviorRefName",
              "description": "The reference name of the behavior",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "DeleteProcessById": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processTypeId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes a process of a specific ID.",
        "operationId": "Processes_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processTypeId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "EditProcess": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processTypeId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Edit a process of a specific ID.",
        "operationId": "Processes_Edit Process",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processTypeId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProcessModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          }
        }
      }
    ],
    "GetProcessByItsId": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/{processTypeId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a single process of a specified ID.",
        "operationId": "Processes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "processTypeId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetProcessExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "No expand level."
                  },
                  {
                    "value": "projects",
                    "description": "Projects expand level."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          }
        }
      }
    ],
    "CreateList": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/lists",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a picklist.",
        "operationId": "Lists_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Picklist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickList"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PickList"
            }
          }
        }
      }
    ],
    "GetListsMetadata": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/lists",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns meta data of the picklist.",
        "operationId": "Lists_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PickListMetadata"
              }
            }
          }
        }
      }
    ],
    "DeleteList": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/lists/{listId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Removes a picklist.",
        "operationId": "Lists_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "listId",
              "description": "The ID of the list",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetList": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/lists/{listId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a picklist.",
        "operationId": "Lists_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "listId",
              "description": "The ID of the list",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PickList"
            }
          }
        }
      }
    ],
    "UpdateList": [
      {
        "urlTemplate": "/{organization}/_apis/work/processes/lists/{listId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Updates a list.",
        "operationId": "Lists_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "listId",
              "description": "The ID of the list",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickList"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PickList"
            }
          }
        }
      }
    ],
    "GetWorkArtifactLinkTypes": [
      {
        "urlTemplate": "/{organization}/_apis/wit/artifactlinktypes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the list of work item tracking outbound artifact link types.",
        "operationId": "Artifact Link Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkArtifactLink"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemIcons": [
      {
        "urlTemplate": "/{organization}/_apis/wit/workitemicons",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of all work item icons.",
        "operationId": "Work Item Icons_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemIcon"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemIcon": [
      {
        "urlTemplate": "/{organization}/_apis/wit/workitemicons/{icon}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a work item icon given the friendly name and icon color.",
        "operationId": "Work Item Icons_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "icon",
              "description": "The name of the icon",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "color",
              "description": "The 6-digit hex color for the icon",
              "required": false,
              "type": "string"
            },
            {
              "name": "v",
              "description": "The version of the icon (used only for cache invalidation)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemIcon"
            }
          }
        }
      }
    ],
    "GetRelationTypes": [
      {
        "urlTemplate": "/{organization}/_apis/wit/workitemrelationtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the work item relation types.",
        "operationId": "Work Item Relation Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemRelationType"
              }
            }
          }
        }
      }
    ],
    "GetRelationType": [
      {
        "urlTemplate": "/{organization}/_apis/wit/workitemrelationtypes/{relation}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the work item relation type definition.",
        "operationId": "Work Item Relation Types_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "relation",
              "description": "The relation name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemRelationType"
            }
          }
        }
      }
    ],
    "GetWorkItemNextStatesOnCheckinAction": [
      {
        "urlTemplate": "/{organization}/_apis/wit/workitemtransitions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the next state on the given work item IDs.",
        "operationId": "Work Item Transitions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ids",
              "description": "list of work item ids",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "action",
              "description": "possible actions. Currently only supports checkin",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemNextStateOnTransition"
              }
            }
          }
        }
      }
    ],
    "GetRecentActivityData": [
      {
        "urlTemplate": "/{organization}/_apis/work/accountmyworkrecentactivity",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets recent work item activities",
        "operationId": "Account My Work Recent Activity_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountRecentActivityWorkItemModel2"
              }
            }
          }
        }
      }
    ],
    "QueryWorkItemsForArtifactUris": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/artifacturiquery",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Queries work items linked to a given list of artifact URI.",
        "operationId": "Artifact Uri Query_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Defines a list of artifact URI for querying work items.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactUriQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArtifactUriQueryResult"
            }
          }
        }
      }
    ],
    "CreateAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/attachments",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Uploads an attachment.\n\nOn accounts with higher attachment upload limits (>130MB), you will need to use chunked upload.\nTo upload an attachment in multiple chunks, you first need to [**Start a Chunked Upload**](#start_a_chunked_upload) and then follow the example from the **Upload Chunk** section.",
        "operationId": "Attachments_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fileName",
              "description": "The name of the file",
              "required": false,
              "type": "string"
            },
            {
              "name": "uploadType",
              "description": "Attachment upload type: Simple or Chunked",
              "required": false,
              "type": "string"
            },
            {
              "name": "areaPath",
              "description": "Target project Area Path",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AttachmentReference"
            }
          }
        }
      }
    ],
    "GetAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/attachments/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Downloads an attachment.",
        "operationId": "Attachments_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Attachment ID",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fileName",
              "description": "Name of the file",
              "required": false,
              "type": "string"
            },
            {
              "name": "download",
              "description": "If set to <c>true</c> always download attachment",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UploadAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/attachments/{id}",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Uploads an attachment chunk.\n\nBefore performing [**Upload a Chunk**](#upload-a-chunk), make sure to have an attachment id returned in **Start a Chunked Upload** example on **Create** section. Specify the byte range of the chunk using Content-Length. For example: \"Content - Length\": \"bytes 0 - 39999 / 50000\" for the first 40000 bytes of a 50000 byte file.",
        "operationId": "Attachments_Upload Chunk",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The id of the attachment",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fileName",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": [
            {
              "name": "contentRangeHeader",
              "description": "starting and ending byte positions for chunked file upload, format is \"Content-Range\": \"bytes 0-10000/50000\"",
              "required": true,
              "type": "string"
            }
          ],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AttachmentReference"
            }
          }
        }
      }
    ],
    "GetRootNodes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/classificationnodes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets root classification nodes under the project.",
        "operationId": "Classification Nodes_Get Root Nodes",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$depth",
              "description": "Depth of children to fetch.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemClassificationNode"
              }
            }
          }
        }
      }
    ],
    "CreateOrUpdateClassificationNode": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Create new or update an existing classification node.",
        "operationId": "Classification Nodes_Create Or Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "structureGroup",
              "description": "Structure group of the classification node, area or iteration.",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "path",
              "description": "Path of the classification node.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Node to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        }
      }
    ],
    "DeleteClassificationNode": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Delete an existing classification node.",
        "operationId": "Classification Nodes_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "structureGroup",
              "description": "Structure group of the classification node, area or iteration.",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "path",
              "description": "Path of the classification node.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$reclassifyId",
              "description": "Id of the target classification node for reclassification.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetClassificationNode": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the classification node for a given node path.",
        "operationId": "Classification Nodes_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "structureGroup",
              "description": "Structure group of the classification node, area or iteration.",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "path",
              "description": "Path of the classification node.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$depth",
              "description": "Depth of children to fetch.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        }
      }
    ],
    "UpdateClassificationNode": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update an existing classification node.",
        "operationId": "Classification Nodes_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "structureGroup",
              "description": "Structure group of the classification node, area or iteration.",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "path",
              "description": "Path of the classification node.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Node to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemClassificationNode"
            }
          }
        }
      }
    ],
    "CreateWorkItemField": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/fields",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Create a new field.",
        "operationId": "Fields_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "New field definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemField2"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField2"
            }
          }
        }
      }
    ],
    "GetWorkItemFields": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/fields",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns information for all fields. The project ID/name parameter is optional.",
        "operationId": "Fields_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GetFieldsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "extensionFields",
                    "description": "Adds extension fields to the response."
                  },
                  {
                    "value": "includeDeleted",
                    "description": "Includes fields that have been deleted."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemField2"
              }
            }
          }
        }
      }
    ],
    "DeleteWorkItemField": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/fields/{fieldNameOrRefName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Deletes the field. To undelete a filed, see \"Update Field\" API.",
        "operationId": "Fields_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldNameOrRefName",
              "description": "Field simple name or reference name",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetWorkItemField": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/fields/{fieldNameOrRefName}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets information on a specific field.",
        "operationId": "Fields_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldNameOrRefName",
              "description": "Field simple name or reference name",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField2"
            }
          }
        }
      }
    ],
    "UpdateWorkItemField": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/fields/{fieldNameOrRefName}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update a field.",
        "operationId": "Fields_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "fieldNameOrRefName",
              "description": "Name/reference name of the field to be updated",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Payload contains desired value of the field's properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemField2"
            }
          }
        }
      }
    ],
    "MigrateProjectsProcess": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/projectprocessmigration",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Migrates a project to a different process within the same OOB type. For example, you can only migrate a project from agile/custom-agile to agile/custom-agile.",
        "operationId": "Project Process Migration_Migrate Projects Process",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessIdModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessMigrationResultModel"
            }
          }
        }
      }
    ],
    "GetQueries": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queries",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the root queries and their children",
        "operationId": "Queries_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "QueryExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Expands Columns, Links and ChangeInfo"
                  },
                  {
                    "value": "wiql",
                    "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                  },
                  {
                    "value": "clauses",
                    "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                  },
                  {
                    "value": "all",
                    "description": "Expands all properties"
                  },
                  {
                    "value": "minimal",
                    "description": "Displays minimal properties and the WIQL text"
                  }
                ]
              }
            },
            {
              "name": "$depth",
              "description": "In the folder of queries, return child queries and folders to this depth.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$includeDeleted",
              "description": "Include deleted queries and folders",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryHierarchyItem"
              }
            }
          }
        }
      }
    ],
    "CreateQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queries/{query}",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Creates a query, or moves a query.\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
        "operationId": "Queries_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "query",
              "description": "The parent id or path under which the query is to be created.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "validateWiqlOnly",
              "description": "If you only want to validate your WIQL query without actually creating one, set it to true. Default is false.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The query to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        }
      }
    ],
    "DeleteQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queries/{query}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Delete a query or a folder. This deletes any permission change on the deleted query or folder and any of its descendants if it is a folder. It is important to note that the deleted permission changes cannot be recovered upon undeleting the query or folder.",
        "operationId": "Queries_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "query",
              "description": "ID or path of the query or folder to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queries/{query}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Retrieves an individual query and its children",
        "operationId": "Queries_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "query",
              "description": "ID or path of the query.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "QueryExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Expands Columns, Links and ChangeInfo"
                  },
                  {
                    "value": "wiql",
                    "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                  },
                  {
                    "value": "clauses",
                    "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                  },
                  {
                    "value": "all",
                    "description": "Expands all properties"
                  },
                  {
                    "value": "minimal",
                    "description": "Displays minimal properties and the WIQL text"
                  }
                ]
              }
            },
            {
              "name": "$depth",
              "description": "In the folder of queries, return child queries and folders to this depth.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$includeDeleted",
              "description": "Include deleted queries and folders",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$useIsoDateFormat",
              "description": "DateTime query clauses will be formatted using a ISO 8601 compliant format",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        }
      }
    ],
    "UpdateQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queries/{query}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update a query or a folder. This allows you to update, rename and move queries and folders.",
        "operationId": "Queries_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "query",
              "description": "The ID or path for the query to update.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$undeleteDescendants",
              "description": "Undelete the children of this folder. It is important to note that this will not bring back the permission changes that were previously applied to the descendants.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The query to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItem"
            }
          }
        }
      }
    ],
    "GetQueriesBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/queriesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a list of queries by ids (Maximum 1000)",
        "operationId": "Queries_Get Queries Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryBatchGetRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryHierarchyItem"
              }
            }
          }
        }
      }
    ],
    "GetDeletedWorkItemShallowReferences": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/recyclebin",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.",
        "operationId": "Recyclebin_Get Deleted Work Item Shallow References",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemDeleteShallowReference"
              }
            }
          }
        }
      }
    ],
    "DestroyWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/recyclebin/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.",
        "operationId": "Recyclebin_Destroy Work Item",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the work item to be destroyed permanently",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetDeletedWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/recyclebin/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets a deleted work item from Recycle Bin.",
        "operationId": "Recyclebin_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the work item to be returned",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        }
      }
    ],
    "RestoreWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/recyclebin/{id}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Restores the deleted work item from Recycle Bin.",
        "operationId": "Recyclebin_Restore Work Item",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the work item to be restored",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Paylod with instructions to update the IsDeleted flag to false",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        }
      }
    ],
    "GetReportingLinksByLinkType": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/reporting/workitemlinks",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a batch of work item links",
        "operationId": "Reporting Work Item Links_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "linkTypes",
              "description": "A list of types to filter the results to specific link types. Omit this parameter to get work item links of all link types.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "types",
              "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "continuationToken",
              "description": "Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.",
              "required": false,
              "type": "string"
            },
            {
              "name": "startDateTime",
              "description": "Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemLinksBatch"
            }
          }
        }
      }
    ],
    "ReadReportingRevisionsGet": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/reporting/workitemrevisions",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a batch of work item revisions with the option of including deleted items",
        "operationId": "Reporting Work Item Revisions_Read Reporting Revisions Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fields",
              "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "types",
              "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "continuationToken",
              "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "startDateTime",
              "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "includeIdentityRef",
              "description": "Return an identity reference instead of a string value for identity fields.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeDeleted",
              "description": "Specify if the deleted item should be returned.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeTagRef",
              "description": "Specify if the tag objects should be returned for System.Tags field.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLatestOnly",
              "description": "Return only the latest revisions of work items, skipping all historical revisions",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "Return all the fields in work item revisions, including long text fields which are not returned by default",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReportingRevisionsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "fields",
                    "description": "Add fields to the response."
                  }
                ]
              }
            },
            {
              "name": "includeDiscussionChangesOnly",
              "description": "Return only the those revisions of work items, where only history field was changed",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$maxPageSize",
              "description": "The maximum number of results to return in this batch",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        }
      }
    ],
    "ReadReportingRevisionsPost": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/reporting/workitemrevisions",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.",
        "operationId": "Reporting Work Item Revisions_Read Reporting Revisions Post",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "startDateTime",
              "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReportingRevisionsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "fields",
                    "description": "Add fields to the response."
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "An object that contains request settings: field filter, type filter, identity format",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsFilter"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        }
      }
    ],
    "ReadReportingDiscussions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/reporting/workItemRevisions/discussions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Work Item Revisions Discussions_Read Reporting Discussions",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "$maxPageSize",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReportingWorkItemRevisionsBatch"
            }
          }
        }
      }
    ],
    "SendMailAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/sendmail",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "RESTful method to send mail for selected/queried work items.",
        "operationId": "Send Mail_Send Mail",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendMailBody"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTags": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/tags",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get all the tags for the project.",
        "operationId": "Tags_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTagDefinition"
              }
            }
          }
        }
      }
    ],
    "DeleteTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/tags/{tagIdOrName}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete the tag for the project. Please note, that the deleted tag will be removed from all Work Items as well as Pull Requests.",
        "operationId": "Tags_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "tagIdOrName",
              "description": "Tag ID or tag name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/tags/{tagIdOrName}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the tag for the project.",
        "operationId": "Tags_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "tagIdOrName",
              "description": "Tag ID or tag name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTagDefinition"
            }
          }
        }
      }
    ],
    "UpdateTag": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/tags/{tagIdOrName}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update the tag for the project.",
        "operationId": "Tags_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "tagIdOrName",
              "description": "Tag ID or tag name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTagDefinition"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTagDefinition"
            }
          }
        }
      }
    ],
    "CreateTempQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/tempqueries",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a temporary query\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
        "operationId": "Temp Queries_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The temporary query to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemporaryQueryRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TemporaryQueryResponseModel"
            }
          }
        }
      }
    ],
    "GetWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a list of work items (Maximum 200)",
        "operationId": "Work Items_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "ids",
              "description": "The comma-separated list of requested work item ids. (Maximum 200 ids allowed).",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "fields",
              "description": "Comma-separated list of requested fields",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "asOf",
              "description": "AsOf UTC date time string",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "$expand",
              "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            {
              "name": "errorPolicy",
              "description": "The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemErrorPolicy",
                "values": [
                  {
                    "value": "fail",
                    "description": "Fail work error policy."
                  },
                  {
                    "value": "omit",
                    "description": "Omit work error policy."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
          }
        }
      }
    ],
    "CreateWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems/${type}",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Creates a single work item.",
        "operationId": "Work Items_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "The work item type of the work item to create",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "validateOnly",
              "description": "Indicate if you only want to validate the changes without saving the work item",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "bypassRules",
              "description": "Do not enforce the work item type rules on this update",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "suppressNotifications",
              "description": "Do not fire any notifications for this change",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The JSON Patch document representing the work item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        }
      }
    ],
    "GetWorkItemTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems/${type}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a single work item from a template.",
        "operationId": "Work Items_Get Work Item Template",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "The work item type name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fields",
              "description": "Comma-separated list of requested fields",
              "required": false,
              "type": "string"
            },
            {
              "name": "asOf",
              "description": "AsOf UTC date time string",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "$expand",
              "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        }
      }
    ],
    "DeleteWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.",
        "operationId": "Work Items_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the work item to be deleted",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "destroy",
              "description": "Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDelete"
            }
          }
        }
      }
    ],
    "GetWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a single work item.",
        "operationId": "Work Items_Get Work Item",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The work item id",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "fields",
              "description": "Comma-separated list of requested fields",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "asOf",
              "description": "AsOf UTC date time string",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "$expand",
              "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        }
      }
    ],
    "UpdateWorkItem": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitems/{id}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Updates a single work item.",
        "operationId": "Work Items_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The id of the work item to update",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "validateOnly",
              "description": "Indicate if you only want to validate the changes without saving the work item",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "bypassRules",
              "description": "Do not enforce the work item type rules on this update",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "suppressNotifications",
              "description": "Do not fire any notifications for this change",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The JSON Patch document representing the update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonPatchDocument"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        }
      }
    ],
    "GetRevisions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{id}/revisions",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns the list of fully hydrated work item revisions, paged.",
        "operationId": "Revisions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
          }
        }
      }
    ],
    "GetRevision": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{id}/revisions/{revisionNumber}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a fully hydrated work item for the requested revision",
        "operationId": "Revisions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "revisionNumber",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        }
      }
    ],
    "GetUpdates": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{id}/updates",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a the deltas between work item revisions",
        "operationId": "Updates_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemUpdate"
              }
            }
          }
        }
      }
    ],
    "GetUpdate": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{id}/updates/{updateNumber}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Returns a single update for a work item",
        "operationId": "Updates_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "updateNumber",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemUpdate"
            }
          }
        }
      }
    ],
    "AddComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Add a comment on a work item.",
        "operationId": "Comments_Add Comment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "Id of a work item.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Comment create request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentCreate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "GetCommentsBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Returns a list of work item comments by ids.",
        "operationId": "Comments_Get Comments Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "Id of a work item to get comments for.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "ids",
              "description": "Comma-separated list of comment ids to return.",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "includeDeleted",
              "description": "Specify if the deleted comments should be retrieved.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "Specifies the additional data retrieval options for work item comments.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CommentExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "reactions",
                    "description": "Include comment reactions."
                  },
                  {
                    "value": "renderedText",
                    "description": "Include the rendered text (html) in addition to MD text."
                  },
                  {
                    "value": "renderedTextOnly",
                    "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommentList"
            }
          }
        }
      }
    ],
    "DeleteComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.4",
        "description": "Delete a comment on a work item.",
        "operationId": "Comments_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "Id of a work item.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Returns a work item comment.",
        "operationId": "Comments_Get Comment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "Id of a work item to get the comment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "Id of the comment to return.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeDeleted",
              "description": "Specify if the deleted comment should be retrieved.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$expand",
              "description": "Specifies the additional data retrieval options for work item comments.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "CommentExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "reactions",
                    "description": "Include comment reactions."
                  },
                  {
                    "value": "renderedText",
                    "description": "Include the rendered text (html) in addition to MD text."
                  },
                  {
                    "value": "renderedTextOnly",
                    "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "UpdateComment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.4",
        "description": "Update a comment on a work item.",
        "operationId": "Comments_Update Comment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "Id of a work item.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Comment update request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentUpdate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    ],
    "GetCommentReactions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets reactions of a comment.",
        "operationId": "Comments Reactions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "WorkItem ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "Comment ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommentReaction"
              }
            }
          }
        }
      }
    ],
    "CreateCommentReaction": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions/{reactionType}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Adds a new reaction to a comment.",
        "operationId": "Comments Reactions_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "WorkItem ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "Comment ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reactionType",
              "description": "Type of the reaction",
              "required": true,
              "type": "string",
              "enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommentReaction"
            }
          }
        }
      }
    ],
    "DeleteCommentReaction": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions/{reactionType}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes an existing reaction on a comment.",
        "operationId": "Comments Reactions_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "WorkItem ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "Comment ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reactionType",
              "description": "Type of the reaction",
              "required": true,
              "type": "string",
              "enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommentReaction"
            }
          }
        }
      }
    ],
    "GetEngagedUsers": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions/{reactionType}/users",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get users who reacted on the comment.",
        "operationId": "Comment Reactions Engaged Users_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "WorkItem ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "Comment ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reactionType",
              "description": "Type of the reaction.",
              "required": true,
              "type": "string",
              "enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityRef"
              }
            }
          }
        }
      }
    ],
    "GetCommentVersions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/versions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Comments Versions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommentVersion"
              }
            }
          }
        }
      }
    ],
    "GetCommentVersion": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/versions/{version}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Comments Versions_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "workItemId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "commentId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "version",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommentVersion"
            }
          }
        }
      }
    ],
    "GetWorkItemsBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Gets work items for a list of work item ids (Maximum 200)",
        "operationId": "Work Items_Get Work Items Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemBatchGetRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItem"
              }
            }
          }
        }
      }
    ],
    "DeleteWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemsdelete",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes specified work items and sends them to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion.",
        "operationId": "Work Items_Delete Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemDeleteBatch"
            }
          }
        }
      }
    ],
    "GetWorkItemTypeCategories": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypecategories",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get all work item type categories.",
        "operationId": "Work Item Type Categories_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTypeCategory"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemTypeCategory": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypecategories/{category}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get specific work item type category by name.",
        "operationId": "Work Item Type Categories_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "category",
              "description": "The category name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeCategory"
            }
          }
        }
      }
    ],
    "GetWorkItemTypes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypes",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns the list of work item types",
        "operationId": "Work Item Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemType"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemType": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypes/{type}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Returns a work item type definition.",
        "operationId": "Work Item Types_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "Work item type name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemType"
            }
          }
        }
      }
    ],
    "GetWorkItemTypeFieldsWithReferences": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypes/{type}/fields",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of fields for a work item type with detailed references.",
        "operationId": "Work Item Types Field_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "Work item type.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemTypeFieldsExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "Includes only basic properties of the field."
                  },
                  {
                    "value": "allowedValues",
                    "description": "Includes allowed values for the field."
                  },
                  {
                    "value": "dependentFields",
                    "description": "Includes dependent fields of the field."
                  },
                  {
                    "value": "all",
                    "description": "Includes allowed values and dependent fields of the field."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTypeFieldWithReferences"
              }
            }
          }
        }
      }
    ],
    "GetWorkItemTypeFieldWithReferences": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypes/{type}/fields/{field}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a field for a work item type with detailed references.",
        "operationId": "Work Item Types Field_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "Work item type.",
              "required": true,
              "type": "string"
            },
            {
              "name": "field",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "WorkItemTypeFieldsExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "Includes only basic properties of the field."
                  },
                  {
                    "value": "allowedValues",
                    "description": "Includes allowed values for the field."
                  },
                  {
                    "value": "dependentFields",
                    "description": "Includes dependent fields of the field."
                  },
                  {
                    "value": "all",
                    "description": "Includes allowed values and dependent fields of the field."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTypeFieldWithReferences"
            }
          }
        }
      }
    ],
    "GetWorkItemTypeStates": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wit/workitemtypes/{type}/states",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the state names and colors for a work item type.",
        "operationId": "Work Item Type States_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "The state name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemStateColor"
              }
            }
          }
        }
      }
    ],
    "CreateTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/templates",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a template",
        "operationId": "Templates_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Template contents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        }
      }
    ],
    "GetTemplates": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/templates",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets template",
        "operationId": "Templates_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "workitemtypename",
              "description": "Optional, When specified returns templates for given Work item type.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemTemplateReference"
              }
            }
          }
        }
      }
    ],
    "DeleteTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/templates/{templateId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes the template with given id",
        "operationId": "Templates_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "Template id",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/templates/{templateId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets the template with specified id",
        "operationId": "Templates_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "Template Id",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        }
      }
    ],
    "ReplaceTemplate": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/templates/{templateId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Replace template contents",
        "operationId": "Templates_Replace Template",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "templateId",
              "description": "Template id",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Template contents to replace with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemTemplate"
            }
          }
        }
      }
    ],
    "QueryByWiql": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/wiql",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the results of the query given its WIQL.",
        "operationId": "Wiql_Query By Wiql",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "timePrecision",
              "description": "Whether or not to use time precision.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "The max number of results to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The query containing the WIQL.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wiql"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        }
      }
    ],
    "QueryById": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/wiql/{id}",
        "verb": "head",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Wiql_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The query ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "timePrecision",
              "description": "Whether or not to use time precision.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "The max number of results to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/wit/wiql/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Wiql_Query By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The query ID.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "timePrecision",
              "description": "Whether or not to use time precision.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$top",
              "description": "The max number of results to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemQueryResult"
            }
          }
        }
      }
    ]
  },
  "profile": {
    "GetProfile": [
      {
        "urlTemplate": "/_apis/profile/profiles/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Gets a user profile.",
        "operationId": "Profiles_Get",
        "host": "app.vssps.visualstudio.com",
        "parameters": {
          "path": [
            {
              "name": "id",
              "description": "The ID of the target user profile within the same organization, or 'me' to get the profile of the current authenticated user.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "details",
              "description": "Return public profile information such as display name, email address, country, etc. If false, the withAttributes parameter is ignored.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "withAttributes",
              "description": "If true, gets the attributes (named key-value pairs of arbitrary data) associated with the profile. The partition parameter must also have a value.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "partition",
              "description": "The partition (named group) of attributes to return.",
              "required": false,
              "type": "string"
            },
            {
              "name": "coreAttributes",
              "description": "A comma-delimited list of core profile attributes to return. Valid values are Email, Avatar, DisplayName, and ContactWithOffers.",
              "required": false,
              "type": "string"
            },
            {
              "name": "forceRefresh",
              "description": "Not used in this version of the API.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        }
      }
    ]
  },
  "release": {
    "GetApprovals": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/approvals",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of approvals",
        "operationId": "Approvals_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "assignedToFilter",
              "description": "Approvals assigned to this user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "statusFilter",
              "description": "Approvals with this status. Default is 'pending'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ApprovalStatus",
                "values": [
                  {
                    "value": "undefined",
                    "description": "Indicates the approval does not have the status set."
                  },
                  {
                    "value": "pending",
                    "description": "Indicates the approval is pending."
                  },
                  {
                    "value": "approved",
                    "description": "Indicates the approval is approved."
                  },
                  {
                    "value": "rejected",
                    "description": "Indicates the approval is rejected."
                  },
                  {
                    "value": "reassigned",
                    "description": "Indicates the approval is reassigned."
                  },
                  {
                    "value": "canceled",
                    "description": "Indicates the approval is canceled."
                  },
                  {
                    "value": "skipped",
                    "description": "Indicates the approval is skipped."
                  }
                ]
              }
            },
            {
              "name": "releaseIdsFilter",
              "description": "Approvals for release id(s) mentioned in the filter. Multiple releases can be mentioned by separating them with ',' e.g. releaseIdsFilter=1,2,3,4.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "typeFilter",
              "description": "Approval with this type.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ApprovalType",
                "values": [
                  {
                    "value": "undefined",
                    "description": "Indicates the approval type does not set."
                  },
                  {
                    "value": "preDeploy",
                    "description": "Indicates the approvals which executed before deployment."
                  },
                  {
                    "value": "postDeploy",
                    "description": "Indicates the approvals which executed after deployment."
                  },
                  {
                    "value": "all",
                    "description": "Indicates all approvals."
                  }
                ]
              }
            },
            {
              "name": "top",
              "description": "Number of approvals to get. Default is 50.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Gets the approvals after the continuation token provided.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "queryOrder",
              "description": "Gets the results in the defined order of created approvals. Default is 'descending'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseQueryOrder",
                "values": [
                  {
                    "value": "descending",
                    "description": "Return results in descending order."
                  },
                  {
                    "value": "ascending",
                    "description": "Return results in ascending order."
                  }
                ]
              }
            },
            {
              "name": "includeMyGroupApprovals",
              "description": "'true' to include my group approvals. Default is 'false'.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseApproval"
              }
            }
          }
        }
      }
    ],
    "UpdateReleaseApproval": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/approvals/{approvalId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update status of an approval",
        "operationId": "Approvals_Update",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "approvalId",
              "description": "Id of the approval.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "ReleaseApproval object having status, approver and comments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseApproval"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseApproval"
            }
          }
        }
      }
    ],
    "CreateReleaseDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/definitions",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Create a release definition",
        "operationId": "Definitions_Create",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "release definition object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        }
      }
    ],
    "GetReleaseDefinitions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/definitions",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get a list of release definitions.",
        "operationId": "Definitions_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "searchText",
              "description": "Get release definitions with names containing searchText.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$expand",
              "description": "The properties that should be expanded in the list of Release definitions.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseDefinitionExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "Returns top level properties of object."
                  },
                  {
                    "value": "environments",
                    "description": "Include environments in return object."
                  },
                  {
                    "value": "artifacts",
                    "description": "Include artifacts in return object."
                  },
                  {
                    "value": "triggers",
                    "description": "Include triggers in return object."
                  },
                  {
                    "value": "variables",
                    "description": "Include variables in return object."
                  },
                  {
                    "value": "tags",
                    "description": "Include tags in return object."
                  },
                  {
                    "value": "lastRelease",
                    "description": "Include last release in return object."
                  }
                ]
              }
            },
            {
              "name": "artifactType",
              "description": "Release definitions with given artifactType will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.",
              "required": false,
              "type": "string"
            },
            {
              "name": "artifactSourceId",
              "description": "Release definitions with given artifactSourceId will be returned. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json at https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Number of release definitions to get.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Gets the release definitions after the continuation token provided.",
              "required": false,
              "type": "string"
            },
            {
              "name": "queryOrder",
              "description": "Gets the results in the defined order. Default is 'IdAscending'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseDefinitionQueryOrder",
                "values": [
                  {
                    "value": "idAscending",
                    "description": "Return results based on release definition Id ascending order."
                  },
                  {
                    "value": "idDescending",
                    "description": "Return results based on release definition Id descending order."
                  },
                  {
                    "value": "nameAscending",
                    "description": "Return results based on release definition name ascending order."
                  },
                  {
                    "value": "nameDescending",
                    "description": "Return results based on release definition name descending order."
                  }
                ]
              }
            },
            {
              "name": "path",
              "description": "Gets the release definitions under the specified path.",
              "required": false,
              "type": "string"
            },
            {
              "name": "isExactNameMatch",
              "description": "'true'to gets the release definitions with exact match as specified in searchText. Default is 'false'.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "tagFilter",
              "description": "A comma-delimited list of tags. Only release definitions with these tags will be returned.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "propertyFilters",
              "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definitions will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release Definition from results irrespective of whether it has property set or not.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "definitionIdFilter",
              "description": "A comma-delimited list of release definitions to retrieve.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "isDeleted",
              "description": "'true' to get release definitions that has been deleted. Default is 'false'",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchTextContainsFolderName",
              "description": "'true' to get the release definitions under the folder with name as specified in searchText. Default is 'false'.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDefinition"
              }
            }
          }
        }
      }
    ],
    "UpdateReleaseDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/definitions",
        "verb": "put",
        "apiVersion": "7.1-preview.4",
        "description": "Update a release definition.",
        "operationId": "Definitions_Update",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Release definition object to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        }
      }
    ],
    "DeleteReleaseDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/definitions/{definitionId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.4",
        "description": "Delete a release definition.",
        "operationId": "Definitions_Delete",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "Id of the release definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "comment",
              "description": "Comment for deleting a release definition.",
              "required": false,
              "type": "string"
            },
            {
              "name": "forceDelete",
              "description": "'true' to automatically cancel any in-progress release deployments and proceed with release definition deletion . Default is 'false'.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetReleaseDefinition": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/definitions/{definitionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get a release definition.",
        "operationId": "Definitions_Get",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "Id of the release definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "propertyFilters",
              "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Release Definition will contain values for the specified property Ids (if they exist). If not set, properties will not be included.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseDefinition"
            }
          }
        }
      }
    ],
    "GetReleaseDefinitionHistory": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get revision history for a release definition",
        "operationId": "Definitions_Get Release Definition History",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "Id of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDefinitionRevision"
              }
            }
          }
        }
      }
    ],
    "GetDefinitionRevision": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/definitions/{definitionId}/revisions/{revision}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get release definition for a given definitionId and revision",
        "operationId": "Definitions_Get Definition Revision",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "definitionId",
              "description": "Id of the definition.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "revision",
              "description": "Id of the revision.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetDeployments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/deployments",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "",
        "operationId": "Deployments_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "definitionId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "definitionEnvironmentId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "createdBy",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "minModifiedTime",
              "description": "",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "maxModifiedTime",
              "description": "",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "deploymentStatus",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentStatus",
                "values": [
                  {
                    "value": "undefined",
                    "description": "The deployment status is undefined."
                  },
                  {
                    "value": "notDeployed",
                    "description": "The deployment status is not deployed."
                  },
                  {
                    "value": "inProgress",
                    "description": "The deployment status is in progress."
                  },
                  {
                    "value": "succeeded",
                    "description": "The deployment status is succeeded."
                  },
                  {
                    "value": "partiallySucceeded",
                    "description": "The deployment status is partiallysucceeded."
                  },
                  {
                    "value": "failed",
                    "description": "The deployment status is failed."
                  },
                  {
                    "value": "all",
                    "description": "The deployment status is all."
                  }
                ]
              }
            },
            {
              "name": "operationStatus",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "DeploymentOperationStatus",
                "values": [
                  {
                    "value": "undefined",
                    "description": "The deployment operation status is undefined."
                  },
                  {
                    "value": "queued",
                    "description": "The deployment operation status is queued."
                  },
                  {
                    "value": "scheduled",
                    "description": "The deployment operation status is scheduled."
                  },
                  {
                    "value": "pending",
                    "description": "The deployment operation status is pending."
                  },
                  {
                    "value": "approved",
                    "description": "The deployment operation status is approved."
                  },
                  {
                    "value": "rejected",
                    "description": "The deployment operation status is rejected."
                  },
                  {
                    "value": "deferred",
                    "description": "The deployment operation status is deferred."
                  },
                  {
                    "value": "queuedForAgent",
                    "description": "The deployment operation status is queued for agent."
                  },
                  {
                    "value": "phaseInProgress",
                    "description": "The deployment operation status is phase in progress."
                  },
                  {
                    "value": "phaseSucceeded",
                    "description": "The deployment operation status is phase succeeded."
                  },
                  {
                    "value": "phasePartiallySucceeded",
                    "description": "The deployment operation status is phase partially succeeded."
                  },
                  {
                    "value": "phaseFailed",
                    "description": "The deployment operation status is phase failed."
                  },
                  {
                    "value": "canceled",
                    "description": "The deployment operation status is canceled."
                  },
                  {
                    "value": "phaseCanceled",
                    "description": "The deployment operation status is phase canceled."
                  },
                  {
                    "value": "manualInterventionPending",
                    "description": "The deployment operation status is manualintervention pending."
                  },
                  {
                    "value": "queuedForPipeline",
                    "description": "The deployment operation status is queued for pipeline."
                  },
                  {
                    "value": "cancelling",
                    "description": "The deployment operation status is cancelling."
                  },
                  {
                    "value": "evaluatingGates",
                    "description": "The deployment operation status is EvaluatingGates."
                  },
                  {
                    "value": "gateFailed",
                    "description": "The deployment operation status is GateFailed."
                  },
                  {
                    "value": "all",
                    "description": "The deployment operation status is all."
                  }
                ]
              }
            },
            {
              "name": "latestAttemptsOnly",
              "description": "",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "queryOrder",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseQueryOrder",
                "values": [
                  {
                    "value": "descending",
                    "description": "Return results in descending order."
                  },
                  {
                    "value": "ascending",
                    "description": "Return results in ascending order."
                  }
                ]
              }
            },
            {
              "name": "$top",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "createdFor",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "minStartedTime",
              "description": "",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "maxStartedTime",
              "description": "",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "sourceBranch",
              "description": "",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        }
      }
    ],
    "CreateFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/folders/{path}",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "This method is no longer supported. Use CreateFolder with folder parameter API.",
        "operationId": "Folders_Create",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "Path of the folder.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "folder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        }
      }
    ],
    "DeleteFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/folders/{path}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Deletes a definition folder for given folder name and path and all it's existing definitions.",
        "operationId": "Folders_Delete",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "Path of the folder to delete.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetFolders": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/folders/{path}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets folders.",
        "operationId": "Folders_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "Path of the folder.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "queryOrder",
              "description": "Gets the results in the defined order. Default is 'None'.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "FolderPathQueryOrder",
                "values": [
                  {
                    "value": "none",
                    "description": "No order."
                  },
                  {
                    "value": "ascending",
                    "description": "Order by folder name and path ascending."
                  },
                  {
                    "value": "descending",
                    "description": "Order by folder name and path descending."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Folder"
              }
            }
          }
        }
      }
    ],
    "UpdateFolder": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/folders/{path}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Updates an existing folder at given existing path.",
        "operationId": "Folders_Update",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "Path of the folder to update.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "folder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        }
      }
    ],
    "UpdateGates": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/gates/{gateStepId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Updates the gate for a deployment.",
        "operationId": "Gates_Update",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "gateStepId",
              "description": "Gate step Id.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Metadata to patch the Release Gates.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GateUpdateMetadata"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseGates"
            }
          }
        }
      }
    ],
    "GetReleases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases",
        "verb": "get",
        "apiVersion": "7.1-preview.8",
        "description": "Get a list of releases",
        "operationId": "Releases_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "definitionId",
              "description": "Releases from this release definition Id.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "definitionEnvironmentId",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "searchText",
              "description": "Releases with names containing searchText.",
              "required": false,
              "type": "string"
            },
            {
              "name": "createdBy",
              "description": "Releases created by this user.",
              "required": false,
              "type": "string"
            },
            {
              "name": "statusFilter",
              "description": "Releases that have this status.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseStatus",
                "values": [
                  {
                    "value": "undefined",
                    "description": "Release status not set."
                  },
                  {
                    "value": "draft",
                    "description": "Release is in draft state."
                  },
                  {
                    "value": "active",
                    "description": "Release status is in active."
                  },
                  {
                    "value": "abandoned",
                    "description": "Release status is in abandoned."
                  }
                ]
              }
            },
            {
              "name": "environmentStatusFilter",
              "description": "",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "minCreatedTime",
              "description": "Releases that were created after this time.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "maxCreatedTime",
              "description": "Releases that were created before this time.",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "queryOrder",
              "description": "Gets the results in the defined order of created date for releases. Default is descending.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseQueryOrder",
                "values": [
                  {
                    "value": "descending",
                    "description": "Return results in descending order."
                  },
                  {
                    "value": "ascending",
                    "description": "Return results in ascending order."
                  }
                ]
              }
            },
            {
              "name": "$top",
              "description": "Number of releases to get. Default is 50.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Gets the releases after the continuation token provided.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$expand",
              "description": "The property that should be expanded in the list of releases.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseExpands",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "environments",
                    "description": ""
                  },
                  {
                    "value": "artifacts",
                    "description": ""
                  },
                  {
                    "value": "approvals",
                    "description": ""
                  },
                  {
                    "value": "manualInterventions",
                    "description": ""
                  },
                  {
                    "value": "variables",
                    "description": ""
                  },
                  {
                    "value": "tags",
                    "description": ""
                  }
                ]
              }
            },
            {
              "name": "artifactTypeId",
              "description": "Releases with given artifactTypeId will be returned. Values can be Build, Jenkins, GitHub, Nuget, Team Build (external), ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sourceId",
              "description": "Unique identifier of the artifact used. e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For third-party artifacts e.g. TeamCity, BitBucket you may refer 'uniqueSourceIdentifier' inside vss-extension.json https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.",
              "required": false,
              "type": "string"
            },
            {
              "name": "artifactVersionId",
              "description": "Releases with given artifactVersionId will be returned. E.g. in case of Build artifactType, it is buildId.",
              "required": false,
              "type": "string"
            },
            {
              "name": "sourceBranchFilter",
              "description": "Releases with given sourceBranchFilter will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "isDeleted",
              "description": "Gets the soft deleted releases, if true.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "tagFilter",
              "description": "A comma-delimited list of tags. Only releases with these tags will be returned.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "propertyFilters",
              "description": "A comma-delimited list of extended properties to be retrieved. If set, the returned Releases will contain values for the specified property Ids (if they exist). If not set, properties will not be included. Note that this will not filter out any Release from results irrespective of whether it has property set or not.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "releaseIdFilter",
              "description": "A comma-delimited list of releases Ids. Only releases with these Ids will be returned.",
              "required": false,
              "type": "string",
              "format": "array (int32)"
            },
            {
              "name": "path",
              "description": "Releases under this folder path will be returned",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Release"
              }
            }
          }
        }
      }
    ],
    "CreateRelease": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases",
        "verb": "post",
        "apiVersion": "7.1-preview.8",
        "description": "Create a release.",
        "operationId": "Releases_Create",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Metadata to create a release.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseStartMetadata"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        }
      }
    ],
    "GetReleaseRevision": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}",
        "verb": "get",
        "apiVersion": "7.1-preview.8",
        "description": "Get release for a given revision number.",
        "operationId": "Releases_Get Release Revision",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "definitionSnapshotRevision",
              "description": "Definition snapshot revision number.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "UpdateRelease": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}",
        "verb": "put",
        "apiVersion": "7.1-preview.8",
        "description": "Update a complete release object.",
        "operationId": "Releases_Update Release",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Release object for update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        }
      }
    ],
    "UpdateReleaseResource": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.8",
        "description": "Update few properties of a release.",
        "operationId": "Releases_Update Release Resource",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Properties of release to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseUpdateMetadata"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Release"
            }
          }
        }
      }
    ],
    "GetReleaseEnvironment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/releases/{releaseId}/environments/{environmentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.7",
        "description": "Get a release environment.",
        "operationId": "Releases_Get Release Environment",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of the release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$expand",
              "description": "A property that should be expanded in the environment.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ReleaseEnvironmentExpands",
                "values": [
                  {
                    "value": "none",
                    "description": "Return top level properties of object."
                  },
                  {
                    "value": "tasks",
                    "description": "Expand environment with tasks."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseEnvironment"
            }
          }
        }
      }
    ],
    "UpdateReleaseEnvironment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/releases/{releaseId}/environments/{environmentId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.7",
        "description": "Update the status of a release environment",
        "operationId": "Releases_Update Release Environment",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Environment update meta data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseEnvironmentUpdateMetadata"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReleaseEnvironment"
            }
          }
        }
      }
    ],
    "GetReleaseTaskAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/attachments/{type}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the release task attachments.",
        "operationId": "Attachments_Get Release Task Attachments",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of the release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attemptId",
              "description": "Attempt number of deployment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "planId",
              "description": "Plan Id of the deploy phase.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "type",
              "description": "Type of the attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseTaskAttachment"
              }
            }
          }
        }
      }
    ],
    "GetReleaseTaskAttachmentContent": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/plan/{planId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a release task attachment.",
        "operationId": "Attachments_Get Release Task Attachment Content",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of the release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attemptId",
              "description": "Attempt number of deployment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "planId",
              "description": "Plan Id of the deploy phase.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "timelineId",
              "description": "Timeline Id of the task.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "recordId",
              "description": "Record Id of attachment.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "type",
              "description": "Type of the attachment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "Name of the attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetTaskAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/attachments/{type}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "GetTaskAttachments API is deprecated. Use GetReleaseTaskAttachments API instead.",
        "operationId": "Attachments_Get Task Attachments",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of the release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attemptId",
              "description": "Attempt number of deployment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "timelineId",
              "description": "Timeline Id of the task.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "type",
              "description": "Type of the attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseTaskAttachment"
              }
            }
          }
        }
      }
    ],
    "GetTaskAttachmentContent": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/attempts/{attemptId}/timelines/{timelineId}/records/{recordId}/attachments/{type}/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "GetTaskAttachmentContent API is deprecated. Use GetReleaseTaskAttachmentContent API instead.",
        "operationId": "Attachments_Get Task Attachment Content",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of the release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attemptId",
              "description": "Attempt number of deployment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "timelineId",
              "description": "Timeline Id of the task.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "recordId",
              "description": "Record Id of attachment.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "type",
              "description": "Type of the attachment.",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "Name of the attachment.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetTaskLog": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/environments/{environmentId}/deployPhases/{releaseDeployPhaseId}/tasks/{taskId}/logs",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the task log of a release as a plain text file.",
        "operationId": "Releases_Get Task Log",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "environmentId",
              "description": "Id of release environment.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "releaseDeployPhaseId",
              "description": "Release deploy phase Id.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "taskId",
              "description": "ReleaseTask Id for the log.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "startLine",
              "description": "Starting line number for logs",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "endLine",
              "description": "Ending line number for logs",
              "required": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetLogs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/release/releases/{releaseId}/logs",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get logs for a release Id.",
        "operationId": "Releases_Get Logs",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetManualInterventions": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List all manual interventions for a given release.",
        "operationId": "Manual Interventions_List",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManualIntervention"
              }
            }
          }
        }
      }
    ],
    "GetManualIntervention": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions/{manualInterventionId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get manual intervention for a given release and manual intervention id.",
        "operationId": "Manual Interventions_Get",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "manualInterventionId",
              "description": "Id of the manual intervention.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ManualIntervention"
            }
          }
        }
      }
    ],
    "UpdateManualIntervention": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/Release/releases/{releaseId}/manualinterventions/{manualInterventionId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update manual intervention.",
        "operationId": "Manual Interventions_Update",
        "host": "vsrm.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "releaseId",
              "description": "Id of the release.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "manualInterventionId",
              "description": "Id of the manual intervention.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Meta data to update manual intervention.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManualInterventionUpdateMetadata"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ManualIntervention"
            }
          }
        }
      }
    ]
  },
  "search": {
    "FetchPackageSearchResults": [
      {
        "urlTemplate": "/{organization}/_apis/search/packagesearchresults",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Provides a set of results for the search text.",
        "operationId": "Package Search Results_Fetch Package Search Results",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The Package Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageSearchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PackageSearchResponseContent"
            },
            "headers": {
              "ActivityId": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "FetchCodeSearchResults": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/search/codesearchresults",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Provides a set of results for the search text.",
        "operationId": "Code Search Results_Fetch Code Search Results",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The Code Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeSearchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CodeSearchResponse"
            }
          }
        }
      }
    ],
    "GetRepositoryStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/search/status/repositories/{repository}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Provides status of Repository.",
        "operationId": "Repositories_Get",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "repository",
              "description": "Repository ID or repository name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RepositoryStatusResponse"
            }
          }
        }
      }
    ],
    "GetTfvcRepositoryStatus": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/search/status/tfvc",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Provides status of TFVC Repository.",
        "operationId": "Tfvc_Get",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcRepositoryStatusResponse"
            }
          }
        }
      }
    ],
    "FetchWikiSearchResults": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/search/wikisearchresults",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Provides a set of results for the search request.",
        "operationId": "Wiki Search Results_Fetch Wiki Search Results",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The Wiki Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiSearchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiSearchResponse"
            }
          }
        }
      }
    ],
    "FetchWorkItemSearchResults": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/search/workitemsearchresults",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Provides a set of results for the search text.",
        "operationId": "Work Item Search Results_Fetch Work Item Search Results",
        "host": "almsearch.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The Work Item Search Request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemSearchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkItemSearchResponse"
            }
          }
        }
      }
    ]
  },
  "security": {
    "RemoveAccessControlEntries": [
      {
        "urlTemplate": "/{organization}/_apis/accesscontrolentries/{securityNamespaceId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove the specified ACEs from the ACL belonging to the specified token.",
        "operationId": "Access Control Entries_Remove Access Control Entries",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "token",
              "description": "The token whose ACL should be modified.",
              "required": false,
              "type": "string"
            },
            {
              "name": "descriptors",
              "description": "String containing a list of identity descriptors separated by ',' whose entries should be removed.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    ],
    "SetAccessControlEntries": [
      {
        "urlTemplate": "/{organization}/_apis/accesscontrolentries/{securityNamespaceId}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add or update ACEs in the ACL for the provided token. The request body contains the target token, a list of [ACEs](https://docs.microsoft.com/en-us/rest/api/azure/devops/security/access%20control%20entries/set%20access%20control%20entries?#accesscontrolentry) and a optional merge parameter. In the case of a collision (by identity descriptor) with an existing ACE in the ACL, the \"merge\" parameter determines the behavior. If set, the existing ACE has its allow and deny merged with the incoming ACE's allow and deny. If unset, the existing ACE is displaced.",
        "operationId": "Access Control Entries_Set Access Control Entries",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JObject"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessControlEntry"
              }
            }
          }
        }
      }
    ],
    "QueryAccessControlLists": [
      {
        "urlTemplate": "/{organization}/_apis/accesscontrollists/{securityNamespaceId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Return a list of access control lists for the specified security namespace and token. All ACLs in the security namespace will be retrieved if no optional parameters are provided.",
        "operationId": "Access Control Lists_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "token",
              "description": "Security token",
              "required": false,
              "type": "string"
            },
            {
              "name": "descriptors",
              "description": "An optional filter string containing a list of identity descriptors separated by ',' whose ACEs should be retrieved. If this is left null, entire ACLs will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeExtendedInfo",
              "description": "If true, populate the extended information properties for the access control entries contained in the returned lists.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "recurse",
              "description": "If true and this is a hierarchical namespace, return child ACLs of the specified token.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessControlList"
              }
            }
          }
        }
      }
    ],
    "RemoveAccessControlLists": [
      {
        "urlTemplate": "/{organization}/_apis/accesscontrollists/{securityNamespaceId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove access control lists under the specfied security namespace.",
        "operationId": "Access Control Lists_Remove Access Control Lists",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "tokens",
              "description": "One or more comma-separated security tokens",
              "required": false,
              "type": "string"
            },
            {
              "name": "recurse",
              "description": "If true and this is a hierarchical namespace, also remove child ACLs of the specified tokens.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    ],
    "SetAccessControlLists": [
      {
        "urlTemplate": "/{organization}/_apis/accesscontrollists/{securityNamespaceId}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create or update one or more access control lists. All data that currently exists for the ACLs supplied will be overwritten.",
        "operationId": "Access Control Lists_Set Access Control Lists",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A list of ACLs to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VssJsonCollectionWrapper"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "HasPermissions": [
      {
        "urlTemplate": "/{organization}/_apis/permissions/{securityNamespaceId}/{permissions}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Evaluates whether the caller has the specified permissions on the specified set of security tokens.",
        "operationId": "Permissions_Has Permissions",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "permissions",
              "description": "Permissions to evaluate.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "tokens",
              "description": "One or more security tokens to evaluate.",
              "required": false,
              "type": "string"
            },
            {
              "name": "alwaysAllowAdministrators",
              "description": "If true and if the caller is an administrator, always return true.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "delimiter",
              "description": "Optional security token separator. Defaults to \",\".",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          }
        }
      }
    ],
    "RemovePermission": [
      {
        "urlTemplate": "/{organization}/_apis/permissions/{securityNamespaceId}/{permissions}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Removes the specified permissions on a security token for a user or group.",
        "operationId": "Permissions_Remove Permission",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "permissions",
              "description": "Permissions to remove.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "descriptor",
              "description": "Identity descriptor of the user to remove permissions for.",
              "required": true,
              "type": "string"
            },
            {
              "name": "token",
              "description": "Security token to remove permissions for.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessControlEntry"
            }
          }
        }
      }
    ],
    "HasPermissionsBatch": [
      {
        "urlTemplate": "/{organization}/_apis/security/permissionevaluationbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Evaluates multiple permissions for the calling user.  Note: This method does not aggregate the results, nor does it short-circuit if one of the permissions evaluates to false.",
        "operationId": "Permissions_Has Permissions Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The set of evaluation requests.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermissionEvaluationBatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PermissionEvaluationBatch"
            }
          }
        }
      }
    ],
    "QuerySecurityNamespaces": [
      {
        "urlTemplate": "/{organization}/_apis/securitynamespaces/{securityNamespaceId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List all security namespaces or just the specified namespace.",
        "operationId": "Security Namespaces_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "securityNamespaceId",
              "description": "Security namespace identifier.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "localOnly",
              "description": "If true, retrieve only local security namespaces.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityNamespaceDescription"
              }
            }
          }
        }
      }
    ]
  },
  "securityroles": {
    "GetRoleAssignments": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roleassignments/resources/{resourceId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get role assignments for the resource",
        "operationId": "Roleassignments_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "Id of the assigned scope",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "Id of the resource that is assigned the scope",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleAssignment"
              }
            }
          }
        }
      }
    ],
    "RemoveRoleAssignments": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roleassignments/resources/{resourceId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Roleassignments_Remove Role Assignments",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "SetRoleAssignments": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roleassignments/resources/{resourceId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Set role assignments on a resource",
        "operationId": "Roleassignments_Set Role Assignments",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "Id of the assigned scope",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "Id of the resource on which the role is to be assigned",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "limitToCallerIdentityDomain",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Roles to be assigned",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRoleAssignmentRef"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleAssignment"
              }
            }
          }
        }
      }
    ],
    "RemoveRoleAssignment": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roleassignments/resources/{resourceId}/{identityId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Remove the role assignment on a resource",
        "operationId": "Roleassignments_Remove Role Assignment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "Id of the assigned scope",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "Id of the resource on which the role is to be removed",
              "required": true,
              "type": "string"
            },
            {
              "name": "identityId",
              "description": "Identity on which the assignment is to be removed",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "SetRoleAssignment": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roleassignments/resources/{resourceId}/{identityId}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Set role assignment on a resource",
        "operationId": "Roleassignments_Set Role Assignment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "Id of the assigned scope",
              "required": true,
              "type": "string"
            },
            {
              "name": "resourceId",
              "description": "Id of the resource on which the role is to be assigned",
              "required": true,
              "type": "string"
            },
            {
              "name": "identityId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Roles to be assigned",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleAssignmentRef"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RoleAssignment"
            }
          }
        }
      }
    ],
    "GetRoleDefinitions": [
      {
        "urlTemplate": "/{organization}/_apis/securityroles/scopes/{scopeId}/roledefinitions",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Roledefinitions_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "scopeId",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityRole"
              }
            }
          }
        }
      }
    ]
  },
  "serviceendpoint": {
    "CreateServiceEndpoint": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/endpoints",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Creates a new service endpoint",
        "operationId": "Endpoints_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Service endpoint to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        }
      }
    ],
    "UpdateServiceEndpoints": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/endpoints",
        "verb": "put",
        "apiVersion": "7.1-preview.4",
        "description": "Update the service endpoints.",
        "operationId": "Endpoints_Update Service Endpoints",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Names of the service endpoints to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        }
      }
    ],
    "DeleteServiceEndpoint": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/endpoints/{endpointId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.4",
        "description": "Delete a service endpoint",
        "operationId": "Endpoints_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "description": "Endpoint Id of endpoint to delete",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "projectIds",
              "description": "project Ids from which endpoint needs to be deleted",
              "required": true,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "deep",
              "description": "delete the spn created by endpoint",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "ShareServiceEndpoint": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/endpoints/{endpointId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.4",
        "description": "Share service endpoint across projects",
        "operationId": "Endpoints_Share Service Endpoint",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "description": "Endpoint Id of the endpoint to share",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Project reference details of the target project",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointProjectReference"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateServiceEndpoint": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/endpoints/{endpointId}",
        "verb": "put",
        "apiVersion": "7.1-preview.4",
        "description": "Update the service endpoint",
        "operationId": "Endpoints_Update Service Endpoint",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "description": "Endpoint Id of the endpoint to update",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "operation",
              "description": "operation type",
              "required": false,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Updated data for the endpoint",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        }
      }
    ],
    "GetServiceEndpointTypes": [
      {
        "urlTemplate": "/{organization}/_apis/serviceendpoint/types",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get service endpoint types.",
        "operationId": "Types_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "Type of service endpoint.",
              "required": false,
              "type": "string"
            },
            {
              "name": "scheme",
              "description": "Scheme of service endpoint.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointType"
              }
            }
          }
        }
      }
    ],
    "GetServiceEndpointExecutionRecords": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/serviceendpoint/{endpointId}/executionhistory",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get service endpoint execution records.",
        "operationId": "Executionhistory_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "description": "Id of the service endpoint.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "top",
              "description": "Number of service endpoint execution records to get.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "A continuation token, returned by a previous call to this method, that can be used to return the next set of records",
              "required": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpointExecutionRecord"
              }
            }
          }
        }
      }
    ],
    "QueryServiceEndpoint": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/serviceendpoint/endpointproxy",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Use ExecuteServiceEndpointRequest API Instead",
        "operationId": "Endpointproxy_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Describes the data source to fetch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSourceBinding"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetServiceEndpointsByNames": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/serviceendpoint/endpoints",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get the service endpoints by name.",
        "operationId": "Endpoints_Get Service Endpoints By Names",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "endpointNames",
              "description": "Names of the service endpoints.",
              "required": true,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "type",
              "description": "Type of the service endpoints.",
              "required": false,
              "type": "string"
            },
            {
              "name": "authSchemes",
              "description": "Authorization schemes used for service endpoints.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "owner",
              "description": "Owner for service endpoints.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includeFailed",
              "description": "Failed flag for service endpoints.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeDetails",
              "description": "Flag to include more details for service endpoints. This is for internal use only and the flag will be treated as false for all other requests",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        }
      }
    ],
    "GetServiceEndpointsWithRefreshedAuthentication": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/serviceendpoint/endpoints",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Gets the service endpoints and patch new authorization parameters",
        "operationId": "Endpoints_Get Service Endpoints With Refreshed Authentication",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "endpointIds",
              "description": "Ids of the service endpoints.",
              "required": true,
              "type": "string",
              "format": "array (uuid)"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Scope, Validity of Token requested.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefreshAuthenticationParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceEndpoint"
              }
            }
          }
        }
      }
    ],
    "GetServiceEndpointDetails": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/serviceendpoint/endpoints/{endpointId}",
        "verb": "get",
        "apiVersion": "7.1-preview.4",
        "description": "Get the service endpoint details.",
        "operationId": "Endpoints_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "endpointId",
              "description": "Id of the service endpoint.",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [
            {
              "name": "actionFilter",
              "description": "Action filter for the service connection. It specifies the action which can be performed on the service connection.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ServiceEndpointActionFilter",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "manage",
                    "description": ""
                  },
                  {
                    "value": "use",
                    "description": ""
                  },
                  {
                    "value": "view",
                    "description": ""
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceEndpoint"
            }
          }
        }
      }
    ]
  },
  "status": {
    "GetServiceStatus": [
      {
        "urlTemplate": "/_apis/status/health",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Queries status information for the service all-up, or scoped to a particular service and/or geography",
        "operationId": "Health_Get",
        "host": "status.dev.azure.com",
        "parameters": {
          "path": [],
          "query": [
            {
              "name": "services",
              "description": "A comma-separated list of services for which to get status information for. Supported values: Artifacts, Boards, Core services, Other services, Pipelines, Repos, Test Plans.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            },
            {
              "name": "geographies",
              "description": "A comma-separated list of geographies for which to get status information for. Supported values: APAC, AU, BR, CA, EU, IN, UK, US.",
              "required": false,
              "type": "string",
              "format": "array (string)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceStatus"
            }
          }
        }
      }
    ]
  },
  "symbol": {
    "CheckAvailabilityAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/availability",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Check the availability of symbol service. This includes checking for feature flag, and possibly license in future. Note this is NOT an anonymous endpoint, and the caller will be redirected to authentication before hitting it.",
        "operationId": "Availability_Check Availability",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The symbol service is available"
          }
        }
      }
    ],
    "HeadClient": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/client",
        "verb": "head",
        "apiVersion": "7.1-preview.1",
        "description": "Get client version information.",
        "operationId": "Client_Head Client",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Operation successful. The information about the client version can be found in the response headers. Note this doesn't guarantee a retrieval to be successful."
          }
        }
      }
    ],
    "GetClient": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/client/{clientType}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the client package.",
        "operationId": "Client_Get",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "clientType",
              "description": "Either \"EXE\" for a zip file containing a Windows symbol client (a.k.a. symbol.exe) along with dependencies, or \"TASK\" for a VSTS task that can be run on a VSTS build agent. All the other values are invalid. The parameter is case-insensitive.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the client package. The user agent may read response body to get the package.",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          },
          "404": {
            "description": "The client as specified by the client type is not found.",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "CreateRequestsAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a new symbol request.",
        "operationId": "Requests_Create Requests",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The symbol request to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a new symbol request.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "409": {
            "description": "The symbol request couldn't be created due to a server-side conflict.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        }
      }
    ],
    "DeleteRequestsRequestNameAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a symbol request by request name.",
        "operationId": "Requests_Delete Requests Request Name",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "requestName",
              "description": "The symbol request name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "synchronous",
              "description": "If true, delete all the debug entries under this request synchronously in the current session. If false, the deletion will be postponed to a later point and be executed automatically by the system.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The request no longer exists."
          }
        }
      }
    ],
    "GetRequestsRequestNameAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a symbol request by request name.",
        "operationId": "Requests_Get Requests Request Name",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "requestName",
              "description": "The symbol request name.",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the symbol request as specified by the request name.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "404": {
            "description": "The symbol request as specified by the request name was not found.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        }
      }
    ],
    "UpdateRequestsRequestNameAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a symbol request by request name.",
        "operationId": "Requests_Update Requests Request Name",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "requestName",
              "description": "The symbol request name.",
              "required": true,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The symbol request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the symbol request as specified by the request name.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "404": {
            "description": "The symbol request as specified by the request name was not found.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "409": {
            "description": "The symbol request as specified by the request name could not be updated due to a server-side conflict, for exmaple, an unmatched etag.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        }
      }
    ],
    "CreateRequestsRequestIdDebugEntriesAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests/{requestId}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create debug entries for a symbol request as specified by its identifier.",
        "operationId": "Requests_Create Requests Request Id Debug Entries",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "The symbol request identifier.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "collection",
              "description": "A valid debug entry collection name. Must be \"debugentries\".",
              "required": true,
              "type": "string"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "A batch that contains debug entries to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebugEntryCreateBatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created debug entries for the specified request.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebugEntry"
              }
            }
          },
          "400": {
            "description": "Could not create debug entries since the specified create behavior is not recognized.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebugEntry"
              }
            }
          },
          "409": {
            "description": "Could not create debug entries since at least one entry already exists and the specified create behavior is ThrowIfExists.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebugEntry"
              }
            }
          }
        }
      }
    ],
    "DeleteRequestsRequestIdAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests/{requestId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a symbol request by request identifier.",
        "operationId": "Requests_Delete Requests Request Id",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "The symbol request identifier.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "synchronous",
              "description": "If true, delete all the debug entries under this request synchronously in the current session. If false, the deletion will be postponed to a later point and be executed automatically by the system.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The request no longer exists."
          }
        }
      }
    ],
    "GetRequestsRequestIdAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests/{requestId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a symbol request by request identifier.",
        "operationId": "Requests_Get Requests Request Id",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "The symbol request identifier.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the symbol request as specified by the request identifier.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "404": {
            "description": "The symbol request as specified by the request identifier was not found.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        }
      }
    ],
    "UpdateRequestsRequestIdAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests/{requestId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a symbol request by request identifier.",
        "operationId": "Requests_Update Requests Request Id",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "The symbol request identifier.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The symbol request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the symbol request as specified by the request identifier.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "404": {
            "description": "The symbol request as specified by the request identifier was not found.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          "409": {
            "description": "The symbol request as specified by the request identifier could not be updated due to a server-side conflict, for exmaple, an unmatched etag.",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        }
      }
    ],
    "GetDebugEntryContentAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/requests/{requestId}/contents/{debugEntryId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a stitched debug entry for a symbol request as specified by symbol request identifier and debug entry identifier.",
        "operationId": "Contents_Get",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "The symbol request identifier.",
              "required": true,
              "type": "string"
            },
            {
              "name": "debugEntryId",
              "description": "The debug entry identifier.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The debug entry is found and stream content is placed in the response content."
          },
          "404": {
            "description": "No content was found for this debug entry identifier."
          }
        }
      }
    ],
    "GetSymSrvDebugEntryClientKeyAsync": [
      {
        "urlTemplate": "/{organization}/_apis/symbol/symsrv/{debugEntryClientKey}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Given a client key, returns the best matched debug entry.",
        "operationId": "Symsrv_Get",
        "host": "artifacts.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "debugEntryClientKey",
              "description": "A \"client key\" used by both ends of Microsoft's symbol protocol to identify a debug entry. The semantics of client key is governed by symsrv and is beyond the scope of this documentation.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "The debug entry is found and its metadata returned as JSON."
          },
          "302": {
            "description": "The debug entry is found and its URI is placed in the Location header."
          },
          "404": {
            "description": "No debug entry was found for this client key."
          }
        }
      }
    ]
  },
  "test": {
    "GetBuildCodeCoverage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/codecoverage",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get code coverage data for a build.",
        "operationId": "Code Coverage_Get Build Code Coverage",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "buildId",
              "description": "ID of the build for which code coverage data needs to be fetched.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "flags",
              "description": "Value of flags determine the level of code coverage details to be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for Functions, 4 for BlockData.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BuildCoverage"
              }
            }
          }
        }
      }
    ],
    "GetPoints": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a list of test points.",
        "operationId": "Points_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite that contains the points.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "witFields",
              "description": "Comma-separated list of work item field names.",
              "required": false,
              "type": "string"
            },
            {
              "name": "configurationId",
              "description": "Get test points for specific configuration.",
              "required": false,
              "type": "string"
            },
            {
              "name": "testCaseId",
              "description": "Get test points for a specific test case, valid when configurationId is not set.",
              "required": false,
              "type": "string"
            },
            {
              "name": "testPointIds",
              "description": "Get test points for comma-separated list of test point IDs, valid only when configurationId and testCaseId are not set.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includePointDetails",
              "description": "Include all properties for the test point.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$skip",
              "description": "Number of test points to skip..",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Number of test points to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        }
      }
    ],
    "GetPoint": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points/{pointIds}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a test point.",
        "operationId": "Points_Get Point",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite that contains the point.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pointIds",
              "description": "ID of the test point to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "witFields",
              "description": "Comma-separated list of work item field names.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPoint"
            }
          }
        }
      }
    ],
    "UpdateTestPoints": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/Suites/{suiteId}/points/{pointIds}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update test points.",
        "operationId": "Points_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite that contains the points.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pointIds",
              "description": "ID of the test point to get. Use a comma-separated list of IDs to update multiple test points.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Data to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PointUpdateModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        }
      }
    ],
    "GetTestCases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get all test cases in a suite.",
        "operationId": "Test  Suites_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suites.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        }
      }
    ],
    "AddTestCasesToSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Add test cases to suite.",
        "operationId": "Test  Suites_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite to which the test cases must be added.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseIds",
              "description": "IDs of the test cases to add to the suite. Ids are specified in comma separated format.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        }
      }
    ],
    "GetTestCaseById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a specific test case in a test suite with test case id.",
        "operationId": "Test  Suites_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suites.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite that contains the test case.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseIds",
              "description": "ID of the test case to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SuiteTestCase"
            }
          }
        }
      }
    ],
    "RemoveTestCasesFromSuiteUrl": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "The test points associated with the test cases are removed from the test suite. The test case work item is not deleted from the system. See test cases resource to delete a test case permanently.",
        "operationId": "Test  Suites_Remove Test Cases From Suite Url",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseIds",
              "description": "IDs of the test cases to remove from the suite.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateSuiteTestCases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Plans/{planId}/suites/{suiteId}/testcases/{testCaseIds}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Updates the properties of the test case association in a suite.",
        "operationId": "Test  Suites_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite to which the test cases must be added.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseIds",
              "description": "IDs of the test cases to add to the suite. Ids are specified in comma separated format.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Model for updation of the properties of test case suite association.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuiteTestCaseUpdateModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCase"
              }
            }
          }
        }
      }
    ],
    "GetPointsByQuery": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/points",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Get test points using query.",
        "operationId": "Points_Get Points By Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$skip",
              "description": "Number of test points to skip..",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Number of test points to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestPointsQuery to get test points.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestPointsQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPointsQuery"
            }
          }
        }
      }
    ],
    "GetResultRetentionSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/resultretentionsettings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get test result retention settings",
        "operationId": "Result Retention Settings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          }
        }
      }
    ],
    "UpdateResultRetentionSettings": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/resultretentionsettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update test result retention settings",
        "operationId": "Result Retention Settings_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Test result retention settings details to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultRetentionSettings"
            }
          }
        }
      }
    ],
    "QueryTestHistory": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Results/testhistory",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Get history of a test method using TestHistoryQuery",
        "operationId": "Test History_Query",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestHistoryQuery to get history",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestHistoryQuery"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestHistoryQuery"
            }
          }
        }
      }
    ],
    "CreateTestRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Create new test run.",
        "operationId": "Runs_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Run details RunCreateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunCreateModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        }
      }
    ],
    "GetTestRuns": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a list of test runs.",
        "operationId": "Runs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "buildUri",
              "description": "URI of the build that the runs used.",
              "required": false,
              "type": "string"
            },
            {
              "name": "owner",
              "description": "Team foundation ID of the owner of the runs.",
              "required": false,
              "type": "string"
            },
            {
              "name": "tmiRunId",
              "description": "",
              "required": false,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that the runs are a part of.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeRunDetails",
              "description": "If true, include all the properties of the runs.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "automated",
              "description": "If true, only returns automated runs.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$skip",
              "description": "Number of test runs to skip.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Number of test runs to return.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRun"
              }
            }
          }
        }
      }
    ],
    "DeleteTestRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs/{runId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Delete a test run by its ID.",
        "operationId": "Runs_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the run to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestRunById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs/{runId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a test run by its ID.",
        "operationId": "Runs_Get Test Run By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the run to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeDetails",
              "description": "Default value is true. It includes details like run statistics, release, build, test environment, post process state, and more.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        }
      }
    ],
    "UpdateTestRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs/{runId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update test run by its ID.",
        "operationId": "Runs_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the run to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Run details RunUpdateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunUpdateModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          }
        }
      }
    ],
    "CreateTestRunAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/attachments",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Attach a file to a test run.",
        "operationId": "Attachments_Create Test Run Attachment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run against which attachment has to be uploaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Attachment details TestAttachmentRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestAttachmentReference"
            }
          }
        }
      }
    ],
    "GetTestRunAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/attachments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get list of test run attachments reference.",
        "operationId": "Attachments_Get Test Run Attachments",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestAttachment"
              }
            }
          }
        }
      }
    ],
    "GetTestRunAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/attachments/{attachmentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Download a test run attachment by its ID.",
        "operationId": "Attachments_Get Test Run Attachment Zip",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run whose attachment has to be downloaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attachmentId",
              "description": "ID of the test run attachment to be downloaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetTestRunCodeCoverage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/codecoverage",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get code coverage data for a test run",
        "operationId": "Code Coverage_Get Test Run Code Coverage",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run for which code coverage data needs to be fetched.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "flags",
              "description": "Value of flags determine the level of code coverage details to be fetched. Flags are additive. Expected Values are 1 for Modules, 2 for Functions, 4 for BlockData.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRunCoverage"
              }
            }
          }
        }
      }
    ],
    "AddTestResultsToTestRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/results",
        "verb": "post",
        "apiVersion": "7.1-preview.6",
        "description": "Add test results to a test run.",
        "operationId": "Results_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test run ID into which test results to add.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of test results to add.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        }
      }
    ],
    "GetTestResults": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/results",
        "verb": "get",
        "apiVersion": "7.1-preview.6",
        "description": "Get test results for a test run.",
        "operationId": "Results_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test run ID of test results to fetch.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "detailsToInclude",
              "description": "Details to include with test results. Default is None. Other values are Iterations and WorkItems.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ResultDetails",
                "values": [
                  {
                    "value": "none",
                    "description": "Core fields of test result. Core fields includes State, Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage etc."
                  },
                  {
                    "value": "iterations",
                    "description": "Test iteration details in a test result."
                  },
                  {
                    "value": "workItems",
                    "description": "Workitems associated with a test result."
                  },
                  {
                    "value": "subResults",
                    "description": "Subresults in a test result."
                  },
                  {
                    "value": "point",
                    "description": "Point and plan detail in a test result."
                  }
                ]
              }
            },
            {
              "name": "$skip",
              "description": "Number of test results to skip from beginning.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "Number of test results to return. Maximum is 1000 when detailsToInclude is None and 200 otherwise.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "outcomes",
              "description": "Comma separated list of test outcomes to filter test results.",
              "required": false,
              "type": "string",
              "format": "array (TestOutcome)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        }
      }
    ],
    "UpdateTestResults": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/results",
        "verb": "patch",
        "apiVersion": "7.1-preview.6",
        "description": "Update test results in a test run.",
        "operationId": "Results_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test run ID whose test results to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of test results to update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseResult"
              }
            }
          }
        }
      }
    ],
    "GetTestResultById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/results/{testCaseResultId}",
        "verb": "get",
        "apiVersion": "7.1-preview.6",
        "description": "Get a test result for a test run.",
        "operationId": "Results_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test run ID of a test result to fetch.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "Test result ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "detailsToInclude",
              "description": "Details to include with test results. Default is None. Other values are Iterations, WorkItems and SubResults.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ResultDetails",
                "values": [
                  {
                    "value": "none",
                    "description": "Core fields of test result. Core fields includes State, Outcome, Priority, AutomatedTestName, AutomatedTestStorage, Comments, ErrorMessage etc."
                  },
                  {
                    "value": "iterations",
                    "description": "Test iteration details in a test result."
                  },
                  {
                    "value": "workItems",
                    "description": "Workitems associated with a test result."
                  },
                  {
                    "value": "subResults",
                    "description": "Subresults in a test result."
                  },
                  {
                    "value": "point",
                    "description": "Point and plan detail in a test result."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestCaseResult"
            }
          }
        }
      }
    ],
    "CreateTestResultAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Attach a file to a test result.",
        "operationId": "Attachments_Create Test Result Attachment",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run that contains the result.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "ID of the test result against which attachment has to be uploaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Attachment details TestAttachmentRequestModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestAttachmentReference"
            }
          }
        }
      }
    ],
    "GetTestResultAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get list of test result attachments reference.",
        "operationId": "Attachments_Get Test Result Attachments",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run that contains the result.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "ID of the test result.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestAttachment"
              }
            }
          }
        }
      }
    ],
    "GetTestResultAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/attachments/{attachmentId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Download a test result attachment by its ID.",
        "operationId": "Attachments_Get Test Result Attachment Zip",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run that contains the testCaseResultId.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "ID of the test result whose attachment has to be downloaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "attachmentId",
              "description": "ID of the test result attachment to be downloaded.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        }
      }
    ],
    "GetTestIterations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get iterations for a result",
        "operationId": "Iterations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run that contains the result.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "ID of the test result that contains the iterations.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeActionResults",
              "description": "Include result details for each action performed in the test iteration. ActionResults refer to outcome (pass/fail) of test steps that are executed as part of a running a manual test. Including the ActionResults flag gets the outcome of test steps in the actionResults section and test parameters in the parameters section for each test iteration.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestIterationDetailsModel"
              }
            }
          }
        }
      }
    ],
    "GetTestIteration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/Runs/{runId}/Results/{testCaseResultId}/iterations/{iterationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get iteration for a result",
        "operationId": "Iterations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the test run that contains the result.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseResultId",
              "description": "ID of the test result that contains the iterations.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "iterationId",
              "description": "Id of the test results Iteration.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includeActionResults",
              "description": "Include result details for each action performed in the test iteration. ActionResults refer to outcome (pass/fail) of test steps that are executed as part of a running a manual test. Including the ActionResults flag gets the outcome of test steps in the actionResults section and test parameters in the parameters section for each test iteration.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestIterationDetailsModel"
            }
          }
        }
      }
    ],
    "GetTestRunStatistics": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/runs/{runId}/Statistics",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get test run statistics , used when we want to get summary of a run by outcome.",
        "operationId": "Runs_Get Test Run Statistics",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "ID of the run to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestRunStatistic"
            }
          }
        }
      }
    ],
    "DeleteTestCase": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/test/testcases/{testCaseId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a test case.",
        "operationId": "Test Cases_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testCaseId",
              "description": "Id of test case to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateTestSession": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/test/session",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a test session",
        "operationId": "Session_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Test session details for creation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        }
      }
    ],
    "GetTestSessions": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/test/session",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of test sessions",
        "operationId": "Session_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "period",
              "description": "Period in days from now, for which test sessions are fetched.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "allSessions",
              "description": "If false, returns test sessions for current user. Otherwise, it returns test sessions for all users",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeAllProperties",
              "description": "If true, it returns all properties of the test sessions. Otherwise, it returns the skinny version.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "source",
              "description": "Source of the test session.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TestSessionSource",
                "values": [
                  {
                    "value": "unknown",
                    "description": "Source of test session uncertain as it is stale"
                  },
                  {
                    "value": "xtDesktop",
                    "description": "The session was created from Microsoft Test Manager exploratory desktop tool."
                  },
                  {
                    "value": "feedbackDesktop",
                    "description": "The session was created from feedback client."
                  },
                  {
                    "value": "xtWeb",
                    "description": "The session was created from browser extension."
                  },
                  {
                    "value": "feedbackWeb",
                    "description": "The session was created from browser extension."
                  },
                  {
                    "value": "xtDesktop2",
                    "description": "The session was created from web access using Microsoft Test Manager exploratory desktop tool."
                  },
                  {
                    "value": "sessionInsightsForAll",
                    "description": "To show sessions from all supported sources."
                  }
                ]
              }
            },
            {
              "name": "includeOnlyCompletedSessions",
              "description": "If true, it returns test sessions in completed state. Otherwise, it returns test sessions for all states",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSession"
              }
            }
          }
        }
      }
    ],
    "UpdateTestSession": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/test/session",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a test session",
        "operationId": "Session_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Test session details for update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSession"
            }
          }
        }
      }
    ]
  },
  "testplan": {
    "GetSuitesByTestCaseId": [
      {
        "urlTemplate": "/{organization}/_apis/testplan/suites",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Find the list of all test suites in which a given test case is present. This is helpful if you need to find out which test suites are using a test case, when you need to make changes to a test case.",
        "operationId": "Test  Suites_Get Suites By Test Case Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "testCaseId",
              "description": "ID of the test case for which suites need to be fetched.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSuite"
              }
            }
          }
        }
      }
    ],
    "CreateTestConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/configurations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a test configuration.",
        "operationId": "Configurations_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestConfigurationCreateUpdateParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestConfigurationCreateUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestConfiguration"
            }
          }
        }
      }
    ],
    "DeleteTestConfguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/configurations",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a test configuration by its ID.",
        "operationId": "Configurations_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "testConfiguartionId",
              "description": "ID of the test configuration to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestConfigurations": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/configurations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of test configurations.",
        "operationId": "Configurations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "If the list of configurations returned is not complete, a continuation token to query next batch of configurations is included in the response header as \"x-ms-continuationtoken\". Omit this parameter to get the first batch of test configurations.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestConfiguration"
              }
            }
          }
        }
      }
    ],
    "UpdateTestConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/configurations",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a test configuration by its ID.",
        "operationId": "Configurations_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "testConfiguartionId",
              "description": "ID of the test configuration to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestConfigurationCreateUpdateParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestConfigurationCreateUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestConfiguration"
            }
          }
        }
      }
    ],
    "GetTestConfigurationById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/configurations/{testConfigurationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a test configuration",
        "operationId": "Configurations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testConfigurationId",
              "description": "ID of the test configuration to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestConfiguration"
            }
          }
        }
      }
    ],
    "CreateTestPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/plans",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a test plan.",
        "operationId": "Test  Plans_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A testPlanCreateParams object.TestPlanCreateParams",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestPlanCreateParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPlan"
            }
          }
        }
      }
    ],
    "GetTestPlans": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/plans",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of test plans",
        "operationId": "Test  Plans_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "owner",
              "description": "Filter for test plan by owner ID or name",
              "required": false,
              "type": "string"
            },
            {
              "name": "continuationToken",
              "description": "If the list of plans returned is not complete, a continuation token to query next batch of plans is included in the response header as \"x-ms-continuationtoken\". Omit this parameter to get the first batch of test plans.",
              "required": false,
              "type": "string"
            },
            {
              "name": "includePlanDetails",
              "description": "Get all properties of the test plan",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "filterActivePlans",
              "description": "Get just the active plans",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPlan"
              }
            }
          }
        }
      }
    ],
    "DeleteTestPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/plans/{planId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a test plan.",
        "operationId": "Test  Plans_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan to be deleted.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestPlanById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/plans/{planId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a test plan by Id.",
        "operationId": "Test  Plans_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPlan"
            }
          }
        }
      }
    ],
    "UpdateTestPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/plans/{planId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a test plan.",
        "operationId": "Test  Plans_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan to be updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A testPlanUpdateParams object.TestPlanUpdateParams",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestPlanUpdateParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestPlan"
            }
          }
        }
      }
    ],
    "CreateTestSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create test suite.",
        "operationId": "Test  Suites_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suites.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Parameters for suite creation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSuiteCreateParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSuite"
            }
          }
        }
      }
    ],
    "GetTestSuitesForPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get test suites for plan.",
        "operationId": "Test  Suites_Get Test Suites For Plan",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan for which suites are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "expand",
              "description": "Include the children suites and testers details.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "SuiteExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Dont include any of the expansions in output."
                  },
                  {
                    "value": "children",
                    "description": "Include children in response."
                  },
                  {
                    "value": "defaultTesters",
                    "description": "Include default testers in response."
                  }
                ]
              }
            },
            {
              "name": "continuationToken",
              "description": "If the list of suites returned is not complete, a continuation token to query next batch of suites is included in the response header as \"x-ms-continuationtoken\". Omit this parameter to get the first batch of test suites.",
              "required": false,
              "type": "string"
            },
            {
              "name": "asTreeView",
              "description": "If the suites returned should be in a tree structure.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSuite"
              }
            }
          }
        }
      }
    ],
    "DeleteTestSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites/{suiteId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete test suite.",
        "operationId": "Test  Suites_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestSuiteById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites/{suiteId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get test suite by suite id.",
        "operationId": "Test  Suites_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suites.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the suite to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "expand",
              "description": "Include the children suites and testers details",
              "required": false,
              "type": "string",
              "enum": {
                "name": "SuiteExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Dont include any of the expansions in output."
                  },
                  {
                    "value": "children",
                    "description": "Include children in response."
                  },
                  {
                    "value": "defaultTesters",
                    "description": "Include default testers in response."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSuite"
            }
          }
        }
      }
    ],
    "UpdateTestSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites/{suiteId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update test suite.",
        "operationId": "Test  Suites_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan that contains the suites.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the parent suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Parameters for suite updation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSuiteUpdateParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestSuite"
            }
          }
        }
      }
    ],
    "AddTestCasesToSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Add test cases to a suite with specified configurations",
        "operationId": "Suite Test Case_Add",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan to which test cases are to be added.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite to which test cases are to be added.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "SuiteTestCaseCreateUpdateParameters object.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCaseCreateUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCase"
              }
            }
          }
        }
      }
    ],
    "GetTestCaseList": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get Test Case List return those test cases which have all the configuration Ids as mentioned in the optional parameter. If configuration Ids is null, it return all the test cases",
        "operationId": "Suite Test Case_Get Test Case List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan for which test cases are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite for which test cases are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "testIds",
              "description": "Test Case Ids to be fetched.",
              "required": false,
              "type": "string"
            },
            {
              "name": "configurationIds",
              "description": "Fetch Test Cases which contains all the configuration Ids specified.",
              "required": false,
              "type": "string"
            },
            {
              "name": "witFields",
              "description": "Get the list of witFields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "continuationToken",
              "description": "If the list of test cases returned is not complete, a continuation token to query next batch of test cases is included in the response header as \"x-ms-continuationtoken\". Omit this parameter to get the first batch of test cases.",
              "required": false,
              "type": "string"
            },
            {
              "name": "returnIdentityRef",
              "description": "If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "expand",
              "description": "If set to false, will get a smaller payload containing only basic details about the suite test case object",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "excludeFlags",
              "description": "Flag to exclude various values from payload. For example to remove point assignments pass exclude = 1. To remove extra information (links, test plan , test suite) pass exclude = 2. To remove both extra information and point assignments pass exclude = 3 (1 + 2).",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ExcludeFlags",
                "values": [
                  {
                    "value": "none",
                    "description": "To exclude nothing"
                  },
                  {
                    "value": "pointAssignments",
                    "description": "To exclude point assignments, pass exclude = 1"
                  },
                  {
                    "value": "extraInformation",
                    "description": "To exclude extra information (links, test plan, test suite), pass exclude = 2"
                  }
                ]
              }
            },
            {
              "name": "isRecursive",
              "description": "",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCase"
              }
            }
          }
        }
      }
    ],
    "RemoveTestCasesListFromSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase",
        "verb": "delete",
        "apiVersion": "7.1-preview.3",
        "description": "Removes test cases from a suite based on the list of test case Ids provided. This API can be used to remove a larger number of test cases.",
        "operationId": "Suite Test Case_Remove Test Cases List From Suite",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan from which test cases are to be removed.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite from which test cases are to be removed.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "testIds",
              "description": "Comma separated string of Test Case Ids to be removed.",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateSuiteTestCases": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update the configurations for test cases",
        "operationId": "Suite Test Case_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan to which test cases are to be updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite to which test cases are to be updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "A SuiteTestCaseCreateUpdateParameters object.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteTestCaseCreateUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCase"
              }
            }
          }
        }
      }
    ],
    "GetTestCase": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a particular Test Case from a Suite.",
        "operationId": "Suite Test Case_Get Test Case",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan for which test cases are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite for which test cases are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "testCaseId",
              "description": "Test Case Id to be fetched.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "witFields",
              "description": "Get the list of witFields.",
              "required": false,
              "type": "string"
            },
            {
              "name": "returnIdentityRef",
              "description": "If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCase"
              }
            }
          }
        }
      }
    ],
    "GetPoints": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestPoint",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get a particular Test Point from a suite.",
        "operationId": "Test Point_Get Points",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan for which test points are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite for which test points are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "pointId",
              "description": "ID of test point to be fetched.",
              "required": true,
              "type": "string"
            },
            {
              "name": "returnIdentityRef",
              "description": "If set to true, returns the AssignedTo field in TestCaseReference as IdentityRef object.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includePointDetails",
              "description": "If set to false, will get a smaller payload containing only basic details about the test point object",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        }
      }
    ],
    "UpdateTestPoints": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestPoint",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update Test Points. This is used to Reset test point to active, update the outcome of a test point or update the tester of a test point",
        "operationId": "Test Point_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "planId",
              "description": "ID of the test plan for which test points are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "suiteId",
              "description": "ID of the test suite for which test points are requested.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "includePointDetails",
              "description": "If set to false, will get a smaller payload containing only basic details about the test point object",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "returnIdentityRef",
              "description": "If set to true, returns the AssignedTo field in TestCaseReference as IdentityRef object.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "A TestPointUpdateParams Object.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPointUpdateParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestPoint"
              }
            }
          }
        }
      }
    ],
    "CloneTestPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/CloneOperation",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Clone test plan",
        "operationId": "Test Plan Clone_Clone Test Plan",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "deepClone",
              "description": "Clones all the associated test cases as well",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Plan Clone Request Body detail TestPlanCloneRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneTestPlanParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestPlanOperationInformation"
            }
          }
        }
      }
    ],
    "GetCloneInformation": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Plans/CloneOperation/{cloneOperationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get clone information.",
        "operationId": "Test Plan Clone_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "cloneOperationId",
              "description": "Operation ID returned when we queue a clone operation",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestPlanOperationInformation"
            }
          }
        }
      }
    ],
    "GetSuiteEntries": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/suiteentry/{suiteId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of test suite entries in the test suite.",
        "operationId": "Test  Suite  Entry_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "suiteId",
              "description": "Id of the parent suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "suiteEntryType",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "SuiteEntryTypes",
                "values": [
                  {
                    "value": "testCase",
                    "description": "Test Case"
                  },
                  {
                    "value": "suite",
                    "description": "Child Suite"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteEntry"
              }
            }
          }
        }
      }
    ],
    "ReorderSuiteEntries": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/suiteentry/{suiteId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Reorder test suite entries in the test suite.",
        "operationId": "Test  Suite  Entry_Reorder Suite Entries",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "suiteId",
              "description": "Id of the parent test suite.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of SuiteEntry to reorder.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteEntryUpdateParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuiteEntry"
              }
            }
          }
        }
      }
    ],
    "CloneTestSuite": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Suites/CloneOperation",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Clone test suite",
        "operationId": "Test Suite Clone_Clone Test Suite",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "deepClone",
              "description": "Clones all the associated test cases as well",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Suite Clone Request Body detail TestSuiteCloneRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneTestSuiteParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestSuiteOperationInformation"
            }
          }
        }
      }
    ],
    "GetSuiteCloneInformation": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/Suites/CloneOperation/{cloneOperationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get clone information.",
        "operationId": "Test Suite Clone_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "cloneOperationId",
              "description": "Operation ID returned when we queue a clone operation",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestSuiteOperationInformation"
            }
          }
        }
      }
    ],
    "DeleteTestCase": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/testcases/{testCaseId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a test case.",
        "operationId": "Test Cases_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testCaseId",
              "description": "Id of test case to be deleted.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CloneTestCase": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/TestCases/CloneTestCaseOperation",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "",
        "operationId": "Test Case Clone_Clone Test Case",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneTestCaseParams"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestCaseOperationInformation"
            }
          }
        }
      }
    ],
    "GetTestCaseCloneInformation": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/TestCases/CloneTestCaseOperation/{cloneOperationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get clone information.",
        "operationId": "Test Case Clone_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "cloneOperationId",
              "description": "Operation ID returned when we queue a clone operation",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloneTestCaseOperationInformation"
            }
          }
        }
      }
    ],
    "CreateTestVariable": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/variables",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create a test variable.",
        "operationId": "Variables_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestVariableCreateUpdateParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestVariableCreateUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestVariable"
            }
          }
        }
      }
    ],
    "GetTestVariables": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/variables",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of test variables.",
        "operationId": "Variables_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "continuationToken",
              "description": "If the list of variables returned is not complete, a continuation token to query next batch of variables is included in the response header as \"x-ms-continuationtoken\". Omit this parameter to get the first batch of test variables.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestVariable"
              }
            }
          }
        }
      }
    ],
    "DeleteTestVariable": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/variables/{testVariableId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a test variable by its ID.",
        "operationId": "Variables_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testVariableId",
              "description": "ID of the test variable to delete.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestVariableById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/variables/{testVariableId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a test variable by its ID.",
        "operationId": "Variables_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testVariableId",
              "description": "ID of the test variable to get.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestVariable"
            }
          }
        }
      }
    ],
    "UpdateTestVariable": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testplan/variables/{testVariableId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a test variable by its ID.",
        "operationId": "Variables_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testVariableId",
              "description": "ID of the test variable to update.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestVariableCreateUpdateParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestVariableCreateUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestVariable"
            }
          }
        }
      }
    ]
  },
  "testresults": {
    "QueryTestResultsMetaData": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/results/resultmetadata",
        "verb": "post",
        "apiVersion": "7.1-preview.4",
        "description": "Get list of test Result meta data details for corresponding testcasereferenceId",
        "operationId": "Result Meta Data_Query",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "detailsToInclude",
              "description": "Details to include with test results metadata. Default is None. Other values are FlakyIdentifiers.",
              "required": false,
              "type": "string",
              "enum": {
                "name": "ResultMetaDataDetails",
                "values": [
                  {
                    "value": "none",
                    "description": "Core fields of test result metadata."
                  },
                  {
                    "value": "flakyIdentifiers",
                    "description": "Test FlakyIdentifiers details in test result metadata."
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestCaseReference Ids of the test Result to be queried, comma separated list of valid ids (limit no. of ids 200).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestResultMetaData"
              }
            }
          }
        }
      }
    ],
    "UpdateTestResultsMetaData": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/results/resultmetadata/{testCaseReferenceId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.4",
        "description": "Update properties of test result meta data",
        "operationId": "Result Meta Data_Update",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "testCaseReferenceId",
              "description": "TestCaseReference Id of Test Result to be updated.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TestResultMetaData update input TestResultMetaDataUpdateInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestResultMetaDataUpdateInput"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestResultMetaData"
            }
          }
        }
      }
    ],
    "GetTestResultLogsAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlog",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get list of test result attachments reference",
        "operationId": "Testlog_Get Test Result Logs",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the test run that contains the result",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "resultId",
              "description": "Id of the test result",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "type of attachments to get",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            },
            {
              "name": "directoryPath",
              "description": "directory path of attachments to get",
              "required": false,
              "type": "string"
            },
            {
              "name": "fileNamePrefix",
              "description": "file name prefix to filter the list of attachment",
              "required": false,
              "type": "string"
            },
            {
              "name": "fetchMetaData",
              "description": "Default is false, set if metadata is needed",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "top",
              "description": "Numbe of attachments reference to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [
            {
              "name": "continuationToken",
              "description": "Header to pass the continuationToken",
              "required": false,
              "type": "string"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestLog"
              }
            }
          }
        }
      }
    ],
    "GetTestLogStoreEndpointDetailsForResultLog": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlogstoreendpoint",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get SAS Uri of a test results attachment",
        "operationId": "Testlogstoreendpoint_Get Test Log Store Endpoint Details For Result Log",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the test run that contains result",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "resultId",
              "description": "Id of the test result whose files need to be downloaded",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "type of the file",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            },
            {
              "name": "filePath",
              "description": "filePath for which sas uri is needed",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestLogStoreEndpointDetails"
            }
          }
        }
      }
    ],
    "TestLogStoreEndpointDetailsForResult": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/results/{resultId}/testlogstoreendpoint",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create empty file for a result and Get Sas uri for the file",
        "operationId": "Testlogstoreendpoint_Test Log Store Endpoint Details For Result",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the test run that contains the result",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "resultId",
              "description": "Id of the test results that contains sub result",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "subResultId",
              "description": "Id of the test sub result whose file sas uri is needed",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "filePath",
              "description": "file path inside the sub result for which sas uri is needed",
              "required": true,
              "type": "string"
            },
            {
              "name": "type",
              "description": "Type of the file for download",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestLogStoreEndpointDetails"
            }
          }
        }
      }
    ],
    "CreateTestRunLogStoreAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testattachments",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates an attachment in the LogStore for the specified runId.",
        "operationId": "Testattachments_Create Test Run Log Store Attachment",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test RunId",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Contains attachment info like stream, filename, comment, attachmentType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestLogStoreAttachmentReference"
            }
          }
        }
      }
    ],
    "DeleteTestRunLogStoreAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testattachments",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes the attachment with the specified filename for the specified runId from the LogStore.",
        "operationId": "Testattachments_Delete",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test RunId",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "filename",
              "description": "Attachment FileName",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTestRunLogStoreAttachments": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testattachments",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns a list of attachments for the specified runId from the LogStore.",
        "operationId": "Testattachments_List",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Test RunId",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestLogStoreAttachment"
              }
            }
          }
        }
      }
    ],
    "GetTestRunLogsAsync": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testlog",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get list of test run attachments reference",
        "operationId": "Testlog_Get Test Run Logs",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the test run",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "type of the attachments to get",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            },
            {
              "name": "directoryPath",
              "description": "directory path for which attachments are needed",
              "required": false,
              "type": "string"
            },
            {
              "name": "fileNamePrefix",
              "description": "file name prefix to filter the list of attachment",
              "required": false,
              "type": "string"
            },
            {
              "name": "fetchMetaData",
              "description": "Default is false, set if metadata is needed",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "top",
              "description": "Number of attachments reference to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": [
            {
              "name": "continuationToken",
              "description": "Header to pass the continuationToken",
              "required": false,
              "type": "string"
            }
          ]
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestLog"
              }
            }
          }
        }
      }
    ],
    "GetTestLogStoreEndpointDetailsForRunLog": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testlogstoreendpoint",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get SAS Uri of a test run attachment",
        "operationId": "Testlogstoreendpoint_Get Test Log Store Endpoint Details For Run Log",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the test run whose file has to be downloaded",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "type",
              "description": "type of the file",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            },
            {
              "name": "filePath",
              "description": "filePath for which sas uri is needed",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestLogStoreEndpointDetails"
            }
          }
        }
      }
    ],
    "TestLogStoreEndpointDetailsForRun": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/runs/{runId}/testlogstoreendpoint",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Create empty file for a run and Get Sas uri for the file",
        "operationId": "Testlogstoreendpoint_Test Log Store Endpoint Details For Run",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "runId",
              "description": "Id of the run to get endpoint details",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "testLogStoreOperationType",
              "description": "Type of operation to perform using sas uri",
              "required": true,
              "type": "string",
              "enum": {
                "name": "TestLogStoreOperationType",
                "values": [
                  {
                    "value": "read",
                    "description": "Operation is scoped to read data only."
                  }
                ]
              }
            },
            {
              "name": "filePath",
              "description": "file path to create an empty file",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "description": "Default is GeneralAttachment, type of empty file to be created",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TestLogType",
                "values": [
                  {
                    "value": "generalAttachment",
                    "description": "Any gereric attachment."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestLogStoreEndpointDetails"
            }
          }
        }
      }
    ],
    "CreateFailureType": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/testfailuretype",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a new test failure type",
        "operationId": "Testfailuretype_Create",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestResultFailureTypeRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TestResultFailureType"
            }
          }
        }
      }
    ],
    "GetFailureTypes": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/testfailuretype",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the list of test failure types.",
        "operationId": "Testfailuretype_List",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestResultFailureType"
              }
            }
          }
        }
      }
    ],
    "DeleteFailureType": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/testfailuretype/{failureTypeId}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes a test failure type with specified failureTypeId",
        "operationId": "Testfailuretype_Delete",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "failureTypeId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "CreateBuildAttachmentInLogStore": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/testresults/uploadbuildattachments/{buildId}",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates an attachment in the LogStore for the specified buildId.",
        "operationId": "Testattachments_Create Build Attachment In Log Store",
        "host": "vstmr.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "buildId",
              "description": "BuildId",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Contains attachment info like stream, filename, comment, attachmentType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAttachmentRequestModel"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ]
  },
  "tfvc": {
    "GetChangesetChanges": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/changesets/{id}/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieve Tfvc changes for a given changeset.",
        "operationId": "Changesets_Get Changeset Changes",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the changeset. Default: null",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "$skip",
              "description": "Number of results to skip. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The maximum number of results to return. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "Return the next page of results. Default: null",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChange"
              }
            }
          }
        }
      }
    ],
    "GetChangesetWorkItems": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/changesets/{id}/workItems",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Retrieves the work items associated with a particular changeset.",
        "operationId": "Changesets_Get Changeset Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the changeset.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociatedWorkItem"
              }
            }
          }
        }
      }
    ],
    "GetBatchedChangesets": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/changesetsbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Returns changesets for a given list of changeset Ids.",
        "operationId": "Changesets_Get Batched Changesets",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of changeset IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcChangesetsRequestData"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChangesetRef"
              }
            }
          }
        }
      }
    ],
    "GetLabelItems": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/labels/{labelId}/items",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get items under a label.",
        "operationId": "Labels_Get Label Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "labelId",
              "description": "Unique identifier of label",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$top",
              "description": "Max number of items to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of items to skip",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcItem"
              }
            }
          }
        }
      }
    ],
    "GetShelveset": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/shelvesets",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a single deep shelveset.",
        "operationId": "Shelvesets_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "shelvesetId",
              "description": "Shelveset's unique ID",
              "required": true,
              "type": "string"
            },
            {
              "name": "requestData.includeDetails",
              "description": "Whether to include policyOverride and notes Only applies when requesting a single deep shelveset",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "requestData.includeLinks",
              "description": "Whether to include the _links field on the shallow references. Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "requestData.includeWorkItems",
              "description": "Whether to include workItems",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "requestData.maxChangeCount",
              "description": "Max number of changes to include",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestData.maxCommentLength",
              "description": "Max length of comment",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestData.name",
              "description": "Shelveset name",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.owner",
              "description": "Owner's ID. Could be a name or a guid.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcShelveset"
            }
          }
        }
      }
    ],
    "GetShelvesetChanges": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/shelvesets/changes",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get changes included in a shelveset.",
        "operationId": "Shelvesets_Get Shelveset Changes",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "shelvesetId",
              "description": "Shelveset's unique ID",
              "required": true,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Max number of changes to return",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of changes to skip",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChange"
              }
            }
          }
        }
      }
    ],
    "GetShelvesetWorkItems": [
      {
        "urlTemplate": "/{organization}/_apis/tfvc/shelvesets/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get work items associated with a shelveset.",
        "operationId": "Shelvesets_Get Shelveset Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "shelvesetId",
              "description": "Shelveset's unique ID",
              "required": true,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociatedWorkItem"
              }
            }
          }
        }
      }
    ],
    "GetBranchRefs": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/branches",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get branch hierarchies below the specified scopePath",
        "operationId": "Branches_Get Branch Refs",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scopePath",
              "description": "Full path to the branch.  Default: $/ Examples: $/, $/MyProject, $/MyProject/SomeFolder.",
              "required": true,
              "type": "string"
            },
            {
              "name": "includeDeleted",
              "description": "Return deleted branches. Default: False",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeLinks",
              "description": "Return links. Default: False",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcBranchRef"
              }
            }
          }
        }
      }
    ],
    "CreateChangeset": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/changesets",
        "verb": "post",
        "apiVersion": "7.1-preview.3",
        "description": "Create a new changeset.\n\nAccepts TfvcChangeset as JSON body",
        "operationId": "Changesets_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcChangeset"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcChangesetRef"
            }
          }
        }
      }
    ],
    "GetChangesets": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/changesets",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Retrieve Tfvc Changesets\n\nNote: This is a new version of the GetChangesets API that doesn't expose the unneeded queryParams\npresent in the 1.0 version of the API.",
        "operationId": "Changesets_Get Changesets",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "maxCommentLength",
              "description": "Include details about associated work items in the response. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of results to skip. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The maximum number of results to return. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$orderby",
              "description": "Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.author",
              "description": "Alias or display name of user who made the changes.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.followRenames",
              "description": "Whether or not to follow renames for the given item being queried.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.fromDate",
              "description": "If provided, only include changesets created after this date (string).",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.fromId",
              "description": "If provided, only include changesets after this changesetID.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "searchCriteria.includeLinks",
              "description": "Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.itemPath",
              "description": "Path of item to search under.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.mappings",
              "description": "Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TfvcMappingFilter"
                }
              }
            },
            {
              "name": "searchCriteria.toDate",
              "description": "If provided, only include changesets created before this date (string).",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.toId",
              "description": "If provided, a version descriptor for the latest change list to include.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcChangesetRef"
              }
            }
          }
        }
      }
    ],
    "GetChangeset": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/changesets/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Retrieve a Tfvc Changeset",
        "operationId": "Changesets_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Changeset Id to retrieve.",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "maxChangeCount",
              "description": "Number of changes to return (maximum 100 changes) Default: 0",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeDetails",
              "description": "Include policy details and check-in notes in the response. Default: false",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "includeWorkItems",
              "description": "Include workitems. Default: false",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "maxCommentLength",
              "description": "Include details about associated work items in the response. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "includeSourceRename",
              "description": "Include renames.  Default: false",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "$skip",
              "description": "Number of results to skip. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$top",
              "description": "The maximum number of results to return. Default: null",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$orderby",
              "description": "Results are sorted by ID in descending order by default. Use id asc to sort by ID in ascending order.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.author",
              "description": "Alias or display name of user who made the changes.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.followRenames",
              "description": "Whether or not to follow renames for the given item being queried.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.fromDate",
              "description": "If provided, only include changesets created after this date (string).",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.fromId",
              "description": "If provided, only include changesets after this changesetID.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "searchCriteria.includeLinks",
              "description": "Whether to include the _links field on the shallow references.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "searchCriteria.itemPath",
              "description": "Path of item to search under.",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.mappings",
              "description": "Following criteria available (.itemPath, .version, .versionType, .versionOption, .author, .fromId, .toId, .fromDate, .toDate) Default: null",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TfvcMappingFilter"
                }
              }
            },
            {
              "name": "searchCriteria.toDate",
              "description": "If provided, only include changesets created before this date (string).",
              "required": false,
              "type": "string"
            },
            {
              "name": "searchCriteria.toId",
              "description": "If provided, a version descriptor for the latest change list to include.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcChangeset"
            }
          }
        }
      }
    ],
    "GetItemsBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/itembatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Post for retrieving a set of items given a list of paths or a long path. Allows for specifying the recursionLevel and version descriptors for each path.",
        "operationId": "Items_Get Items Batch",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfvcItemRequestData"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "array"
              }
            }
          }
        }
      }
    ],
    "GetItems": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/items",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of Tfvc items",
        "operationId": "Items_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "scopePath",
              "description": "Version control path of a folder to return multiple items.",
              "required": false,
              "type": "string"
            },
            {
              "name": "recursionLevel",
              "description": "None (just the item), or OneLevel (contents of a folder).",
              "required": false,
              "type": "string",
              "enum": {
                "name": "VersionControlRecursionType",
                "values": [
                  {
                    "value": "none",
                    "description": "Only return the specified item."
                  },
                  {
                    "value": "oneLevel",
                    "description": "Return the specified item and its direct children."
                  },
                  {
                    "value": "oneLevelPlusNestedEmptyFolders",
                    "description": "Return the specified item and its direct children, as well as recursive chains of nested child folders that only contain a single folder."
                  },
                  {
                    "value": "full",
                    "description": "Return specified item and all descendants"
                  }
                ]
              }
            },
            {
              "name": "includeLinks",
              "description": "True to include links.",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version object.",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOption",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TfvcVersionOption",
                "values": [
                  {
                    "value": "none",
                    "description": "None."
                  },
                  {
                    "value": "previous",
                    "description": "Return the previous version."
                  },
                  {
                    "value": "useRename",
                    "description": "Only usuable with versiontype MergeSource and integer versions, uses RenameSource identifier instead of Merge identifier."
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "",
              "required": false,
              "type": "string",
              "enum": {
                "name": "TfvcVersionType",
                "values": [
                  {
                    "value": "none",
                    "description": "Version is treated as a ChangesetId."
                  },
                  {
                    "value": "changeset",
                    "description": "Version is treated as a ChangesetId."
                  },
                  {
                    "value": "shelveset",
                    "description": "Version is treated as a Shelveset name and owner."
                  },
                  {
                    "value": "change",
                    "description": "Version is treated as a Change."
                  },
                  {
                    "value": "date",
                    "description": "Version is treated as a Date."
                  },
                  {
                    "value": "latest",
                    "description": "If Version is defined the Latest of that Version will be used, if no version is defined the latest ChangesetId will be used."
                  },
                  {
                    "value": "tip",
                    "description": "Version will be treated as a Tip, if no version is defined latest will be used."
                  },
                  {
                    "value": "mergeSource",
                    "description": "Version will be treated as a MergeSource."
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcItem"
              }
            }
          }
        }
      }
    ],
    "GetLabels": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/labels",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a collection of shallow label references.",
        "operationId": "Labels_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "requestData.includeLinks",
              "description": "Whether to include the _links field on the shallow references",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "requestData.itemLabelFilter",
              "description": "labelScope, name, owner, and itemLabelFilter",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.labelScope",
              "description": "labelScope, name, owner, and itemLabelFilter",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.maxItemCount",
              "description": "labelScope, name, owner, and itemLabelFilter",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestData.name",
              "description": "labelScope, name, owner, and itemLabelFilter",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.owner",
              "description": "labelScope, name, owner, and itemLabelFilter",
              "required": false,
              "type": "string"
            },
            {
              "name": "$top",
              "description": "Max number of labels to return, defaults to 100 when undefined",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "$skip",
              "description": "Number of labels to skip",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfvcLabelRef"
              }
            }
          }
        }
      }
    ],
    "GetLabel": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/tfvc/labels/{labelId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a single deep label.",
        "operationId": "Labels_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "labelId",
              "description": "Unique identifier of label",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "requestData.includeLinks",
              "description": "Whether to include the _links field on the shallow references",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "requestData.itemLabelFilter",
              "description": "maxItemCount",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.labelScope",
              "description": "maxItemCount",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.maxItemCount",
              "description": "maxItemCount",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestData.name",
              "description": "maxItemCount",
              "required": false,
              "type": "string"
            },
            {
              "name": "requestData.owner",
              "description": "maxItemCount",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TfvcLabel"
            }
          }
        }
      }
    ]
  },
  "tokenadmin": {
    "ListPersonalAccessTokens": [
      {
        "urlTemplate": "/{organization}/_apis/tokenadmin/personalaccesstokens/{subjectDescriptor}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Lists of all the session token details of the personal access tokens (PATs) for a particular user.",
        "operationId": "Personal Access Tokens_List",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "subjectDescriptor",
              "description": "The descriptor of the target user.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "pageSize",
              "description": "The maximum number of results to return on each page.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "continuationToken",
              "description": "An opaque data blob that allows the next page of data to resume immediately after where the previous page ended. The only reliable way to know if there is more data left is the presence of a continuation token.",
              "required": false,
              "type": "string"
            },
            {
              "name": "isPublic",
              "description": "Set to false for PAT tokens and true for SSH tokens.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "An an array containing all the session token objects corresponding to the user's PATs.",
            "schema": {
              "$ref": "#/definitions/TokenAdminPagedSessionTokens"
            }
          },
          "400": {
            "description": "The input is invalid, such as by containing an invalid subject descriptor, page size, or continuation token"
          },
          "401": {
            "description": "If the caller does not have permission to administrate tokens"
          },
          "404": {
            "description": "If the user with the given subject descriptor cannot be found."
          }
        }
      }
    ],
    "CreateRevocationRule": [
      {
        "urlTemplate": "/{organization}/_apis/tokenadmin/revocationrules",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a revocation rule to prevent the further usage of any OAuth authorizations that were created before the current point in time and which match the conditions in the rule.\n\nNot all kinds of OAuth authorizations can be revoked directly.\nSome, such as self-describing session tokens, must instead by revoked by creating a rule\nwhich will be evaluated and used to reject matching OAuth credentials at authentication time.\nRevocation rules created through this endpoint will apply to all credentials that were issued\nbefore the datetime at which the rule was created and which match one or more additional conditions.",
        "operationId": "Revocation Rules_Create",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "The revocation rule to create. The rule must specify a space-separated list of scopes, after which preexisting OAuth authorizations that match that any of the scopes will be rejected. For a list of all OAuth scopes supported by VSTS, see: https://docs.microsoft.com/en-us/vsts/integrate/get-started/authentication/oauth?view=vsts#scopes The rule may also specify the time before which to revoke tokens.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenAdminRevocationRule"
            }
          }
        },
        "responses": {
          "201": {
            "description": "The revocation rule was created successfully."
          },
          "400": {
            "description": "The input is invalid, such as by not containing a scope."
          },
          "401": {
            "description": "If the caller does not have permission to administrate tokens"
          }
        }
      }
    ],
    "RevokeAuthorizations": [
      {
        "urlTemplate": "/{organization}/_apis/tokenadmin/revocations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Revokes the listed OAuth authorizations.",
        "operationId": "Revocations_Revoke Authorizations",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "isPublic",
              "description": "Set to false for PAT tokens and true for SSH tokens.",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "The list of objects containing the authorization IDs of the OAuth authorizations, such as session tokens retrieved by listed a users PATs, that should be revoked.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TokenAdminRevocation"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The authorizations were deleted successfully."
          },
          "400": {
            "description": "The input is invalid, such as by not containing an authorization ID."
          },
          "401": {
            "description": "If the caller does not have permission to administrate tokens"
          }
        }
      }
    ]
  },
  "tokens": {
    "CreatePat": [
      {
        "urlTemplate": "/{organization}/_apis/tokens/pats",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a new personal access token (PAT) for the requesting user.",
        "operationId": "Pats_Create",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatTokenCreateRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        }
      }
    ],
    "GetPat": [
      {
        "urlTemplate": "/{organization}/_apis/tokens/pats",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets a single personal access token (PAT).",
        "operationId": "Pats_Get",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "authorizationId",
              "description": "The authorizationId identifying a single, unique personal access token (PAT)",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        }
      }
    ],
    "Revoke": [
      {
        "urlTemplate": "/{organization}/_apis/tokens/pats",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Revokes a personal access token (PAT) by authorizationId.",
        "operationId": "Pats_Revoke",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "authorizationId",
              "description": "The authorizationId identifying a single, unique personal access token (PAT)",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdatePat": [
      {
        "urlTemplate": "/{organization}/_apis/tokens/pats",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Updates an existing personal access token (PAT) with the new parameters. To update a token, it must be valid (has not been revoked).",
        "operationId": "Pats_Update",
        "host": "vssps.dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatTokenUpdateRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        }
      }
    ]
  },
  "wiki": {
    "CreateWiki": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis",
        "verb": "post",
        "apiVersion": "7.1-preview.2",
        "description": "Creates the wiki resource.",
        "operationId": "Wikis_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Parameters for the wiki creation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiCreateParametersV2"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Wiki created",
            "schema": {
              "$ref": "#/definitions/WikiV2"
            }
          }
        }
      }
    ],
    "GetAllWikis": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets all wikis in a project or collection.",
        "operationId": "Wikis_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WikiV2"
              }
            }
          }
        }
      }
    ],
    "DeleteWiki": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}",
        "verb": "delete",
        "apiVersion": "7.1-preview.2",
        "description": "Deletes the wiki corresponding to the wiki ID or wiki name provided.",
        "operationId": "Wikis_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Wiki deleted",
            "schema": {
              "$ref": "#/definitions/WikiV2"
            }
          }
        }
      }
    ],
    "GetWiki": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Gets the wiki corresponding to the wiki ID or wiki name provided.",
        "operationId": "Wikis_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiV2"
            }
          }
        }
      }
    ],
    "UpdateWiki": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Updates the wiki corresponding to the wiki ID or wiki name provided using the update parameters.",
        "operationId": "Wikis_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiV2"
            }
          }
        }
      }
    ],
    "CreateAttachment": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/attachments",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Creates an attachment in the wiki.",
        "operationId": "Attachments_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "name",
              "description": "Wiki attachment name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Stream to upload",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Stream"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Attachment created. Attachment's version is populated in the ETag response header.",
            "schema": {
              "$ref": "#/definitions/WikiAttachment"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "CreatePageMove": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pagemoves",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Creates a page move operation that updates the path and order of the page as provided in the parameters.",
        "operationId": "Page Moves_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "comment",
              "description": "Comment that is to be associated with this page move.",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Page more operation parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiPageMoveParameters"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Page move created. Moved page's version is populated in the ETag response header.",
            "schema": {
              "$ref": "#/definitions/WikiPageMove"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "CreateOrUpdatePage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Creates or edits a wiki page.",
        "operationId": "Pages_Create Or Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "Wiki page path.",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment",
              "description": "Comment to be associated with the page operation.",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": [
            {
              "name": "Version",
              "description": "Version of the page on which the change is to be made. Mandatory for `Edit` scenario. To be populated in the If-Match header of the request.",
              "required": true,
              "type": "string"
            }
          ],
          "body": {
            "name": "body",
            "description": "Wiki create or update operation parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiPageCreateOrUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Page edited. Edited page's version is populated in the ETag response header.",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Page created. Created page's version is populated in the ETag response header.",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeletePage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes a wiki page.",
        "operationId": "Pages_Delete Page",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "Wiki page path.",
              "required": true,
              "type": "string"
            },
            {
              "name": "comment",
              "description": "Comment to be associated with this page delete.",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Page deleted.",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetPage": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets metadata or content of the wiki page for the provided path. Content negotiation is done based on the `Accept` header sent in the request.",
        "operationId": "Pages_Get Page",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "path",
              "description": "Wiki page path.",
              "required": false,
              "type": "string"
            },
            {
              "name": "recursionLevel",
              "description": "Recursion level for subpages retrieval. Defaults to `None` (Optional).",
              "required": false,
              "type": "string",
              "enum": {
                "name": "VersionControlRecursionType",
                "values": [
                  {
                    "value": "none",
                    "description": "Only return the specified item."
                  },
                  {
                    "value": "oneLevel",
                    "description": "Return the specified item and its direct children."
                  },
                  {
                    "value": "oneLevelPlusNestedEmptyFolders",
                    "description": "Return the specified item and its direct children, as well as recursive chains of nested child folders that only contain a single folder."
                  },
                  {
                    "value": "full",
                    "description": "Return specified item and all descendants"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            },
            {
              "name": "includeContent",
              "description": "True to include the content of the page in the response for Json content type. Defaults to false (Optional)",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "DeletePageById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Deletes a wiki page.",
        "operationId": "Pages_Delete Page By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Wiki page ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "comment",
              "description": "Comment to be associated with this page delete.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "Page deleted.",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetPageById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets metadata or content of the wiki page for the provided page id. Content negotiation is done based on the `Accept` header sent in the request.",
        "operationId": "Pages_Get Page By Id",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name..",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Wiki page ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "recursionLevel",
              "description": "Recursion level for subpages retrieval. Defaults to `None` (Optional).",
              "required": false,
              "type": "string",
              "enum": {
                "name": "VersionControlRecursionType",
                "values": [
                  {
                    "value": "none",
                    "description": "Only return the specified item."
                  },
                  {
                    "value": "oneLevel",
                    "description": "Return the specified item and its direct children."
                  },
                  {
                    "value": "oneLevelPlusNestedEmptyFolders",
                    "description": "Return the specified item and its direct children, as well as recursive chains of nested child folders that only contain a single folder."
                  },
                  {
                    "value": "full",
                    "description": "Return specified item and all descendants"
                  }
                ]
              }
            },
            {
              "name": "includeContent",
              "description": "True to include the content of the page in the response for Json content type. Defaults to false (Optional)",
              "required": false,
              "type": "boolean"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "UpdatePageById": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{id}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Edits a wiki page.",
        "operationId": "Pages_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Wiki page ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "comment",
              "description": "Comment to be associated with the page operation.",
              "required": false,
              "type": "string"
            }
          ],
          "header": [
            {
              "name": "Version",
              "description": "Version of the page on which the change is to be made. Mandatory for `Edit` scenario. To be populated in the If-Match header of the request.",
              "required": true,
              "type": "string"
            }
          ],
          "body": {
            "name": "body",
            "description": "Wiki update operation parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiPageCreateOrUpdateParameters"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Page edited. Edited page's version is populated in the ETag response header.",
            "schema": {
              "$ref": "#/definitions/WikiPage"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetPageData": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pages/{pageId}/stats",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns page detail corresponding to Page ID.",
        "operationId": "Page Stats_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            },
            {
              "name": "pageId",
              "description": "Wiki page ID.",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [
            {
              "name": "pageViewsForDays",
              "description": "last N days from the current day for which page views is to be returned. It's inclusive of current day.",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WikiPageDetail"
            }
          }
        }
      }
    ],
    "GetPagesBatch": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/wiki/wikis/{wikiIdentifier}/pagesbatch",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Returns pageable list of Wiki Pages",
        "operationId": "Pages Batch_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "wikiIdentifier",
              "description": "Wiki ID or wiki name.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "versionDescriptor.version",
              "description": "Version string identifier (name of tag/branch, SHA1 of commit)",
              "required": false,
              "type": "string"
            },
            {
              "name": "versionDescriptor.versionOptions",
              "description": "Version options - Specify additional modifiers to version (e.g Previous)",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionOptions",
                "values": [
                  {
                    "value": "none",
                    "description": "Not specified"
                  },
                  {
                    "value": "previousChange",
                    "description": "Commit that changed item prior to the current version"
                  },
                  {
                    "value": "firstParent",
                    "description": "First parent of commit (HEAD^)"
                  }
                ]
              }
            },
            {
              "name": "versionDescriptor.versionType",
              "description": "Version type (branch, tag, or commit). Determines how Id is interpreted",
              "required": false,
              "type": "string",
              "enum": {
                "name": "GitVersionType",
                "values": [
                  {
                    "value": "branch",
                    "description": "Interpret the version as a branch name"
                  },
                  {
                    "value": "tag",
                    "description": "Interpret the version as a tag name"
                  },
                  {
                    "value": "commit",
                    "description": "Interpret the version as a commit ID (SHA1)"
                  }
                ]
              }
            }
          ],
          "header": [],
          "body": {
            "name": "body",
            "description": "Wiki batch page request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiPagesBatchRequest"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WikiPageDetail"
              }
            }
          }
        }
      }
    ]
  },
  "work": {
    "GetColumnSuggestedValues": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/boardcolumns",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get available board columns in a project",
        "operationId": "Boardcolumns_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        }
      }
    ],
    "GetRowSuggestedValues": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/boardrows",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get available board rows in a project",
        "operationId": "Boardrows_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardSuggestedValue"
              }
            }
          }
        }
      }
    ],
    "GetTotalIterationCapacities": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/iterations/{iterationId}/iterationcapacities",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an iteration's capacity for all teams in iteration",
        "operationId": "Iterationcapacities_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IterationCapacity"
            }
          }
        }
      }
    ],
    "CreatePlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add a new plan for the team",
        "operationId": "Plans_Create",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Plan definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePlan"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    ],
    "GetPlans": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the information for all the plans configured for the given team",
        "operationId": "Plans_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        }
      }
    ],
    "DeletePlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete the specified plan",
        "operationId": "Plans_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Identifier of the plan",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetPlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get the information for the specified plan",
        "operationId": "Plans_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Identifier of the plan",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    ],
    "UpdatePlan": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans/{id}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update the information for the specified plan",
        "operationId": "Plans_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Identifier of the plan",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Plan definition to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlan"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    ],
    "GetDeliveryTimelineData": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/plans/{id}/deliverytimeline",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get Delivery View Data",
        "operationId": "Deliverytimeline_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "Identifier for delivery view",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "revision",
              "description": "Revision of the plan for which you want data. If the current plan is a different revision you will get an ViewRevisionMismatchException exception. If you do not supply a revision you will get data for the latest revision.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "startDate",
              "description": "The start date of timeline",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "endDate",
              "description": "The end date of timeline",
              "required": false,
              "type": "string",
              "format": "date-time"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeliveryViewData"
            }
          }
        }
      }
    ],
    "GetProcessConfiguration": [
      {
        "urlTemplate": "/{organization}/{project}/_apis/work/processconfiguration",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get process configuration",
        "operationId": "Processconfiguration_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProcessConfiguration"
            }
          }
        }
      }
    ],
    "GetBacklogConfigurations": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/backlogconfiguration",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Gets backlog configuration for a team",
        "operationId": "Backlogconfiguration_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogConfiguration"
            }
          }
        }
      }
    ],
    "GetBacklogs": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/backlogs",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "List all backlog levels",
        "operationId": "Backlogs_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BacklogLevelConfiguration"
              }
            }
          }
        }
      }
    ],
    "GetBacklogLevelWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/backlogs/{backlogId}/workItems",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a list of work items within a backlog level",
        "operationId": "Backlogs_Get Backlog Level Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "backlogId",
              "description": "",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogLevelWorkItems"
            }
          }
        }
      }
    ],
    "GetBacklog": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/backlogs/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a backlog level",
        "operationId": "Backlogs_Get Backlog",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "The id of the backlog level",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BacklogLevelConfiguration"
            }
          }
        }
      }
    ],
    "GetBoards": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get boards",
        "operationId": "Boards_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardReference"
              }
            }
          }
        }
      }
    ],
    "GetBoardUserSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/boardusersettings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get board user settings for a board id",
        "operationId": "Boardusersettings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Board ID or Name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        }
      }
    ],
    "UpdateBoardUserSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/boardusersettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update board user settings for the board id\n\nWe don't want stakeholders to update board settings (currently just autorefresh). The BacklogManagement feature check validates this.",
        "operationId": "Boardusersettings_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardUserSettings"
            }
          }
        }
      }
    ],
    "GetBoardCardRuleSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardrulesettings",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get board card Rule settings for the board id or board by name",
        "operationId": "Cardrulesettings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        }
      }
    ],
    "UpdateBoardCardRuleSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardrulesettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update board card Rule settings for the board id or board by name",
        "operationId": "Cardrulesettings_Update Board Card Rule Settings",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        }
      }
    ],
    "GetBoardCardSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardsettings",
        "verb": "get",
        "apiVersion": "7.1-preview.2",
        "description": "Get board card settings for the board id or board by name",
        "operationId": "Cardsettings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        }
      }
    ],
    "UpdateBoardCardSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/cardsettings",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Update board card settings for the board id or board by name",
        "operationId": "Cardsettings_Update Board Card Settings",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        }
      }
    ],
    "GetBoardChartImage": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/chartimages/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a board chart image.",
        "operationId": "Chartimages_Get Board Chart Image",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Identifier for board, either board's backlog level name (e.g. \"Issues\") or Id.",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "The chart name. e.g. CumulativeFlow.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "width",
              "description": "The width of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "height",
              "description": "The height of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "showDetails",
              "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.).",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "title",
              "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        }
      }
    ],
    "GetBoardCharts": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/charts",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get board charts",
        "operationId": "Charts_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardChartReference"
              }
            }
          }
        }
      }
    ],
    "GetBoardChart": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/charts/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a board chart",
        "operationId": "Charts_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "The chart name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        }
      }
    ],
    "UpdateBoardChart": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/charts/{name}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a board chart",
        "operationId": "Charts_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "The chart name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardChart"
            }
          }
        }
      }
    ],
    "GetBoardColumns": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/columns",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get columns on a board",
        "operationId": "Columns_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Name or ID of the specific board",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        }
      }
    ],
    "UpdateBoardColumns": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/columns",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update columns on a board",
        "operationId": "Columns_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Name or ID of the specific board",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of board columns to update",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardColumn"
              }
            }
          }
        }
      }
    ],
    "GetBoardRows": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/rows",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get rows on a board",
        "operationId": "Rows_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Name or ID of the specific board",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        }
      }
    ],
    "UpdateBoardRows": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{board}/rows",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update rows on a board",
        "operationId": "Rows_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "board",
              "description": "Name or ID of the specific board",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "List of board rows to update",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardRow"
              }
            }
          }
        }
      }
    ],
    "GetBoard": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get board",
        "operationId": "Boards_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "identifier for board, either board's backlog level name (Eg:\"Stories\") or Id",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        }
      }
    ],
    "SetBoardOptions": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/{id}",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "Update board options",
        "operationId": "Boards_Set Board Options",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "identifier for board, either category plural name (Eg:\"Stories\") or guid",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "options to updated",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    ],
    "GetBoardMappingParentItems": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/boards/boardparents",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Returns the list of parent field filter model for the given list of workitem ids",
        "operationId": "Boardparents_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "childBacklogContextCategoryRefName",
              "description": "",
              "required": true,
              "type": "string"
            },
            {
              "name": "workitemIds",
              "description": "",
              "required": true,
              "type": "string",
              "format": "array (int32)"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParentChildWIMap"
              }
            }
          }
        }
      }
    ],
    "GetIterationChartImage": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/iterations/{iterationId}/chartimages/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an iteration chart image.",
        "operationId": "Chartimages_Get Iteration Chart Image",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration.",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "name",
              "description": "The chart name. e.g. Burndown.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "width",
              "description": "The width of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "height",
              "description": "The height of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "showDetails",
              "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.)",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "title",
              "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        }
      }
    ],
    "ReorderIterationWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/iterations/{iterationId}/workitemsorder",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Reorder Sprint Backlog/Taskboard Work Items",
        "operationId": "Workitemsorder_Reorder Iteration Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "The id of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderOperation"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReorderResult"
              }
            }
          }
        }
      }
    ],
    "GetIterationsChartImage": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/iterations/chartimages/{name}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get an iterations chart image.",
        "operationId": "Chartimages_Get Iterations Chart Image",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "The chart name. e.g. Velocity.",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "iterationsNumber",
              "description": "Number of iterations the chart is for.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "width",
              "description": "The width of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "height",
              "description": "The height of the chart in pixels. Must be greater than 0.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "showDetails",
              "description": "Whether or not the chart should include detailed information (e.g. axis labels, titles, trend lines, etc.)",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "title",
              "description": "The title of the chart. Can only be dislayed if ShowLabels is true.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "StreamContent"
            }
          }
        }
      }
    ],
    "UpdateTaskboardCardRuleSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboard/cardrulesettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.2",
        "description": "Update taskboard card Rule settings",
        "operationId": "Cardrulesettings_Update Taskboard Card Rule Settings",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardRuleSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "UpdateTaskboardCardSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboard/cardsettings",
        "verb": "put",
        "apiVersion": "7.1-preview.2",
        "description": "Update taskboard card settings",
        "operationId": "Cardsettings_Update Taskboard Card Settings",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardCardSettings"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetColumns": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboardcolumns",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Taskboard Columns_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskboardColumns"
            }
          }
        }
      }
    ],
    "UpdateColumns": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboardcolumns",
        "verb": "put",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Taskboard Columns_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateTaskboardColumn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskboardColumns"
            }
          }
        }
      }
    ],
    "GetWorkItemColumns": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboardworkitems/{iterationId}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Taskboard Work Items_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskboardWorkItemColumn"
              }
            }
          }
        }
      }
    ],
    "UpdateWorkItemColumn": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/taskboardworkitems/{iterationId}/{workItemId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "",
        "operationId": "Taskboard Work Items_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "workItemId",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTaskboardWorkItemColumn"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTeamSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a team's settings",
        "operationId": "Teamsettings_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        }
      }
    ],
    "UpdateTeamSettings": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update a team's settings",
        "operationId": "Teamsettings_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "TeamSettings changes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsPatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSetting"
            }
          }
        }
      }
    ],
    "GetTeamIterations": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a team's iterations using timeframe filter",
        "operationId": "Iterations_List",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [
            {
              "name": "$timeframe",
              "description": "A filter for which iterations are returned based on relative time. Only Current is supported currently.",
              "required": false,
              "type": "string"
            }
          ],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamSettingsIteration"
              }
            }
          }
        }
      }
    ],
    "PostTeamIteration": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations",
        "verb": "post",
        "apiVersion": "7.1-preview.1",
        "description": "Add an iteration to the team",
        "operationId": "Iterations_Post Team Iteration",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Iteration to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        }
      }
    ],
    "DeleteTeamIteration": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{id}",
        "verb": "delete",
        "apiVersion": "7.1-preview.1",
        "description": "Delete a team's iteration by iterationId",
        "operationId": "Iterations_Delete",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    ],
    "GetTeamIteration": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{id}",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get team's iteration by iterationId",
        "operationId": "Iterations_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsIteration"
            }
          }
        }
      }
    ],
    "GetCapacitiesWithIdentityRefAndTotals": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a team's capacity including total capacity and days off",
        "operationId": "Capacities_Get Capacities With Identity Ref And Totals",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamCapacity"
            }
          }
        }
      }
    ],
    "ReplaceCapacitiesWithIdentityRef": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities",
        "verb": "put",
        "apiVersion": "7.1-preview.3",
        "description": "Replace a team's capacity",
        "operationId": "Capacities_Replace Capacities With Identity Ref",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Team capacity to replace",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
              }
            }
          }
        }
      }
    ],
    "GetCapacityWithIdentityRef": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",
        "verb": "get",
        "apiVersion": "7.1-preview.3",
        "description": "Get a team member's capacity",
        "operationId": "Capacities_Get Capacity With Identity Ref",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "teamMemberId",
              "description": "ID of the team member",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
            }
          }
        }
      }
    ],
    "UpdateCapacityWithIdentityRef": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/capacities/{teamMemberId}",
        "verb": "patch",
        "apiVersion": "7.1-preview.3",
        "description": "Update a team member's capacity",
        "operationId": "Capacities_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "teamMemberId",
              "description": "ID of the team member",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Updated capacity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapacityPatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamMemberCapacityIdentityRef"
            }
          }
        }
      }
    ],
    "GetTeamDaysOff": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get team's days off for an iteration",
        "operationId": "Teamdaysoff_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        }
      }
    ],
    "UpdateTeamDaysOff": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/teamdaysoff",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Set a team's days off for an iteration",
        "operationId": "Teamdaysoff_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "Team's days off patch containing a list of start and end dates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOffPatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamSettingsDaysOff"
            }
          }
        }
      }
    ],
    "GetIterationWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/iterations/{iterationId}/workitems",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get work items for iteration",
        "operationId": "Iterations_Get Iteration Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "iterationId",
              "description": "ID of the iteration",
              "required": true,
              "type": "string",
              "format": "uuid"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/IterationWorkItems"
            }
          }
        }
      }
    ],
    "GetTeamFieldValues": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/teamfieldvalues",
        "verb": "get",
        "apiVersion": "7.1-preview.1",
        "description": "Get a collection of team field values",
        "operationId": "Teamfieldvalues_Get",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": []
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        }
      }
    ],
    "UpdateTeamFieldValues": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/teamsettings/teamfieldvalues",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Update team field values",
        "operationId": "Teamfieldvalues_Update",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamFieldValuesPatch"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TeamFieldValues"
            }
          }
        }
      }
    ],
    "ReorderBacklogWorkItems": [
      {
        "urlTemplate": "/{organization}/{project}/{team}/_apis/work/workitemsorder",
        "verb": "patch",
        "apiVersion": "7.1-preview.1",
        "description": "Reorder Product Backlog/Boards Work Items",
        "operationId": "Workitemsorder_Reorder Backlog Work Items",
        "host": "dev.azure.com",
        "parameters": {
          "path": [
            {
              "name": "organization",
              "description": "The name of the Azure DevOps organization.",
              "required": true,
              "type": "string"
            },
            {
              "name": "project",
              "description": "Project ID or project name",
              "required": true,
              "type": "string"
            },
            {
              "name": "team",
              "description": "Team ID or team name",
              "required": true,
              "type": "string"
            }
          ],
          "query": [],
          "header": [],
          "body": {
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderOperation"
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReorderResult"
              }
            }
          }
        }
      }
    ]
  }
}